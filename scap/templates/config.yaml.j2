# Number of worker processes to spawn.
# Set to 0 to run everything in a single process without clustering.
# Use 'ncpu' to run as many workers as there are CPU units
num_workers: ncpu * 1.5

# Number of workers to start in parallel after the first worker.
# The first worker is always started independently. After it has completed
# its start-up, this number controls the number of workers to start in
# parallel until `num_workers` have been started. Note that setting this
# number to a too high a value might lead to high resource consumption
# (especially of CPU) during the start-up process.
startup_concurrency: 4

# Log error messages and gracefully restart a worker if v8 reports that it
# uses more heap (note: not RSS) than this many mb.
worker_heap_limit_mb: 750

# The maximum interval in ms that can pass between two beat messages
# sent by each worker to the master before it is killed
worker_heartbeat_timeout: 15000

# Logger info
logging:
  level: warn
  name: mobileapps
  streams:
    - host: <%= logstash_host %>
      port: <%= logstash_port %>
      type: gelf
    - level: info
      path: <%= log_file %>
      type: file

# Statsd metrics reporter
metrics:
  name: mobileapps
  host: <%= metrics_host %>
  port: <%= metrics_port %>
  type: statsd

services:
  - name: mobileapps
    # a relative path or the name of an npm package, if different from name
    module: ./src/app.js
    # per-service config
    conf:
      port: <%= port %>
      # interface: localhost # uncomment to only listen on localhost
      # more per-service config settings
      # the location of the spec, defaults to spec.yaml if not specified
      # spec: ./spec.template.yaml
      # allow cross-domain requests to the API (default '*')
      cors: '*'
      # to disable use:
      # cors: false
      # to restrict to a particular domain, use:
      # cors: restricted.domain.org
      # content for the CSP headers
      # csp: false  # uncomment this line to disable sending them
      # URL of the outbound proxy to use (complete with protocol)
      # proxy: <%= proxy if proxy else '' %>
      # the list of domains for which not to use the proxy defined above
      # no_proxy_list:
      #  - eqiad.wmnet
      #  - codfw.wmnet
      #  - discovery.wmnet
      # the list of incoming request headers that can be logged; if left empty,
      # the following headers are allowed: cache-control, content-length,
      # content-type, if-match, user-agent, x-request-id
      # log_header_whitelist:
      #   - cache-control
      #   - content-length
      #   - content-type
      #   - if-match
      #   - user-agent
      #   - x-request-id
      # User-Agent HTTP header to use for requests
      user_agent: "Mobile-Content-Service/WMF"
      # the request template for contacting the MW API
      mwapi_req:
        method: post
        uri: <%= mwapi_uri %>
        headers:
          host: "{{request.params.domain}}"
          user-agent: "{{user-agent}}"
          accept-language: "{{accept-language}}"
        body: "{{ default(request.query, {}) }}"
      # the request template for contacting RESTBase
      restbase_req:
        method: "{{request.method}}"
        uri: <%= restbase_uri %>/{{domain}}/v1/{+path}
        query: "{{ default(request.query, {}) }}"
        headers: "{{request.headers}}"
        body: "{{request.body}}"
        timeout: 60000
      # REST API external base URIs (for injection into mobile-html output)
      mobile_html_rest_api_base_uri: '//meta.wikimedia.org/api/rest_v1/'
      mobile_html_local_rest_api_base_uri_template: '//{{domain}}/api/rest_v1/'
