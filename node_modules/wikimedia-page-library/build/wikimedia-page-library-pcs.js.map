{"version":3,"sources":["webpack://pagelib/webpack/universalModuleDefinition","webpack://pagelib/webpack/bootstrap","webpack://pagelib/./src/transform/Polyfill.js","webpack://pagelib/./src/transform/ElementUtilities.js","webpack://pagelib/./src/transform/CollapseTable.js","webpack://pagelib/./src/transform/Throttle.js","webpack://pagelib/./src/transform/NodeUtilities.js","webpack://pagelib/./src/transform/LazyLoadTransform.ts","webpack://pagelib/./src/transform/ElementGeometry.js","webpack://pagelib/./src/transform/PlatformTransform.js","webpack://pagelib/./src/transform/ThemeTransform.js","webpack://pagelib/./src/transform/AdjustTextSize.ts","webpack://pagelib/./src/transform/BodySpacingTransform.ts","webpack://pagelib/./src/transform/DimImagesTransform.js","webpack://pagelib/./src/transform/LazyLoadTransformer.js","webpack://pagelib/./src/pcs/c1/Scroller.js","webpack://pagelib/./src/pcs/index.js","webpack://pagelib/./src/pcs/c1/index.js","webpack://pagelib/./src/pcs/c1/PageMods.js","webpack://pagelib/./src/pcs/c1/Platforms.js","webpack://pagelib/./src/pcs/c1/Themes.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CustomEvent","window","type","parameters","arguments","length","undefined","bubbles","cancelable","detail","event","document","createEvent","initCustomEvent","matchesSelector","el","selector","matches","webkitMatchesSelector","querySelectorAll","element","Array","slice","_Polyfill","findClosestAncestor","parentElement","Polyfill","isNestedInTable","Boolean","closestInlineStyle","thisValue","style","isVisible","offsetWidth","offsetHeight","getClientRects","copyAttributesToDataAttributes","source","destination","attributes","filter","attribute","hasAttribute","forEach","setAttribute","getAttribute","copyDataAttributesToAttributes","NODE_TYPE","NodeUtilities","CLASS","isHeaderEligible","header","childNodes","isHeaderTextEligible","headerText","replace","firstWordFromString","string","match","isNodeTextContentSimilarToPageTitle","node","pageTitle","firstPageTitleWord","firstNodeTextContentWord","textContent","toLowerCase","stringWithNormalizedWhitespace","trim","isNodeBreakElement","nodeType","ELEMENT_NODE","tagName","replaceNodeWithBreakingSpaceTextNode","parentNode","replaceChild","createTextNode","extractEligibleHeaderText","fragment","createDocumentFragment","appendChild","cloneNode","fragmentHeader","querySelector","remove","childNodesArray","isNodeTypeElementOrText","elementScopeComparator","a","b","aHasScope","bHasScope","getTableHeaderTextArray","headerTextArray","headers","sort","indexOf","push","toggleCollapsedForContainer","container","trigger","footerDivClickCallback","children","table","footer","caption","collapsed","display","classList","add","visibility","toggleCollapseClickCallback","shouldTableBeCollapsed","blacklistIntersects","some","clazz","contains","isInfobox","newCollapsedHeaderDiv","content","div","createElement","newCollapsedFooterDiv","innerHTML","newCaptionFragment","title","strong","span","prepareTables","infoboxTitle","otherTitle","footerTitle","tables","ElementUtilities","captionFragment","containerDiv","className","insertBefore","removeChild","marginTop","marginBottom","collapsedHeaderDiv","collapsedFooterDiv","toggleCollapsedForAll","setupEventHandling","isInitiallyCollapsed","dispatchSectionToggledEvent","dispatchEvent","onclick","adjustTables","isMainPage","SECTION_TOGGLED_EVENT_TYPE","collapseTables","expandCollapsedTableIfItContainsElement","containerSelector","collapsedDiv","firstElementChild","click","test","Throttle","period","funktion","_classCallCheck","_window","_period","_function","_context","_arguments","_result","_timeout","_timestamp","throttle","throttled","queue","result","pending","delay","cancel","reset","context","args","_this","setTimeout","Date","now","apply","Math","max","clearTimeout","TEXT_NODE","ElementGeometry","default","COPY_ATTRIBUTES","UNIT_TO_MINIMUM_LAZY_LOAD_SIZE","px","ex","em","PLACEHOLDER_CLASS","queryLazyLoadableImages","image","geometry","from","width","height","minWidth","widthUnit","Infinity","minHeight","heightUnit","widthValue","heightValue","isLazyLoadable","convertImagesToPlaceholders","images","map","placeholder","setProperty","spacing","ratio","convertImageToPlaceholder","loadPlaceholder","retryListener","stopPropagation","preventDefault","addEventListener","removeEventListener","once","DimensionUnit","unit","_value","Number","_unit","getPropertyValue","fromStyle","isNaN","_width","_height","fromElement","NaN","ANDROID","IOS","classify","html","navigator","userAgent","isAndroid","isIOs","setPlatform","platform","CONSTRAINT","IMAGE_PRESUMES_WHITE_BACKGROUND","DIV_DO_NOT_APPLY_BASELINE","THEME","DEFAULT","DARK","SEPIA","BLACK","footballTemplateImageFilenameRegex","RegExp","imagePresumesWhiteBackground","src","setTheme","theme","classifyElements","join","setPercentage","body","textSize","setMargins","bodyElement","values","top","right","marginRight","bottom","left","marginLeft","setPadding","paddingTop","paddingRight","paddingBottom","paddingLeft","dimImages","enable","areImagesDimmed","dim","isDim","EVENT_TYPES","CollapseTable","THROTTLE_PERIOD_MILLISECONDS","_class","loadDistanceMultiplier","_loadDistanceMultiplier","_placeholders","_registered","_throttledLoadPlaceholders","wrap","_loadPlaceholders","LazyLoadTransform","placeholders","concat","_register","_this2","eventType","_this3","_this4","_isPlaceholderEligibleToLoad","deregister","_isPlaceholderWithinLoadDistance","bounds","getBoundingClientRect","range","innerHeight","scrollTop","setScrollTop","newValue","scrollWithDecorOffset","scrollTo","offsetTop","testing","getScrollTop","_c","c1","Platforms","PageMods","Scroller","Themes","onPageLoad","lazyLoader","LazyLoadTransformer","collectExistingPlaceholders","loadPlaceholders","setMulti","settings","onSuccess","PlatformTransform","ThemeTransform","DimImagesTransform","margins","BodySpacingTransform","areTablesCollapsed","textSizeAdjustmentPercentage","AdjustTextSize","Function","setDimImages","setTextSizeAdjustmentPercentage","getScroller","_PlatformTransform","_ThemeTransform"],"mappings":"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","file":"wikimedia-page-library-pcs.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pagelib\"] = factory();\n\telse\n\t\troot[\"pagelib\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","/**\n * Polyfill function that tells whether a given element matches a selector.\n * @param {!Element} el Element\n * @param {!string} selector Selector to look for\n * @return {!boolean} Whether the element matches the selector\n */\nconst matchesSelector = (el, selector) => {\n  if (el.matches) {\n    return el.matches(selector)\n  }\n  if (el.matchesSelector) {\n    return el.matchesSelector(selector)\n  }\n  if (el.webkitMatchesSelector) {\n    return el.webkitMatchesSelector(selector)\n  }\n  return false\n}\n\n/**\n * @param {!Element} element\n * @param {!string} selector\n * @return {!Array.<Element>}\n */\nconst querySelectorAll = (element, selector) =>\n  Array.prototype.slice.call(element.querySelectorAll(selector))\n\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill\n// Required by Android API 16 AOSP Nexus S emulator.\n// eslint-disable-next-line no-undef\nconst CustomEvent = typeof window !== 'undefined' && window.CustomEvent\n  || function(type, parameters = { bubbles: false, cancelable: false, detail: undefined }) {\n    // eslint-disable-next-line no-undef\n    const event = document.createEvent('CustomEvent')\n    event.initCustomEvent(type, parameters.bubbles, parameters.cancelable, parameters.detail)\n    return event\n  }\n\nexport default {\n  matchesSelector,\n  querySelectorAll,\n  CustomEvent\n}","import Polyfill from './Polyfill'\n\n// todo: drop ancestor consideration and move to Polyfill.closest().\n/**\n * Returns closest ancestor of element which matches selector.\n * Similar to 'closest' methods as seen here:\n *  https://api.jquery.com/closest/\n *  https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n * @param  {!Element} el        Element\n * @param  {!string} selector   Selector to look for in ancestors of 'el'\n * @return {?HTMLElement}       Closest ancestor of 'el' matching 'selector'\n */\nconst findClosestAncestor = (el, selector) => {\n  let parentElement\n  for (parentElement = el.parentElement;\n    parentElement && !Polyfill.matchesSelector(parentElement, selector);\n    parentElement = parentElement.parentElement) {\n    // Intentionally empty.\n  }\n  return parentElement\n}\n\n/**\n * @param {?Element} element\n * @param {!string} property\n * @param {?string} value\n * @return {?Element} The inclusive first element with an inline style (and optional value) or\n * undefined.\n */\nconst closestInlineStyle = (element, property, value) => {\n  for (let el = element; el; el = el.parentElement) {\n    const thisValue = el.style[property]\n    if (thisValue) {\n      if (value === undefined) {\n        return el\n      }\n      if (value === thisValue) {\n        return el\n      }\n    }\n  }\n  return undefined\n}\n\n/**\n * Determines if element has a table ancestor.\n * @param  {!Element}  el   Element\n * @return {!boolean}       Whether table ancestor of 'el' is found\n */\nconst isNestedInTable = el => Boolean(findClosestAncestor(el, 'table'))\n\n/**\n * @param {!HTMLElement} element\n * @return {!boolean} true if element affects layout, false otherwise.\n */\nconst isVisible = element =>\n  // https://github.com/jquery/jquery/blob/305f193/src/css/hiddenVisibleSelectors.js#L12\n  Boolean(element.offsetWidth || element.offsetHeight || element.getClientRects().length)\n\n/**\n * Copy existing attributes from source to destination as data-* attributes.\n * @param {!HTMLElement} source\n * @param {!HTMLElement} destination\n * @param {!Array.<string>} attributes\n * @return {void}\n */\nconst copyAttributesToDataAttributes = (source, destination, attributes) => {\n  attributes.filter(attribute => source.hasAttribute(attribute))\n    .forEach(attribute =>\n      destination.setAttribute(`data-${attribute}`, source.getAttribute(attribute)))\n}\n\n/**\n * Copy existing data-* attributes from source to destination as attributes.\n * @param {!HTMLElement} source\n * @param {!HTMLElement} destination\n * @param {!Array.<string>} attributes\n * @return {void}\n */\nconst copyDataAttributesToAttributes = (source, destination, attributes) => {\n  attributes.filter(attribute => source.hasAttribute(`data-${attribute}`))\n    .forEach(attribute =>\n      destination.setAttribute(attribute, source.getAttribute(`data-${attribute}`)))\n}\n\nexport default {\n  findClosestAncestor,\n  isNestedInTable,\n  closestInlineStyle,\n  isVisible,\n  copyAttributesToDataAttributes,\n  copyDataAttributesToAttributes\n}","import './CollapseTable.css'\nimport ElementUtilities from './ElementUtilities'\nimport NodeUtilities from './NodeUtilities'\nimport Polyfill from './Polyfill'\n\nconst NODE_TYPE = NodeUtilities.NODE_TYPE\n\nconst SECTION_TOGGLED_EVENT_TYPE = 'section-toggled'\nconst BREAKING_SPACE = ' '\nconst CLASS = {\n  ICON: 'pagelib_collapse_table_icon',\n  CONTAINER: 'pagelib_collapse_table_container',\n  COLLAPSED_CONTAINER: 'pagelib_collapse_table_collapsed_container',\n  COLLAPSED: 'pagelib_collapse_table_collapsed',\n  COLLAPSED_BOTTOM: 'pagelib_collapse_table_collapsed_bottom',\n  COLLAPSE_TEXT: 'pagelib_collapse_table_collapse_text',\n  EXPANDED: 'pagelib_collapse_table_expanded',\n}\n\n/**\n * Determine if we want to extract text from this header.\n * @param {!Element} header\n * @return {!boolean}\n */\nconst isHeaderEligible =\n  header => header.childNodes && Polyfill.querySelectorAll(header, 'a').length < 3\n\n/**\n * Determine eligibility of extracted text.\n * @param {?string} headerText\n * @return {!boolean}\n */\nconst isHeaderTextEligible = headerText =>\n  headerText && headerText.replace(/[\\s0-9]/g, '').length > 0\n\n/**\n * Extracts first word from string. Returns null if for any reason it is unable to do so.\n * @param  {!string} string\n * @return {?string}\n */\nconst firstWordFromString = string => {\n  // 'If the global flag (g) is not set, Element zero of the array contains the entire match,\n  // while elements 1 through n contain any submatches.'\n  const matches = string.match(/\\w+/) // Only need first match so not using 'g' option.\n  if (!matches) {\n    return undefined\n  }\n  return matches[0]\n}\n\n/**\n * Is node's textContent too similar to pageTitle. Checks if the first word of the node's\n * textContent is found at the beginning of pageTitle.\n * @param  {!Node} node\n * @param  {!string} pageTitle\n * @return {!boolean}\n */\nconst isNodeTextContentSimilarToPageTitle = (node, pageTitle) => {\n  const firstPageTitleWord = firstWordFromString(pageTitle)\n  const firstNodeTextContentWord = firstWordFromString(node.textContent)\n  // Don't claim similarity if 1st words were not extracted.\n  if (!firstPageTitleWord || !firstNodeTextContentWord) {\n    return false\n  }\n  return firstPageTitleWord.toLowerCase() === firstNodeTextContentWord.toLowerCase()\n}\n\n/**\n * Removes leading and trailing whitespace and normalizes other whitespace - i.e. ensures\n * non-breaking spaces, tabs, etc are replaced with regular breaking spaces.\n * @param  {!string} string\n * @return {!string}\n */\nconst stringWithNormalizedWhitespace = string => string.trim().replace(/\\s/g, BREAKING_SPACE)\n\n/**\n * Determines if node is a BR.\n * @param  {!Node}  node\n * @return {!boolean}\n */\nconst isNodeBreakElement = node => node.nodeType === NODE_TYPE.ELEMENT_NODE && node.tagName === 'BR'\n\n/**\n * Replace node with a text node bearing a single breaking space.\n * @param {!Document} document\n * @param  {!Node} node\n * @return {void}\n */\nconst replaceNodeWithBreakingSpaceTextNode = (document, node) => {\n  node.parentNode.replaceChild(document.createTextNode(BREAKING_SPACE), node)\n}\n\n/**\n * Extracts any header text determined to be eligible.\n * @param {!Document} document\n * @param {!Element} header\n * @param {?string} pageTitle\n * @return {?string}\n */\nconst extractEligibleHeaderText = (document, header, pageTitle) => {\n  if (!isHeaderEligible(header)) {\n    return null\n  }\n  // Clone header into fragment. This is done so we can remove some elements we don't want\n  // represented when \"textContent\" is used. Because we've cloned the header into a fragment, we are\n  // free to strip out anything we want without worrying about affecting the visible document.\n  const fragment = document.createDocumentFragment()\n  fragment.appendChild(header.cloneNode(true))\n  const fragmentHeader = fragment.querySelector('th')\n\n  Polyfill.querySelectorAll(\n    fragmentHeader, '.geo, .coordinates, sup.reference, ol, ul, style, script'\n  ).forEach(el => el.remove())\n\n  const childNodesArray = Array.prototype.slice.call(fragmentHeader.childNodes)\n  if (pageTitle) {\n    childNodesArray\n      .filter(NodeUtilities.isNodeTypeElementOrText)\n      .filter(node => isNodeTextContentSimilarToPageTitle(node, pageTitle))\n      .forEach(node => node.remove())\n  }\n\n  childNodesArray\n    .filter(isNodeBreakElement)\n    .forEach(node => replaceNodeWithBreakingSpaceTextNode(document, node))\n\n  const headerText = fragmentHeader.textContent\n  if (isHeaderTextEligible(headerText)) {\n    return stringWithNormalizedWhitespace(headerText)\n  }\n  return null\n}\n\n/**\n * Used to sort array of Elements so those containing 'scope' attribute are moved to front of\n * array. Relative order between 'scope' elements is preserved. Relative order between non 'scope'\n * elements is preserved.\n * @param  {!Element} a\n * @param  {!Element} b\n * @return {!number}\n */\nconst elementScopeComparator = (a, b) => {\n  const aHasScope = a.hasAttribute('scope')\n  const bHasScope = b.hasAttribute('scope')\n  if (aHasScope && bHasScope) {\n    return 0\n  }\n  if (aHasScope) {\n    return -1\n  }\n  if (bHasScope) {\n    return 1\n  }\n  return 0\n}\n\n/**\n * Find an array of table header (TH) contents. If there are no TH elements in\n * the table or the header's link matches pageTitle, an empty array is returned.\n * @param {!Document} document\n * @param {!Element} element\n * @param {?string} pageTitle Unencoded page title; if this title matches the\n *                            contents of the header exactly, it will be omitted.\n * @return {!Array<string>}\n */\nconst getTableHeaderTextArray = (document, element, pageTitle) => {\n  const headerTextArray = []\n  const headers = Polyfill.querySelectorAll(element, 'th')\n  headers.sort(elementScopeComparator)\n  for (let i = 0; i < headers.length; ++i) {\n    const headerText = extractEligibleHeaderText(document, headers[i], pageTitle)\n    if (headerText && headerTextArray.indexOf(headerText) === -1) {\n      headerTextArray.push(headerText)\n      // 'newCaptionFragment' only ever uses the first 2 items.\n      if (headerTextArray.length === 2) {\n        break\n      }\n    }\n  }\n  return headerTextArray\n}\n\n/**\n * @typedef {function} FooterDivClickCallback\n * @param {!HTMLElement}\n * @return {void}\n */\n\n/**\n * @param {!Element} container div\n * @param {?Element} trigger element that was clicked or tapped\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {boolean} true if collapsed, false if expanded.\n */\nconst toggleCollapsedForContainer = function(container, trigger, footerDivClickCallback) {\n  const header = container.children[0]\n  const table = container.children[1]\n  const footer = container.children[2]\n  const caption = header.querySelector('.app_table_collapsed_caption')\n  const collapsed = table.style.display !== 'none'\n  if (collapsed) {\n    table.style.display = 'none'\n    header.classList.remove(CLASS.COLLAPSED)\n    header.classList.remove(CLASS.ICON)\n    header.classList.add(CLASS.EXPANDED)\n    if (caption) {\n      caption.style.visibility = 'visible'\n    }\n    footer.style.display = 'none'\n    // if they clicked the bottom div, then scroll back up to the top of the table.\n    if (trigger === footer && footerDivClickCallback) {\n      footerDivClickCallback(container)\n    }\n  } else {\n    table.style.display = 'block'\n    header.classList.remove(CLASS.EXPANDED)\n    header.classList.add(CLASS.COLLAPSED)\n    header.classList.add(CLASS.ICON)\n    if (caption) {\n      caption.style.visibility = 'hidden'\n    }\n    footer.style.display = 'block'\n  }\n  return collapsed\n}\n\n/**\n * Ex: toggleCollapseClickCallback.bind(el, (container) => {\n *       window.scrollTo(0, container.offsetTop - transformer.getDecorOffset())\n *     })\n * @this HTMLElement\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {boolean} true if collapsed, false if expanded.\n */\nconst toggleCollapseClickCallback = function(footerDivClickCallback) {\n  const container = this.parentNode\n  return toggleCollapsedForContainer(container, this, footerDivClickCallback)\n}\n\n/**\n * @param {!HTMLElement} table\n * @return {!boolean} true if table should be collapsed, false otherwise.\n */\nconst shouldTableBeCollapsed = table => {\n  const classBlacklist = ['navbox', 'vertical-navbox', 'navbox-inner', 'metadata', 'mbox-small']\n  const blacklistIntersects = classBlacklist.some(clazz => table.classList.contains(clazz))\n  return table.style.display !== 'none' && !blacklistIntersects\n}\n\n/**\n * @param {!Element} element\n * @return {!boolean} true if element is an infobox, false otherwise.\n */\nconst isInfobox = element =>\n  element.classList.contains('infobox')\n  || element.classList.contains('infobox_v3')\n\n/**\n * @param {!Document} document\n * @param {!DocumentFragment} content\n * @return {!HTMLDivElement}\n */\nconst newCollapsedHeaderDiv = (document, content) => {\n  const div = document.createElement('div')\n  div.classList.add(CLASS.COLLAPSED_CONTAINER)\n  div.classList.add(CLASS.EXPANDED)\n  div.appendChild(content)\n  return div\n}\n\n/**\n * @param {!Document} document\n * @param {?string} content HTML string.\n * @return {!HTMLDivElement}\n */\nconst newCollapsedFooterDiv = (document, content) => {\n  const div = document.createElement('div')\n  div.classList.add(CLASS.COLLAPSED_BOTTOM)\n  div.classList.add(CLASS.ICON)\n  div.innerHTML = content || ''\n  return div\n}\n\n/**\n * @param {!Document} document\n * @param {!string} title\n * @param {!Array.<string>} headerText\n * @return {!DocumentFragment}\n */\nconst newCaptionFragment = (document, title, headerText) => {\n  const fragment = document.createDocumentFragment()\n\n  const strong = document.createElement('strong')\n  strong.innerHTML = title\n  fragment.appendChild(strong)\n\n  const span = document.createElement('span')\n  span.classList.add(CLASS.COLLAPSE_TEXT)\n  if (headerText.length > 0) {\n    span.appendChild(document.createTextNode(`: ${headerText[0]}`))\n  }\n  if (headerText.length > 1) {\n    span.appendChild(document.createTextNode(`, ${headerText[1]}`))\n  }\n  if (headerText.length > 0) {\n    span.appendChild(document.createTextNode(' …'))\n  }\n  fragment.appendChild(span)\n\n  return fragment\n}\n\n/**\n * @param {!Document} document\n * @param {?string} pageTitle use title for this not `display title` (which can contain tags)\n * @param {?string} infoboxTitle\n * @param {?string} otherTitle\n * @param {?string} footerTitle\n * @return {void}\n */\nconst prepareTables = (document, pageTitle, infoboxTitle, otherTitle, footerTitle) => {\n  const tables = document.querySelectorAll('table, .infobox_v3')\n  for (let i = 0; i < tables.length; ++i) {\n    const table = tables[i]\n\n    if (ElementUtilities.findClosestAncestor(table, `.${CLASS.CONTAINER}`)\n      || !shouldTableBeCollapsed(table)) {\n      continue\n    }\n\n    const headerTextArray = getTableHeaderTextArray(document, table, pageTitle)\n    if (!headerTextArray.length && !isInfobox(table)) {\n      continue\n    }\n    const captionFragment =\n      newCaptionFragment(document, isInfobox(table) ? infoboxTitle : otherTitle, headerTextArray)\n\n    // create the container div that will contain both the original table\n    // and the collapsed version.\n    const containerDiv = document.createElement('div')\n    containerDiv.className = CLASS.CONTAINER\n    table.parentNode.insertBefore(containerDiv, table)\n    table.parentNode.removeChild(table)\n\n    // remove top and bottom margin from the table, so that it's flush with\n    // our expand/collapse buttons\n    table.style.marginTop = '0px'\n    table.style.marginBottom = '0px'\n\n    const collapsedHeaderDiv = newCollapsedHeaderDiv(document, captionFragment)\n    collapsedHeaderDiv.style.display = 'block'\n\n    const collapsedFooterDiv = newCollapsedFooterDiv(document, footerTitle)\n    collapsedFooterDiv.style.display = 'none'\n\n    // add our stuff to the container\n    containerDiv.appendChild(collapsedHeaderDiv)\n    containerDiv.appendChild(table)\n    containerDiv.appendChild(collapsedFooterDiv)\n\n    // set initial visibility\n    table.style.display = 'none'\n  }\n}\n\n/**\n * @param {!Element} container root element to search from\n * @return {void}\n */\nconst toggleCollapsedForAll = container => {\n  const containerDivs = Polyfill.querySelectorAll(container, `.${CLASS.CONTAINER}`)\n  containerDivs.forEach(containerDiv => {\n    toggleCollapsedForContainer(containerDiv)\n  })\n}\n\n/**\n * @param {!Window} window\n * @param {!Element} container root element to search from\n * @param {?boolean} isInitiallyCollapsed\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {void}\n */\nconst setupEventHandling = (window, container, isInitiallyCollapsed, footerDivClickCallback) => {\n  /**\n   * @param {boolean} collapsed\n   * @return {boolean}\n   */\n  const dispatchSectionToggledEvent = collapsed =>\n    window.dispatchEvent(new Polyfill.CustomEvent(SECTION_TOGGLED_EVENT_TYPE, { collapsed }))\n\n  // assign click handler to the collapsed divs\n  const collapsedHeaderDivs = Polyfill.querySelectorAll(container, `.${CLASS.COLLAPSED_CONTAINER}`)\n  collapsedHeaderDivs.forEach(collapsedHeaderDiv => {\n    collapsedHeaderDiv.onclick = () => {\n      const collapsed = toggleCollapseClickCallback.bind(collapsedHeaderDiv)()\n      dispatchSectionToggledEvent(collapsed)\n    }\n  })\n\n  const collapsedFooterDivs = Polyfill.querySelectorAll(container, `.${CLASS.COLLAPSED_BOTTOM}`)\n  collapsedFooterDivs.forEach(collapsedFooterDiv => {\n    collapsedFooterDiv.onclick = () => {\n      const collapsed = toggleCollapseClickCallback.bind(collapsedFooterDiv,\n        footerDivClickCallback)()\n      dispatchSectionToggledEvent(collapsed)\n    }\n  })\n\n  if (!isInitiallyCollapsed) {\n    toggleCollapsedForAll(container)\n  }\n}\n\n/**\n * @param {!Window} window\n * @param {!Document} document\n * @param {?string} pageTitle use title for this not `display title` (which can contain tags)\n * @param {?boolean} isMainPage\n * @param {?boolean} isInitiallyCollapsed\n * @param {?string} infoboxTitle\n * @param {?string} otherTitle\n * @param {?string} footerTitle\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {void}\n */\nconst adjustTables = (window, document, pageTitle, isMainPage, isInitiallyCollapsed,\n  infoboxTitle, otherTitle, footerTitle, footerDivClickCallback) => {\n  if (isMainPage) { return }\n\n  prepareTables(document, pageTitle, infoboxTitle, otherTitle, footerTitle)\n  setupEventHandling(window, document, isInitiallyCollapsed, footerDivClickCallback)\n}\n\n/**\n * @param {!Window} window\n * @param {!Document} document\n * @param {?string} pageTitle use title for this not `display title` (which can contain tags)\n * @param {?boolean} isMainPage\n * @param {?string} infoboxTitle\n * @param {?string} otherTitle\n * @param {?string} footerTitle\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {void}\n */\nconst collapseTables = (window, document, pageTitle, isMainPage, infoboxTitle, otherTitle,\n  footerTitle, footerDivClickCallback) => {\n  adjustTables(window, document, pageTitle, isMainPage, true, infoboxTitle, otherTitle,\n    footerTitle, footerDivClickCallback)\n}\n\n/**\n * If you tap a reference targeting an anchor within a collapsed table, this\n * method will expand the references section. The client can then scroll to the\n * references section.\n *\n * The first reference (an \"[A]\") in the \"enwiki > Airplane\" article from ~June\n * 2016 exhibits this issue. (You can copy wikitext from this revision into a\n * test wiki page for testing.)\n * @param  {?Element} element\n * @return {void}\n*/\nconst expandCollapsedTableIfItContainsElement = element => {\n  if (element) {\n    const containerSelector = `[class*=\"${CLASS.CONTAINER}\"]`\n    const container = ElementUtilities.findClosestAncestor(element, containerSelector)\n    if (container) {\n      const collapsedDiv = container.firstElementChild\n      if (collapsedDiv && collapsedDiv.classList.contains(CLASS.EXPANDED)) {\n        collapsedDiv.click()\n      }\n    }\n  }\n}\n\nexport default {\n  SECTION_TOGGLED_EVENT_TYPE,\n  toggleCollapsedForAll,\n  toggleCollapseClickCallback,\n  collapseTables,\n  adjustTables,\n  prepareTables,\n  setupEventHandling,\n  expandCollapsedTableIfItContainsElement,\n  test: {\n    elementScopeComparator,\n    extractEligibleHeaderText,\n    firstWordFromString,\n    getTableHeaderTextArray,\n    shouldTableBeCollapsed,\n    isHeaderEligible,\n    isHeaderTextEligible,\n    isInfobox,\n    newCollapsedHeaderDiv,\n    newCollapsedFooterDiv,\n    newCaptionFragment,\n    isNodeTextContentSimilarToPageTitle,\n    stringWithNormalizedWhitespace,\n    replaceNodeWithBreakingSpaceTextNode\n  }\n}","/** Function rate limiter. */\nexport default class Throttle {\n  /**\n   * The function to invoke when not throttled.\n   *\n   * @callback NotThrottledFunction\n   */\n\n  /**\n   * A function wrapped in a Throttle.\n   *\n   * @callback WrappedFunction\n   */\n\n  /**\n   * Wraps a function in a Throttle.\n   * @param {!Window} window\n   * @param {!number} period The nonnegative minimum number of milliseconds between function\n   *                         invocations.\n   * @param {!NotThrottledFunction} funktion\n   * @return {!WrappedFunction}\n   */\n  static wrap(window, period, funktion) {\n    const throttle = new Throttle(window, period, funktion)\n    const throttled = function Throttled() { return throttle.queue(this, arguments) }\n    throttled.result = () => throttle.result\n    throttled.pending = () => throttle.pending()\n    throttled.delay = () => throttle.delay()\n    throttled.cancel = () => throttle.cancel()\n    throttled.reset = () => throttle.reset()\n    return throttled\n  }\n\n  /**\n   * @param {!Window} window\n   * @param {!number} period The nonnegative minimum number of milliseconds between function\n   *                         invocations.\n   * @param {!NotThrottledFunction} funktion\n   */\n  constructor(window, period, funktion) {\n    this._window = window\n    this._period = period\n    this._function = funktion\n\n    // The upcoming invocation's context and arguments.\n    this._context = undefined\n    this._arguments = undefined\n\n    // The previous invocation's result, timeout identifier, and last run timestamp.\n    this._result = undefined\n    this._timeout = 0\n    this._timestamp = 0\n  }\n\n  /**\n   * The return value of the initial run is always undefined. The return value of subsequent runs is\n   * always a previous result. The context and args used by a future invocation are always the most\n   * recently supplied. Invocations, even if immediately eligible, are dispatched.\n   * @param {?any} context\n   * @param {?any} args The arguments passed to the underlying function.\n   * @return {?any} The cached return value of the underlying function.\n   */\n  queue(context, args) {\n    // Always update the this and arguments to the latest supplied.\n    this._context = context\n    this._arguments = args\n\n    if (!this.pending()) {\n      // Queue a new invocation.\n      this._timeout = this._window.setTimeout(() => {\n        this._timeout = 0\n        this._timestamp = Date.now()\n        this._result = this._function.apply(this._context, this._arguments)\n      }, this.delay())\n    }\n\n    // Always return the previous result.\n    return this.result\n  }\n\n  /** @return {?any} The cached return value of the underlying function. */\n  get result() { return this._result }\n\n  /** @return {!boolean} true if an invocation is queued. */\n  pending() { return Boolean(this._timeout) }\n\n  /**\n   * @return {!number} The nonnegative number of milliseconds until an invocation is eligible to\n   *                   run.\n   */\n  delay() {\n    if (!this._timestamp) { return 0 }\n    return Math.max(0, this._period - (Date.now() - this._timestamp))\n  }\n\n  /**\n   * Clears any pending invocation but doesn't clear time last invoked or prior result.\n   * @return {void}\n   */\n  cancel() {\n    if (this._timeout) { this._window.clearTimeout(this._timeout) }\n    this._timeout = 0\n  }\n\n  /**\n   * Clears any pending invocation, time last invoked, and prior result.\n   * @return {void}\n   */\n  reset() {\n    this.cancel()\n    this._result = undefined\n    this._timestamp = 0\n  }\n}","// Node is undefined in Node.js\nconst NODE_TYPE = {\n  ELEMENT_NODE: 1,\n  TEXT_NODE: 3\n}\n\n/**\n * Determines if node is either an element or text node.\n * @param  {!Node} node\n * @return {!boolean}\n */\nconst isNodeTypeElementOrText = node =>\n  node.nodeType === NODE_TYPE.ELEMENT_NODE || node.nodeType === NODE_TYPE.TEXT_NODE\n\nexport default {\n  isNodeTypeElementOrText,\n  NODE_TYPE\n}","import './LazyLoadTransform.css'\n// todo: use imports when other modules are TypeScript.\nconst ElementGeometry = require('./ElementGeometry').default\nconst ElementUtilities = require('./ElementUtilities').default\nconst Polyfill = require('./Polyfill').default\n\n// CSS classes used to identify and present lazily loaded images. Placeholders are members of\n// PLACEHOLDER_CLASS and one state class: pending, loading, or error. Images are members of either\n// loading or loaded state classes. Class names should match those in LazyLoadTransform.css.\nconst PLACEHOLDER_CLASS = 'pagelib_lazy_load_placeholder'\nconst PLACEHOLDER_PENDING_CLASS = 'pagelib_lazy_load_placeholder_pending' // Download pending.\nconst PLACEHOLDER_LOADING_CLASS = 'pagelib_lazy_load_placeholder_loading' // Download started.\nconst PLACEHOLDER_ERROR_CLASS = 'pagelib_lazy_load_placeholder_error' // Download failure.\nconst IMAGE_LOADING_CLASS = 'pagelib_lazy_load_image_loading' // Download started.\nconst IMAGE_LOADED_CLASS = 'pagelib_lazy_load_image_loaded' // Download completed.\n\n// Attributes copied from images to placeholders via data-* attributes for later restoration. The\n// image's classes and dimensions are also set on the placeholder.\n// The 3 data-* items are used by iOS.\nconst COPY_ATTRIBUTES = ['class', 'style', 'src', 'srcset', 'width', 'height', 'alt',\n  'usemap', 'data-file-width', 'data-file-height', 'data-image-gallery'\n]\n\n// Small images, especially icons, are quickly downloaded and may appear in many places. Lazily\n// loading these images degrades the experience with little gain. Always eagerly load these images.\n// Example: flags in the medal count for the \"1896 Summer Olympics medal table.\"\n// https://en.m.wikipedia.org/wiki/1896_Summer_Olympics_medal_table?oldid=773498394#Medal_count\nconst UNIT_TO_MINIMUM_LAZY_LOAD_SIZE: {[unit in string]?: number} = {\n  px: 50, // https://phabricator.wikimedia.org/diffusion/EMFR/browse/master/includes/MobileFormatter.php;c89f371ea9e789d7e1a827ddfec7c8028a549c12$22\n  ex: 10, // ''\n  em: 5 // 1ex ≈ .5em; https://developer.mozilla.org/en-US/docs/Web/CSS/length#Units\n}\n\n/**\n * Replace an image with a placeholder.\n * @param {!Document} document\n * @param {!HTMLImageElement} image The image to be replaced.\n * @return {!HTMLSpanElement} The placeholder replacing image.\n */\nconst convertImageToPlaceholder = (document: Document, image: HTMLImageElement): HTMLSpanElement => {\n  // There are a number of possible implementations for placeholders including:\n  //\n  // - [MobileFrontend] Replace the original image with a span and replace the span with a new\n  //   downloaded image.\n  //   This option has a good fade-in but has some CSS concerns for the placeholder, particularly\n  //   `max-width`, and causes significant reflows when used with image widening.\n  //\n  // - [Previous] Replace the original image with a span and append a new downloaded image to the\n  //   span.\n  //   This option has the best cross-fading and extensibility but makes duplicating all the CSS\n  //   rules for the appended image impractical.\n  //\n  // - [Previous] Replace the original image's source with a transparent image and update the source\n  //   from a new downloaded image.\n  //   This option has a good fade-in and minimal CSS concerns for the placeholder and image but\n  //   causes significant reflows when used with image widening.\n  //\n  // - [Current] Replace the original image with a couple spans and replace the spans with a new\n  //   downloaded image.\n  //   This option is about the same as MobileFrontend but supports image widening without reflows.\n\n  // Create the root placeholder.\n  const placeholder = document.createElement('span')\n\n  // Copy the image's classes and append the placeholder and current state (pending) classes.\n  if (image.hasAttribute('class')) {\n    placeholder.setAttribute('class', image.getAttribute('class') || '')\n  }\n  placeholder.classList.add(PLACEHOLDER_CLASS)\n  placeholder.classList.add(PLACEHOLDER_PENDING_CLASS)\n\n  // Match the image's width, if specified. If image widening is used, this width will be overridden\n  // by !important priority.\n  const geometry = ElementGeometry.from(image)\n  if (geometry.width) { placeholder.style.setProperty('width', `${geometry.width}`) }\n\n  // Save the image's attributes to data-* attributes for later restoration.\n  ElementUtilities.copyAttributesToDataAttributes(image, placeholder, COPY_ATTRIBUTES)\n\n  // Create a spacer and match the aspect ratio of the original image, if determinable. If image\n  // widening is used, this spacer will scale with the width proportionally.\n  const spacing = document.createElement('span')\n  if (geometry.width && geometry.height) {\n    // Assume units are identical.\n    const ratio = geometry.heightValue / geometry.widthValue\n    spacing.style.setProperty('padding-top', `${ratio * 100}%`)\n  }\n\n  // Append the spacer to the placeholder and replace the image with the placeholder.\n  placeholder.appendChild(spacing)\n  if (image.parentNode) image.parentNode.replaceChild(placeholder, image)\n\n  return placeholder\n}\n\n/**\n * @param {!HTMLImageElement} image The image to be considered.\n * @return {!boolean} true if image download can be deferred, false if image should be eagerly\n *                    loaded.\n */\nconst isLazyLoadable = (image: HTMLImageElement): boolean => {\n  const geometry = ElementGeometry.from(image)\n  if (!geometry.width || !geometry.height) { return true }\n  const minWidth = UNIT_TO_MINIMUM_LAZY_LOAD_SIZE[geometry.widthUnit] || Infinity\n  const minHeight = UNIT_TO_MINIMUM_LAZY_LOAD_SIZE[geometry.heightUnit] || Infinity\n  return geometry.widthValue >= minWidth && geometry.heightValue >= minHeight\n}\n\n/**\n * @param {!Element} element\n * @return {!Array.<HTMLImageElement>} Convertible images descendent from but not including element.\n */\nconst queryLazyLoadableImages = (element: Element): HTMLImageElement[] =>\n  Polyfill.querySelectorAll(element, 'img').filter((image: HTMLImageElement) => isLazyLoadable(image))\n\n/**\n * Convert images with placeholders. The transformation is inverted by calling loadImage().\n * @param {!Document} document\n * @param {!Array.<HTMLImageElement>} images The images to lazily load.\n * @return {!Array.<HTMLSpanElement>} The placeholders replacing images.\n */\nconst convertImagesToPlaceholders = (document: Document, images: HTMLImageElement[]): HTMLSpanElement[] =>\n  images.map(image => convertImageToPlaceholder(document, image))\n\n/**\n * Start downloading image resources associated with a given placeholder and replace the placeholder\n * with a new image element when the download is complete.\n * @param {!Document} document\n * @param {!HTMLSpanElement} placeholder\n * @return {!HTMLImageElement} A new image element.\n */\nconst loadPlaceholder = (document: Document, placeholder: HTMLSpanElement): HTMLImageElement => {\n  placeholder.classList.add(PLACEHOLDER_LOADING_CLASS)\n  placeholder.classList.remove(PLACEHOLDER_PENDING_CLASS)\n\n  const image = document.createElement('img')\n\n  const retryListener = (event: MouseEvent) => { // eslint-disable-line require-jsdoc\n    image.setAttribute('src', image.getAttribute('src') || '')\n    event.stopPropagation()\n    event.preventDefault()\n  }\n\n  // Add the download listener prior to setting the src attribute to avoid missing the load event.\n  image.addEventListener('load', () => {\n    placeholder.removeEventListener('click', retryListener)\n    if (placeholder.parentNode) placeholder.parentNode.replaceChild(image, placeholder)\n    image.classList.add(IMAGE_LOADED_CLASS)\n    image.classList.remove(IMAGE_LOADING_CLASS)\n  }, { once: true })\n\n  image.addEventListener('error', () => {\n    placeholder.classList.add(PLACEHOLDER_ERROR_CLASS)\n    placeholder.classList.remove(PLACEHOLDER_LOADING_CLASS)\n    placeholder.addEventListener('click', retryListener)\n  }, { once: true })\n\n  // Set src and other attributes, triggering a download.\n  ElementUtilities.copyDataAttributesToAttributes(placeholder, image, COPY_ATTRIBUTES)\n\n  // Append to the class list after copying over any preexisting classes.\n  image.classList.add(IMAGE_LOADING_CLASS)\n\n  return image\n}\n\nexport default {\n  PLACEHOLDER_CLASS,\n  queryLazyLoadableImages,\n  convertImagesToPlaceholders,\n  loadPlaceholder\n}","/** CSS length value and unit of measure. */\nclass DimensionUnit {\n  /**\n   * Returns the dimension and units of an Element, usually width or height, as specified by inline\n   * style or attribute. This is a pragmatic not bulletproof implementation.\n   * @param {!Element} element\n   * @param {!string} property\n   * @return {?DimensionUnit}\n   */\n  static fromElement(element, property) {\n    return element.style.getPropertyValue(property)\n      && DimensionUnit.fromStyle(element.style.getPropertyValue(property))\n      || element.hasAttribute(property) && new DimensionUnit(element.getAttribute(property))\n      || undefined\n  }\n\n  /**\n   * This is a pragmatic not bulletproof implementation.\n   * @param {!string} property\n   * @return {!DimensionUnit}\n   */\n  static fromStyle(property) {\n    const matches = property.match(/(-?\\d*\\.?\\d*)(\\D+)?/) || []\n    return new DimensionUnit(matches[1], matches[2])\n  }\n\n  /**\n   * @param {!string} value\n   * @param {?string} unit Defaults to pixels.\n   */\n  constructor(value, unit) {\n    this._value = Number(value)\n    this._unit = unit || 'px'\n  }\n\n  /** @return {!number} NaN if unknown. */\n  get value() { return this._value }\n\n  /** @return {!string} */\n  get unit() { return this._unit }\n\n  /** @return {!string} */\n  toString() {\n    return isNaN(this.value) ? '' : `${this.value}${this.unit}`\n  }\n}\n\n/** Element width and height dimensions and units. */\nexport default class ElementGeometry {\n  /**\n   * @param {!Element} element\n   * @return {!ElementGeometry}\n   */\n  static from(element) {\n    return new ElementGeometry(DimensionUnit.fromElement(element, 'width'),\n      DimensionUnit.fromElement(element, 'height'))\n  }\n\n  /**\n   * @param {?DimensionUnit} width\n   * @param {?DimensionUnit} height\n   */\n  constructor(width, height) {\n    this._width = width\n    this._height = height\n  }\n\n  /**\n   * @return {?DimensionUnit}\n   */\n  get width() { return this._width }\n\n  /** @return {!number} NaN if unknown. */\n  get widthValue() { return this._width && !isNaN(this._width.value) ? this._width.value : NaN }\n\n  /** @return {!string} */\n  get widthUnit() { return this._width && this._width.unit || 'px' }\n\n  /**\n   * @return {?DimensionUnit}\n   */\n  get height() { return this._height }\n\n  /** @return {!number} NaN if unknown. */\n  get heightValue() { return this._height && !isNaN(this._height.value) ? this._height.value : NaN }\n\n  /** @return {!string} */\n  get heightUnit() { return this._height && this._height.unit || 'px' }\n}","const CLASS = { ANDROID: 'pagelib_platform_android', IOS:  'pagelib_platform_ios' }\n\n// Regular expressions from https://phabricator.wikimedia.org/diffusion/EMFR/browse/master/resources/mobile.startup/browser.js;c89f371ea9e789d7e1a827ddfec7c8028a549c12.\n/**\n * @param {!Window} window\n * @return {!boolean} true if the user agent is Android, false otherwise.\n */\nconst isAndroid = window => /android/i.test(window.navigator.userAgent)\n\n/**\n * @param {!Window} window\n * @return {!boolean} true if the user agent is iOS, false otherwise.\n */\nconst isIOs = window => /ipad|iphone|ipod/i.test(window.navigator.userAgent)\n\n/**\n * @param {!HTMLDocument} document\n * @param {!string} platform one of the values in CLASS\n * @return {void}\n */\nconst setPlatform = (document, platform) => {\n  document.querySelector('html').classList.add(platform)\n}\n\n/**\n * @param {!Window} window\n * @return {void}\n */\nconst classify = window => {\n  const html = window.document.querySelector('html')\n  if (isAndroid(window)) { html.classList.add(CLASS.ANDROID) }\n  if (isIOs(window)) { html.classList.add(CLASS.IOS) }\n}\n\nexport default {\n  CLASS,\n  classify,\n  setPlatform\n}","import './ThemeTransform.css'\nimport ElementUtilities from './ElementUtilities'\nimport Polyfill from './Polyfill'\n\n// Elements marked with these classes indicate certain ancestry constraints that are\n// difficult to describe as CSS selectors.\nconst CONSTRAINT = {\n  IMAGE_PRESUMES_WHITE_BACKGROUND: 'pagelib_theme_image_presumes_white_background',\n  DIV_DO_NOT_APPLY_BASELINE: 'pagelib_theme_div_do_not_apply_baseline'\n}\n\n// Theme to CSS classes.\nconst THEME = {\n  DEFAULT: 'pagelib_theme_default',\n  DARK: 'pagelib_theme_dark',\n  SEPIA: 'pagelib_theme_sepia',\n  BLACK: 'pagelib_theme_black'\n}\n\n/**\n * @param {!Document} document\n * @param {!string} theme\n * @return {void}\n */\nconst setTheme = (document, theme) => {\n  const html = document.querySelector('html')\n\n  // Set the new theme.\n  html.classList.add(theme)\n\n  // Clear any previous theme.\n  for (const key in THEME) {\n    if (Object.prototype.hasOwnProperty.call(THEME, key) && THEME[key] !== theme) {\n      html.classList.remove(THEME[key])\n    }\n  }\n}\n\n/**\n * Football template image filename regex.\n * https://en.wikipedia.org/wiki/Template:Football_kit/pattern_list\n * @type {RegExp}\n */\nconst footballTemplateImageFilenameRegex =\n  new RegExp('Kit_(body|socks|shorts|right_arm|left_arm)(.*).png$')\n\n/* en > Away colours > 793128975 */\n/* en > Manchester United F.C. > 793244653 */\n/**\n * Determines whether white background should be added to image.\n * @param  {!HTMLImageElement} image\n * @return {!boolean}\n */\nconst imagePresumesWhiteBackground = image => {\n  if (footballTemplateImageFilenameRegex.test(image.src)) {\n    return false\n  }\n  if (image.classList.contains('mwe-math-fallback-image-inline')) {\n    return false\n  }\n  return !ElementUtilities.closestInlineStyle(image, 'background')\n}\n\n/**\n * Annotate elements with CSS classes that can be used by CSS rules. The classes themselves are not\n * theme-dependent so classification only need only occur once after the content is loaded, not\n * every time the theme changes.\n * @param {!Element} element\n * @return {void}\n */\nconst classifyElements = element => {\n  Polyfill.querySelectorAll(element, 'img')\n    .filter(imagePresumesWhiteBackground)\n    .forEach(image => {\n      image.classList.add(CONSTRAINT.IMAGE_PRESUMES_WHITE_BACKGROUND)\n    })\n  /* en > Away colours > 793128975 */\n  /* en > Manchester United F.C. > 793244653 */\n  /* en > Pantone > 792312384 */\n  /* en > Wikipedia:Graphs_and_charts > 801754530 */\n  /* en > PepsiCo > 807406166 */\n  /* en > Lua_(programming_language) > 809310207 */\n  const selector = [\n    'div.color_swatch div',\n    'div[style*=\"position: absolute\"]',\n    'div.barbox table div[style*=\"background:\"]',\n    'div.chart div[style*=\"background-color\"]',\n    'div.chart ul li span[style*=\"background-color\"]',\n    'span.legend-color',\n    'div.mw-highlight span',\n    'code.mw-highlight span',\n    '.BrickChartTemplate div',\n    '.PieChartTemplate div',\n    '.BarChartTemplate div',\n    '.StackedBarTemplate td',\n    '.chess-board div'\n  ].join()\n  Polyfill.querySelectorAll(element, selector).forEach(element =>\n    element.classList.add(CONSTRAINT.DIV_DO_NOT_APPLY_BASELINE))\n}\n\nexport default {\n  CONSTRAINT,\n  THEME,\n  setTheme,\n  classifyElements\n}","/**\n * Sets text size adjustment percentage of the body element\n * @param  {!HTMLBodyElement} body that needs the margins adjusted.\n * @param  {!string} textSize percentage for text-size-adjust in format of string, like '100%'\n * @return {void}\n */\nconst setPercentage = (body: HTMLBodyElement, textSize: string): void => {\n    if (textSize){\n        // casting body style to avoid errors with the subscript operator and typescript\n        // see https://stackoverflow.com/questions/37655393\n        (<any>body.style)['-webkit-text-size-adjust'] = textSize;\n        (<any>body.style)['text-size-adjust'] = textSize;\n    }\n}\n\n\nexport default {\n    setPercentage\n}","interface Spacing {\n  top?: string\n  right?: string\n  bottom?: string\n  left?: string\n}\n\n/**\n * Sets the margins on an element via inline styles.\n * @param {!HTMLBodyElement} bodyElement the element that needs the margins adjusted.\n *   For the apps this is usually the body element.\n * @param {Spacing} values { top, right, bottom, left }\n *   Use value strings with units, e.g. '16px'. Undefined values are ignored.\n * @return {void}\n */\nconst setMargins = (bodyElement: HTMLBodyElement, values: Spacing): void => {\n  if (values.top !== undefined) {\n    bodyElement.style.marginTop = values.top\n  }\n  if (values.right !== undefined) {\n    bodyElement.style.marginRight = values.right\n  }\n  if (values.bottom !== undefined) {\n    bodyElement.style.marginBottom = values.bottom\n  }\n  if (values.left !== undefined) {\n    bodyElement.style.marginLeft = values.left\n  }\n}\n\n/**\n * Sets padding on an element via inline styles.\n * @param {!HTMLBodyElement} bodyElement the element that needs the padding adjusted.\n *   For the apps this is usually the body element.\n * @param {Spacing} values { top, right, bottom, left }\n *   Use value strings with units, e.g. '16px'. Undefined values are ignored.\n * @return {void}\n */\nconst setPadding = (bodyElement: HTMLBodyElement, values: Spacing): void => {\n  if (values.top !== undefined) {\n    bodyElement.style.paddingTop = values.top\n  }\n  if (values.right !== undefined) {\n    bodyElement.style.paddingRight = values.right\n  }\n  if (values.bottom !== undefined) {\n    bodyElement.style.paddingBottom = values.bottom\n  }\n  if (values.left !== undefined) {\n    bodyElement.style.paddingLeft = values.left\n  }\n}\n\nexport default {\n  setMargins,\n  setPadding\n}","import './DimImagesTransform.css'\nconst CLASS = 'pagelib_dim_images'\n\n/**\n * @param {!Document} document\n * @param {!boolean} enable\n * @return {void}\n */\nconst dimImages = (document, enable) => {\n  document.querySelector('html').classList[enable ? 'add' : 'remove'](CLASS)\n}\n\n/**\n * @deprecated Use dimImages instead, which only requires a Document\n * @param {!Window} window\n * @param {!boolean} enable\n * @return {void}\n */\nconst dim = (window, enable) => dimImages(window.document, enable)\n\n/**\n * @param {!Document} document\n * @return {boolean}\n */\nconst areImagesDimmed = document => document.querySelector('html').classList.contains(CLASS)\n\n/**\n * @deprecated Use areImagesDimmed instead, which only requires a Document\n * @param {!Window} window\n * @return {boolean}\n */\nconst isDim = window => areImagesDimmed(window.document)\n\nexport default {\n  CLASS,\n  dim,\n  isDim,\n  dimImages,\n  areImagesDimmed,\n}","import CollapseTable from './CollapseTable'\nimport ElementUtilities from './ElementUtilities'\nimport LazyLoadTransform from './LazyLoadTransform'\nimport Throttle from './Throttle'\n\nconst EVENT_TYPES = ['scroll', 'resize', CollapseTable.SECTION_TOGGLED_EVENT_TYPE]\nconst THROTTLE_PERIOD_MILLISECONDS = 100\n\n/**\n * This class subscribes to key page events, applying lazy load transforms or inversions as\n * applicable. It has external dependencies on the section-toggled custom event and the following\n * standard browser events: resize, scroll.\n */\nexport default class {\n  /**\n   * @param {!Window} window\n   * @param {!number} loadDistanceMultiplier Images within this multiple of the screen height are\n   *                                         loaded in either direction.\n   */\n  constructor(window, loadDistanceMultiplier) {\n    this._window = window\n    this._loadDistanceMultiplier = loadDistanceMultiplier\n\n    this._placeholders = []\n    this._registered = false\n    this._throttledLoadPlaceholders = Throttle.wrap(window, THROTTLE_PERIOD_MILLISECONDS,\n      () => this._loadPlaceholders())\n  }\n\n  /**\n   * Convert images with placeholders. Calling this function may register this instance to listen to\n   * page events.\n   * @param {!Element} element\n   * @return {void}\n   */\n  convertImagesToPlaceholders(element) {\n    const images = LazyLoadTransform.queryLazyLoadableImages(element)\n    const placeholders = LazyLoadTransform.convertImagesToPlaceholders(this._window.document,\n      images)\n    this._placeholders = this._placeholders.concat(placeholders)\n    this._register()\n  }\n\n  /**\n   * Searches for existing placeholders in the DOM Document.\n   * This is an alternative to #convertImagesToPlaceholders if that was already done server-side.\n   * @param {!Element} element root element to start searching for placeholders\n   * @return {void}\n   */\n  collectExistingPlaceholders(element) {\n    const placeholders\n      = Array.from(element.querySelectorAll(`.${LazyLoadTransform.PLACEHOLDER_CLASS}`))\n    this._placeholders = this._placeholders.concat(placeholders)\n    this._register()\n  }\n\n  /**\n   * Manually trigger a load images check. Calling this function may deregister this instance from\n   * listening to page events.\n   * @return {void}\n   */\n  loadPlaceholders() { this._throttledLoadPlaceholders() }\n\n  /**\n   * This method may be safely called even when already unregistered. This function clears the\n   * record of placeholders.\n   * @return {void}\n   */\n  deregister() {\n    if (!this._registered) { return }\n\n    EVENT_TYPES.forEach(eventType =>\n      this._window.removeEventListener(eventType, this._throttledLoadPlaceholders))\n    this._throttledLoadPlaceholders.reset()\n\n    this._placeholders = []\n    this._registered = false\n  }\n\n  /**\n   * This method may be safely called even when already registered.\n   * @return {void}\n   */\n  _register() {\n    if (this._registered || !this._placeholders.length) { return }\n    this._registered = true\n\n    EVENT_TYPES.forEach(eventType =>\n      this._window.addEventListener(eventType, this._throttledLoadPlaceholders))\n  }\n\n  /** @return {void} */\n  _loadPlaceholders() {\n    this._placeholders = this._placeholders.filter(placeholder => {\n      let pending = true\n      if (this._isPlaceholderEligibleToLoad(placeholder)) {\n        LazyLoadTransform.loadPlaceholder(this._window.document, placeholder)\n        pending = false\n      }\n      return pending\n    })\n\n    if (this._placeholders.length === 0) {\n      this.deregister()\n    }\n  }\n\n  /**\n   * @param {!HTMLSpanElement} placeholder\n   * @return {!boolean}\n   */\n  _isPlaceholderEligibleToLoad(placeholder) {\n    return ElementUtilities.isVisible(placeholder)\n      && this._isPlaceholderWithinLoadDistance(placeholder)\n  }\n\n  /**\n   * @param {!HTMLSpanElement} placeholder\n   * @return {!boolean}\n   */\n  _isPlaceholderWithinLoadDistance(placeholder) {\n    const bounds = placeholder.getBoundingClientRect()\n    const range = this._window.innerHeight * this._loadDistanceMultiplier\n    return !(bounds.top > range || bounds.bottom < -range)\n  }\n}","let scrollTop = 0\n\n/**\n * Sets the maximum top scroll position in pixel. Use this to adjust for any decor overlaying the\n * Viewport.\n * @param {!number} newValue pixel value\n * @return {void}\n */\nconst setScrollTop = newValue => {\n  scrollTop = newValue\n}\n\n/**\n * Gets maximum top scroll position in pixel.\n * @return {number}\n */\nconst getScrollTop = () => scrollTop\n\n/**\n * Scrolls the WebView to the top of the container parent node.\n * Can be used as FooterDivClickCallback\n * @param {!Element} container\n * @return {void}\n */\nconst scrollWithDecorOffset = container => {\n  window.scrollTo(0, container.parentNode.offsetTop - scrollTop)\n}\n\nexport default {\n  setScrollTop,\n  scrollWithDecorOffset,\n  testing: {\n    getScrollTop\n  }\n}","// Versioned abstraction layer. mobile-html clients are highly encouraged to go through this instead\n// of accessing the other JS functionality directly.\n// c1 stands for PCS client version 1.\n\nimport c1 from './c1'\n\nexport default {\n  c1\n}","import PageMods from './PageMods'\nimport Platforms from './Platforms'\nimport Scroller from './Scroller'\nimport Themes from './Themes'\n\nexport default {\n  Platforms,\n  PageMods,\n  Scroller,\n  Themes\n}","import AdjustTextSize from '../../transform/AdjustTextSize'\nimport BodySpacingTransform from '../../transform/BodySpacingTransform'\nimport CollapseTable from '../../transform/CollapseTable'\nimport DimImagesTransform from '../../transform/DimImagesTransform'\nimport LazyLoadTransformer from '../../transform/LazyLoadTransformer'\nimport PlatformTransform from '../../transform/PlatformTransform'\nimport Scroller from './Scroller'\nimport ThemeTransform from '../../transform/ThemeTransform'\n\n/**\n * Executes common JS functionality the client should start, like hooking up events for\n * lazy loading and table collapsing/expanding.\n * Client side complement of server-side DOM transformations.\n * Note: this will be called automatically when DOM is ready\n * @param {!Window} window\n * @param {!Document} document\n * @return {void}\n */\nconst onPageLoad = (window, document) => {\n  const lazyLoader = new LazyLoadTransformer(window, 2)\n  lazyLoader.collectExistingPlaceholders(document.body)\n  lazyLoader.loadPlaceholders()\n\n  CollapseTable.setupEventHandling(window, document, true, Scroller.scrollWithDecorOffset)\n}\n\n/**\n * @typedef {function} OnSuccess\n * @return {void}\n */\n\n/**\n * Makes multiple page modifications based on client specific settings, which should be called\n * during initial page load.\n * @param {!Document} document\n * @param {!{}} settings client settings\n *   { platform, clientVersion, theme, dimImages, margins, areTablesCollapsed, scrollTop,\n *   textSizeAdjustmentPercentage }\n * @param {?PageMods~Function} onSuccess callback\n * @return {void}\n */\nconst setMulti = (document, settings, onSuccess) => {\n  if (settings.platform !== undefined) {\n    PlatformTransform.setPlatform(document, settings.platform)\n  }\n  if (settings.theme !== undefined) {\n    ThemeTransform.setTheme(document, settings.theme)\n  }\n  if (settings.dimImages !== undefined) {\n    DimImagesTransform.dimImages(document, settings.dimImages)\n  }\n  if (settings.margins !== undefined) {\n    BodySpacingTransform.setMargins(document.body, settings.margins)\n  }\n  if (settings.areTablesCollapsed) {\n    CollapseTable.toggleCollapsedForAll(document.body)\n  }\n  if (settings.scrollTop !== undefined) {\n    Scroller.setScrollTop(settings.scrollTop)\n  }\n  if (settings.textSizeAdjustmentPercentage !== undefined) {\n    AdjustTextSize.setPercentage(\n      document.body,\n      settings.textSizeAdjustmentPercentage\n    )\n  }\n\n  if (onSuccess instanceof Function) {\n    onSuccess()\n  }\n}\n\n/**\n * Sets the theme.\n * @param {!Document} document\n * @param {!string} theme one of the values in Themes\n * @param {?OnSuccess} onSuccess callback\n * @return {void}\n */\nconst setTheme = (document, theme, onSuccess) => {\n  ThemeTransform.setTheme(document, theme)\n\n  if (onSuccess instanceof Function) {\n    onSuccess()\n  }\n}\n\n/**\n * Toggles dimming of images.\n * @param {!Document} document\n * @param {!boolean} dimImages true if images should be dimmed, false otherwise\n * @param {?OnSuccess} onSuccess callback\n * @return {void}\n */\nconst setDimImages = (document, dimImages, onSuccess) => {\n  DimImagesTransform.dimImages(document, dimImages)\n\n  if (onSuccess instanceof Function) {\n    onSuccess()\n  }\n}\n\n/**\n * Sets the margins.\n * @param {!Document} document\n * @param {!{BodySpacingTransform.Spacing}} margins\n * @param {?OnSuccess} onSuccess callback\n * @return {void}\n */\nconst setMargins = (document, margins, onSuccess) => {\n  BodySpacingTransform.setMargins(document.body, margins)\n\n  if (onSuccess instanceof Function) {\n    onSuccess()\n  }\n}\n\n/**\n * Sets the top scroll position for collapsing of tables (when bottom close button is tapped).\n * @param {!Document} document\n * @param {!number} scrollTop height of decor covering the top portion of the Viewport in pixel\n * @param {?OnSuccess} onSuccess callback\n * @return {void}\n */\nconst setScrollTop = (document, scrollTop, onSuccess) => {\n  Scroller.setScrollTop(scrollTop)\n\n  if (onSuccess instanceof Function) {\n    onSuccess()\n  }\n}\n\n/**\n * Sets text size adjustment percentage of the body element\n * @param  {!Document} document\n * @param  {!string} textSize percentage for text-size-adjust in format of string, like '100%'\n * @param  {?OnSuccess} onSuccess onSuccess callback\n * @return {void}\n */\nconst setTextSizeAdjustmentPercentage = (document, textSize, onSuccess) => {\n  AdjustTextSize.setPercentage(document.body, textSize)\n\n  if (onSuccess instanceof Function) {\n    onSuccess()\n  }\n}\n\n/**\n * Gets the Scroller object. Just for testing!\n * @return {{setScrollTop, scrollWithDecorOffset}}\n */\nconst getScroller = () => Scroller\n\n// automatically invoked when DOM is ready\ndocument.addEventListener('DOMContentLoaded', () => onPageLoad(window, document))\n\nexport default {\n  onPageLoad,\n  setMulti,\n  setTheme,\n  setDimImages,\n  setMargins,\n  setScrollTop,\n  setTextSizeAdjustmentPercentage,\n  testing: {\n    getScroller\n  }\n}","import PlatformTransform from '../../transform/PlatformTransform'\n\nconst Platforms = PlatformTransform.CLASS\n\nexport default {\n  ANDROID: Platforms.ANDROID,\n  IOS: Platforms.IOS\n}","import ThemeTransform from '../../transform/ThemeTransform'\n\nconst Themes = ThemeTransform.THEME\n\nexport default {\n  DEFAULT: Themes.DEFAULT,\n  DARK: Themes.DARK,\n  SEPIA: Themes.SEPIA,\n  BLACK: Themes.BLACK\n}"],"sourceRoot":""}