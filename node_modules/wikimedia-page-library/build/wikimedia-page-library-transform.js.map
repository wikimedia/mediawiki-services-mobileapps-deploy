{"version":3,"sources":["webpack://pagelib/webpack/universalModuleDefinition","webpack://pagelib/webpack/bootstrap","webpack://pagelib/./src/transform/Polyfill.js","webpack://pagelib/./src/transform/ElementUtilities.js","webpack://pagelib/./src/transform/CollapseTable.js","webpack://pagelib/./src/transform/SectionUtilities.ts","webpack://pagelib/./src/transform/NodeUtilities.js","webpack://pagelib/./src/transform/LazyLoadTransform.ts","webpack://pagelib/./src/transform/Throttle.js","webpack://pagelib/./src/transform/FooterContainer.js","webpack://pagelib/./src/transform/FooterLegal.js","webpack://pagelib/./src/transform/CollectionUtilities.js","webpack://pagelib/./src/transform/FooterReadMore.js","webpack://pagelib/./src/transform/ElementGeometry.js","webpack://pagelib/./src/transform/EditTransform.js","webpack://pagelib/./src/transform/PlatformTransform.js","webpack://pagelib/./src/transform/ThemeTransform.js","webpack://pagelib/./src/transform/FooterMenu.js","webpack://pagelib/./src/transform/ReferenceCollection.js","webpack://pagelib/./src/transform/AdjustTextSize.ts","webpack://pagelib/./src/transform/BodySpacingTransform.ts","webpack://pagelib/./src/transform/DimImagesTransform.js","webpack://pagelib/./src/transform/LazyLoadTransformer.js","webpack://pagelib/./src/transform/index.js","webpack://pagelib/./src/transform/CompatibilityTransform.js","webpack://pagelib/./src/transform/LeadIntroductionTransform.js","webpack://pagelib/./src/transform/FooterTransformer.js","webpack://pagelib/./src/transform/RedLinks.js","webpack://pagelib/./src/transform/WidenImage.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CustomEvent","window","type","parameters","arguments","length","undefined","bubbles","cancelable","detail","event","document","createEvent","initCustomEvent","matchesSelector","el","selector","matches","webkitMatchesSelector","querySelectorAll","element","Array","slice","_Polyfill","findClosestAncestor","parentElement","Polyfill","isNestedInTable","Boolean","closestInlineStyle","thisValue","style","e","isVisible","offsetWidth","offsetHeight","getClientRects","copyAttributesToDataAttributes","source","destination","attributes","filter","attribute","hasAttribute","forEach","setAttribute","getAttribute","copyDataAttributesToAttributes","NODE_TYPE","NodeUtilities","CLASS","ICON","CONTAINER","COLLAPSED_CONTAINER","COLLAPSED","COLLAPSED_BOTTOM","COLLAPSE_TEXT","EXPANDED","TABLE_INFOBOX","TABLE_OTHER","isHeaderEligible","header","isHeaderTextEligible","headerText","replace","firstWordFromString","string","match","isNodeTextContentSimilarToPageTitle","node","pageTitle","firstPageTitleWord","firstNodeTextContentWord","textContent","toLowerCase","stringWithNormalizedWhitespace","trim","replaceNodeWithBreakingSpaceTextNode","parentNode","replaceChild","createTextNode","extractEligibleHeaderText","fragment","createDocumentFragment","appendChild","cloneNode","fragmentHeader","querySelector","remove","cur","lastChild","isNodeTypeElementOrText","previousSibling","nextSibling","nodeType","ELEMENT_NODE","tagName","elementScopeComparator","a","b","aHasScope","bHasScope","getTableHeaderTextArray","headerTextArray","headers","sort","indexOf","push","toggleCollapsedForContainer","container","trigger","footerDivClickCallback","children","table","footer","caption","collapsed","display","classList","add","visibility","toggleCollapseClickCallback","shouldTableBeCollapsed","blacklistIntersects","some","clazz","contains","isHidden","isInfobox","newCollapsedHeaderDiv","content","div","createElement","newCollapsedFooterDiv","innerHTML","newCaptionFragment","title","titleClass","strong","span","replaceNodeInSection","nodeToReplace","replacementNode","childOfSectionTag","sectionTag","foundSectionTag","SectionUtilities","isMediaWikiSectionElement","insertBefore","removeChild","prepareTables","infoboxTitle","otherTitle","footerTitle","tables","ElementUtilities","captionFragment","containerDiv","className","marginTop","marginBottom","collapsedHeaderDiv","collapsedFooterDiv","toggleCollapsedForAll","setupEventHandling","isInitiallyCollapsed","dispatchSectionToggledEvent","dispatchEvent","onclick","adjustTables","isMainPage","SECTION_TOGGLED_EVENT_TYPE","collapseTables","expandCollapsedTableIfItContainsElement","containerSelector","collapsedDiv","firstElementChild","click","test","default","getSectionIDOfElement","section","current","getSectionOfElement","id","getLeadParagraphText","firstParagaphInASection","innerText","getSectionOffsets","body","sections","from","reduce","results","heading","parseInt","yOffset","offsetTop","TEXT_NODE","ElementGeometry","CLASSES","PLACEHOLDER_CLASS","PLACEHOLDER_PENDING_CLASS","PLACEHOLDER_LOADING_CLASS","PLACEHOLDER_ERROR_CLASS","IMAGE_LOADING_CLASS","IMAGE_LOADED_CLASS","COPY_ATTRIBUTES","UNIT_TO_MINIMUM_LAZY_LOAD_SIZE","px","ex","em","queryLazyLoadableImages","image","geometry","width","height","minWidth","widthUnit","Infinity","minHeight","heightUnit","widthValue","heightValue","isLazyLoadable","convertImagesToPlaceholders","images","map","placeholder","setProperty","spacing","ratio","convertImageToPlaceholder","loadPlaceholder","retryListener","stopPropagation","preventDefault","addEventListener","removeEventListener","once","Throttle","period","funktion","_classCallCheck","_window","_period","_function","_context","_arguments","_result","_timeout","_timestamp","throttle","throttled","queue","result","pending","delay","cancel","reset","context","args","_this","setTimeout","Date","now","apply","Math","max","clearTimeout","containerFragment","menuSection","readMoreSection","legalSection","isContainerAttached","licenseString","licenseSubstitutionString","containerID","licenseLinkClickHandler","viewInBrowserString","browserLinkClickHandler","licenseStringHalves","split","collectPageIssues","collectDisambiguationTitles","href","collectDisambiguationHTML","collectPageIssuesHTML","collectPageIssuesText","safelyRemoveEnclosures","opener","closer","enclosureRegex","RegExp","counter","stringToClean","previousString","cleanExtract","ReadMorePage","displayTitle","thumbnail","description","extract","showReadMorePages","pages","saveButtonClickHandler","titlesShownHandler","shownTitles","getElementById","page","index","titles","normalized","pageFragment","readMorePage","outerAnchorContainer","backgroundImage","innerDivContainer","encodeURI","titleToShow","descriptionEl","saveButton","documentFragmentForReadMorePage","fetchErrorHandler","statusText","console","log","count","baseURL","showReadMorePagesHandler","xhr","XMLHttpRequest","open","readMoreQueryURL","onload","readyState","DONE","status","JSON","parse","responseText","rand","floor","random","onerror","send","error","toString","fetchReadMore","setHeading","headingString","headingID","headingElement","updateSaveButtonForTitle","text","isSaved","button","unfilledClass","filledClass","updateSaveButtonBookmarkIcon","DimensionUnit","unit","_value","Number","_unit","getPropertyValue","fromStyle","isNaN","_width","_height","fromElement","NaN","SECTION_HEADER","TITLE","LINK_CONTAINER","LINK","PROTECTION","UNPROTECTED","PROTECTED","FORBIDDEN","IDS","DATA_ATTRIBUTE","newEditSectionButton","link","newEditSectionLink","newEditSectionHeader","level","titleHTML","showEditPencil","ADD_TITLE_DESCRIPTION","setEditButtons","isEditable","isProtected","documentElement","newEditLeadSectionHeader","pageDisplayTitle","titleDescription","addTitleDescriptionString","isTitleDescriptionEditable","hasPronunciation","descriptionElements","titleDescriptionElements","divider","ANDROID","IOS","classify","html","navigator","userAgent","isAndroid","isIOs","setPlatform","platform","CONSTRAINT","IMAGE_PRESUMES_WHITE_BACKGROUND","DIV_DO_NOT_APPLY_BASELINE","THEME","DEFAULT","DARK","SEPIA","BLACK","footballTemplateImageFilenameRegex","imagePresumesWhiteBackground","src","setTheme","theme","classifyElements","join","_CollectionUtilities","MenuItemType","languages","lastEdited","pageIssues","disambiguation","coordinate","talkPage","referenceList","MenuItem","subtitle","itemType","clickHandler","payload","CollectionUtilities","_","maybeAddItem","item","extractor","payloadExtractor","menuItem","containerAnchor","iconClass","documentFragmentForMenuItem","addItem","isCitation","isWhitespaceTextNode","Node","hasCitationLink","anchor","hash","getRefTextContainer","refTextContainerID","decodeURIComponent","collectRefText","refTextContainer","frag","fragDiv","firstChild","closestReferenceClassElement","sourceNode","ReferenceItem","rect","ReferenceLinkItem","NearbyReferences","selectedIndex","referencesGroup","adjacentNonWhitespaceNode","siblingGetter","currentNode","collectAdjacentReferenceNodes","nodeCollector","prevSiblingGetter","nextSiblingGetter","collectNearbyReferenceNodes","collectedNodes","unshift","collectNearbyReferences","sourceNodeParent","referenceNodes","getBoundingClientRect","top","right","bottom","left","x","y","getBoundingClientRectAsPlainObject","referenceItemForNode","collectNearbyReferencesAsText","referenceLinkItemForNode","setPercentage","textSize","setMargins","bodyElement","values","marginRight","marginLeft","setPadding","paddingTop","paddingRight","paddingBottom","paddingLeft","dimImages","enable","areImagesDimmed","dim","isDim","EVENT_TYPES","CollapseTable","THROTTLE_PERIOD_MILLISECONDS","_class","loadDistanceMultiplier","_loadDistanceMultiplier","_placeholders","_registered","_throttledLoadPlaceholders","wrap","_loadPlaceholders","LazyLoadTransform","placeholders","concat","_register","_this2","eventType","_this3","_this4","_isPlaceholderEligibleToLoad","deregister","_isPlaceholderWithinLoadDistance","bounds","range","innerHeight","AdjustTextSize","BodySpacingTransform","CompatibilityTransform","DimImagesTransform","EditTransform","LeadIntroductionTransform","FooterContainer","FooterLegal","FooterMenu","FooterReadMore","FooterTransformer","LazyLoadTransformer","PlatformTransform","RedLinks","ReferenceCollection","ThemeTransform","WidenImage","COMPATIBILITY","FILTER","enableSupport","properties","cssText","isStyleSupported","isFilterSupported","isParagraphEligible","paragraphElement","coordElement","coordTextLength","extractLeadIntroductionNodes","eligibleParagraph","introNodes","getEligibleParagraph","find","moveLeadIntroductionUp","afterElement","insertBeforeThisElement","_resizeListener","readMoreHeader","readMoreLimit","license","updateBottomPaddingToAllowReadMoreToScrollToTop","configureRedLinkTemplate","redLinkAnchorsInDocument","newRedLinkTemplate","replaceAnchorWithSpan","hideRedLinks","spanTemplate","redLink","_ElementUtilities","ancestorsToWiden","widenThese","updateStyleValue","updateExistingStyleValue","styleWideningKeysAndValues","maxWidth","float","widenElementByUpdatingExistingStyles","keys","widenElementByUpdatingStyles","widenAncestors","parentAnchor","elementUtilities","shouldWidenImage","maybeWidenImage","widenImage"],"mappings":"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","file":"wikimedia-page-library-transform.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pagelib\"] = factory();\n\telse\n\t\troot[\"pagelib\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 40);\n","/**\n * Polyfill function that tells whether a given element matches a selector.\n * @param {!Element} el Element\n * @param {!string} selector Selector to look for\n * @return {!boolean} Whether the element matches the selector\n */\nconst matchesSelector = (el, selector) => {\n  if (el.matches) {\n    return el.matches(selector)\n  }\n  if (el.matchesSelector) {\n    return el.matchesSelector(selector)\n  }\n  if (el.webkitMatchesSelector) {\n    return el.webkitMatchesSelector(selector)\n  }\n  return false\n}\n\n/**\n * @param {!Element} element\n * @param {!string} selector\n * @return {!Array.<Element>}\n */\nconst querySelectorAll = (element, selector) =>\n  Array.prototype.slice.call(element.querySelectorAll(selector))\n\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill\n// Required by Android API 16 AOSP Nexus S emulator.\n// eslint-disable-next-line no-undef\nconst CustomEvent = typeof window !== 'undefined' && window.CustomEvent\n  || function(type, parameters = { bubbles: false, cancelable: false, detail: undefined }) {\n    // eslint-disable-next-line no-undef\n    const event = document.createEvent('CustomEvent')\n    event.initCustomEvent(type, parameters.bubbles, parameters.cancelable, parameters.detail)\n    return event\n  }\n\nexport default {\n  matchesSelector,\n  querySelectorAll,\n  CustomEvent\n}","import Polyfill from './Polyfill'\n\n// todo: drop ancestor consideration and move to Polyfill.closest().\n/**\n * Returns closest ancestor of element which matches selector.\n * Similar to 'closest' methods as seen here:\n *  https://api.jquery.com/closest/\n *  https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n * @param  {!Element} el        Element\n * @param  {!string} selector   Selector to look for in ancestors of 'el'\n * @return {?HTMLElement}       Closest ancestor of 'el' matching 'selector'\n */\nconst findClosestAncestor = (el, selector) => {\n  let parentElement\n  for (parentElement = el.parentElement;\n    parentElement && !Polyfill.matchesSelector(parentElement, selector);\n    parentElement = parentElement.parentElement) {\n    // Intentionally empty.\n  }\n  return parentElement\n}\n\n/**\n * @param {?Element} element\n * @param {!string} property\n * @param {?string} value\n * @return {?Element} The inclusive first element with an inline style (and optional value) or\n * undefined.\n */\nconst closestInlineStyle = (element, property, value) => {\n  for (let el = element; el; el = el.parentElement) {\n    let thisValue\n\n    // Wrap in a try-catch block to avoid Domino crashing on a malformed style declaration.\n    // T229521\n    try {\n      thisValue = el.style[property]\n    } catch (e) {\n      continue\n    }\n\n    if (thisValue) {\n      if (value === undefined) {\n        return el\n      }\n      if (value === thisValue) {\n        return el\n      }\n    }\n  }\n  return undefined\n}\n\n/**\n * Determines if element has a table ancestor.\n * @param  {!Element}  el   Element\n * @return {!boolean}       Whether table ancestor of 'el' is found\n */\nconst isNestedInTable = el => Boolean(findClosestAncestor(el, 'table'))\n\n/**\n * @param {!HTMLElement} element\n * @return {!boolean} true if element affects layout, false otherwise.\n */\nconst isVisible = element =>\n  // https://github.com/jquery/jquery/blob/305f193/src/css/hiddenVisibleSelectors.js#L12\n  Boolean(element.offsetWidth || element.offsetHeight || element.getClientRects().length)\n\n/**\n * Copy existing attributes from source to destination as data-* attributes.\n * @param {!HTMLElement} source\n * @param {!HTMLElement} destination\n * @param {!Array.<string>} attributes\n * @return {void}\n */\nconst copyAttributesToDataAttributes = (source, destination, attributes) => {\n  attributes.filter(attribute => source.hasAttribute(attribute))\n    .forEach(attribute =>\n      destination.setAttribute(`data-${attribute}`, source.getAttribute(attribute)))\n}\n\n/**\n * Copy existing data-* attributes from source to destination as attributes.\n * @param {!HTMLElement} source\n * @param {!HTMLElement} destination\n * @param {!Array.<string>} attributes\n * @return {void}\n */\nconst copyDataAttributesToAttributes = (source, destination, attributes) => {\n  attributes.filter(attribute => source.hasAttribute(`data-${attribute}`))\n    .forEach(attribute =>\n      destination.setAttribute(attribute, source.getAttribute(`data-${attribute}`)))\n}\n\nexport default {\n  findClosestAncestor,\n  isNestedInTable,\n  closestInlineStyle,\n  isVisible,\n  copyAttributesToDataAttributes,\n  copyDataAttributesToAttributes\n}","import './CollapseTable.css'\nimport ElementUtilities from './ElementUtilities'\nimport NodeUtilities from './NodeUtilities'\nimport Polyfill from './Polyfill'\nimport SectionUtilities from './SectionUtilities'\n\nconst NODE_TYPE = NodeUtilities.NODE_TYPE\n\nconst SECTION_TOGGLED_EVENT_TYPE = 'section-toggled'\nconst BREAKING_SPACE = ' '\nconst CLASS = {\n  ICON: 'pagelib_collapse_table_icon',\n  CONTAINER: 'pagelib_collapse_table_container',\n  COLLAPSED_CONTAINER: 'pagelib_collapse_table_collapsed_container',\n  COLLAPSED: 'pagelib_collapse_table_collapsed',\n  COLLAPSED_BOTTOM: 'pagelib_collapse_table_collapsed_bottom',\n  COLLAPSE_TEXT: 'pagelib_collapse_table_collapse_text',\n  EXPANDED: 'pagelib_collapse_table_expanded',\n  TABLE_INFOBOX: 'pagelib_table_infobox',\n  TABLE_OTHER: 'pagelib_table_other'\n}\n\n/**\n * Determine if we want to extract text from this header.\n * @param {!Element} header\n * @return {!boolean}\n */\nconst isHeaderEligible =\n  header => Polyfill.querySelectorAll(header, 'a').length < 3\n\n/**\n * Determine eligibility of extracted text.\n * @param {?string} headerText\n * @return {!boolean}\n */\nconst isHeaderTextEligible = headerText =>\n  headerText && headerText.replace(/[\\s0-9]/g, '').length > 0\n\n/**\n * Extracts first word from string. Returns null if for any reason it is unable to do so.\n * @param  {!string} string\n * @return {?string}\n */\nconst firstWordFromString = string => {\n  // 'If the global flag (g) is not set, Element zero of the array contains the entire match,\n  // while elements 1 through n contain any submatches.'\n  const matches = string.match(/\\w+/) // Only need first match so not using 'g' option.\n  if (!matches) {\n    return undefined\n  }\n  return matches[0]\n}\n\n/**\n * Is node's textContent too similar to pageTitle. Checks if the first word of the node's\n * textContent is found at the beginning of pageTitle.\n * @param  {!Node} node\n * @param  {!string} pageTitle\n * @return {!boolean}\n */\nconst isNodeTextContentSimilarToPageTitle = (node, pageTitle) => {\n  const firstPageTitleWord = firstWordFromString(pageTitle)\n  const firstNodeTextContentWord = firstWordFromString(node.textContent)\n  // Don't claim similarity if 1st words were not extracted.\n  if (!firstPageTitleWord || !firstNodeTextContentWord) {\n    return false\n  }\n  return firstPageTitleWord.toLowerCase() === firstNodeTextContentWord.toLowerCase()\n}\n\n/**\n * Removes leading and trailing whitespace and normalizes other whitespace - i.e. ensures\n * non-breaking spaces, tabs, etc are replaced with regular breaking spaces.\n * @param  {!string} string\n * @return {!string}\n */\nconst stringWithNormalizedWhitespace = string => string.trim().replace(/\\s/g, BREAKING_SPACE)\n\n/**\n * Determines if node is a BR.\n * @param  {!Node}  node\n * @return {!boolean}\n */\nconst isNodeBreakElement = node => node.nodeType === NODE_TYPE.ELEMENT_NODE && node.tagName === 'BR'\n\n/**\n * Replace node with a text node bearing a single breaking space.\n * @param {!Document} document\n * @param  {!Node} node\n * @return {void}\n */\nconst replaceNodeWithBreakingSpaceTextNode = (document, node) => {\n  node.parentNode.replaceChild(document.createTextNode(BREAKING_SPACE), node)\n}\n\n/**\n * Extracts any header text determined to be eligible.\n * @param {!Document} document\n * @param {!Element} header\n * @param {?string} pageTitle\n * @return {?string}\n */\nconst extractEligibleHeaderText = (document, header, pageTitle) => {\n  if (!isHeaderEligible(header)) {\n    return null\n  }\n  // Clone header into fragment. This is done so we can remove some elements we don't want\n  // represented when \"textContent\" is used. Because we've cloned the header into a fragment, we are\n  // free to strip out anything we want without worrying about affecting the visible document.\n  const fragment = document.createDocumentFragment()\n  fragment.appendChild(header.cloneNode(true))\n  const fragmentHeader = fragment.querySelector('th')\n\n  Polyfill.querySelectorAll(\n    fragmentHeader, '.geo, .coordinates, sup.reference, ol, ul, style, script'\n  ).forEach(el => el.remove())\n\n  let cur = fragmentHeader.lastChild\n  while (cur) {\n    if (pageTitle\n      && NodeUtilities.isNodeTypeElementOrText(cur)\n      && isNodeTextContentSimilarToPageTitle(cur, pageTitle)) {\n      if (cur.previousSibling) {\n        cur = cur.previousSibling\n        cur.nextSibling.remove()\n      } else {\n        cur.remove()\n        cur = undefined\n      }\n    } else if (isNodeBreakElement(cur)) {\n      replaceNodeWithBreakingSpaceTextNode(document, cur)\n      cur = cur.previousSibling\n    } else {\n      cur = cur.previousSibling\n    }\n  }\n\n  const headerText = fragmentHeader.textContent\n  if (isHeaderTextEligible(headerText)) {\n    return stringWithNormalizedWhitespace(headerText)\n  }\n  return null\n}\n\n/**\n * Used to sort array of Elements so those containing 'scope' attribute are moved to front of\n * array. Relative order between 'scope' elements is preserved. Relative order between non 'scope'\n * elements is preserved.\n * @param  {!Element} a\n * @param  {!Element} b\n * @return {!number}\n */\nconst elementScopeComparator = (a, b) => {\n  const aHasScope = a.hasAttribute('scope')\n  const bHasScope = b.hasAttribute('scope')\n  if (aHasScope && bHasScope) {\n    return 0\n  }\n  if (aHasScope) {\n    return -1\n  }\n  if (bHasScope) {\n    return 1\n  }\n  return 0\n}\n\n/**\n * Find an array of table header (TH) contents. If there are no TH elements in\n * the table or the header's link matches pageTitle, an empty array is returned.\n * @param {!Document} document\n * @param {!Element} element\n * @param {?string} pageTitle Unencoded page title; if this title matches the\n *                            contents of the header exactly, it will be omitted.\n * @return {!Array<string>}\n */\nconst getTableHeaderTextArray = (document, element, pageTitle) => {\n  const headerTextArray = []\n  const headers = Polyfill.querySelectorAll(element, 'th')\n  headers.sort(elementScopeComparator)\n  for (let i = 0; i < headers.length; ++i) {\n    const headerText = extractEligibleHeaderText(document, headers[i], pageTitle)\n    if (headerText && headerTextArray.indexOf(headerText) === -1) {\n      headerTextArray.push(headerText)\n      // 'newCaptionFragment' only ever uses the first 2 items.\n      if (headerTextArray.length === 2) {\n        break\n      }\n    }\n  }\n  return headerTextArray\n}\n\n/**\n * @typedef {function} FooterDivClickCallback\n * @param {!HTMLElement}\n * @return {void}\n */\n\n/**\n * @param {!Element} container div\n * @param {?Element} trigger element that was clicked or tapped\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {boolean} true if collapsed, false if expanded.\n */\nconst toggleCollapsedForContainer = function(container, trigger, footerDivClickCallback) {\n  const header = container.children[0]\n  const table = container.children[1]\n  const footer = container.children[2]\n  const caption = header.querySelector('.app_table_collapsed_caption')\n  const collapsed = table.style.display !== 'none'\n  if (collapsed) {\n    table.style.display = 'none'\n    header.classList.remove(CLASS.COLLAPSED)\n    header.classList.remove(CLASS.ICON)\n    header.classList.add(CLASS.EXPANDED)\n    if (caption) {\n      caption.style.visibility = 'visible'\n    }\n    footer.style.display = 'none'\n    // if they clicked the bottom div, then scroll back up to the top of the table.\n    if (trigger === footer && footerDivClickCallback) {\n      footerDivClickCallback(container)\n    }\n  } else {\n    table.style.display = 'block'\n    header.classList.remove(CLASS.EXPANDED)\n    header.classList.add(CLASS.COLLAPSED)\n    header.classList.add(CLASS.ICON)\n    if (caption) {\n      caption.style.visibility = 'hidden'\n    }\n    footer.style.display = 'block'\n  }\n  return collapsed\n}\n\n/**\n * Ex: toggleCollapseClickCallback.bind(el, (container) => {\n *       window.scrollTo(0, container.offsetTop - transformer.getDecorOffset())\n *     })\n * @this HTMLElement\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {boolean} true if collapsed, false if expanded.\n */\nconst toggleCollapseClickCallback = function(footerDivClickCallback) {\n  const container = this.parentNode\n  return toggleCollapsedForContainer(container, this, footerDivClickCallback)\n}\n\n/**\n * @param {!HTMLElement} table\n * @return {!boolean} true if table should be collapsed, false otherwise.\n */\nconst shouldTableBeCollapsed = table => {\n  const classBlacklist = ['navbox', 'vertical-navbox', 'navbox-inner', 'metadata', 'mbox-small']\n  const blacklistIntersects = classBlacklist.some(clazz => table.classList.contains(clazz))\n  let isHidden\n  // Wrap in a try-catch block to avoid Domino crashing on a malformed style declaration.\n  // T229521\n  try {\n    isHidden = table.style.display === 'none'\n  } catch (e) {\n    // If Domino fails to parse styles, err on the safe side and don't transform\n    isHidden = true\n  }\n  return !isHidden && !blacklistIntersects\n}\n\n/**\n * @param {!Element} element\n * @return {!boolean} true if element is an infobox, false otherwise.\n */\nconst isInfobox = element =>\n  element.classList.contains('infobox')\n  || element.classList.contains('infobox_v3')\n\n/**\n * @param {!Document} document\n * @param {!DocumentFragment} content\n * @return {!HTMLDivElement}\n */\nconst newCollapsedHeaderDiv = (document, content) => {\n  const div = document.createElement('div')\n  div.classList.add(CLASS.COLLAPSED_CONTAINER)\n  div.classList.add(CLASS.EXPANDED)\n  div.appendChild(content)\n  return div\n}\n\n/**\n * @param {!Document} document\n * @param {?string} content HTML string.\n * @return {!HTMLDivElement}\n */\nconst newCollapsedFooterDiv = (document, content) => {\n  const div = document.createElement('div')\n  div.classList.add(CLASS.COLLAPSED_BOTTOM)\n  div.classList.add(CLASS.ICON)\n  div.innerHTML = content || ''\n  return div\n}\n\n/**\n * @param {!Document} document\n * @param {!string} title\n * @param {!string} titleClass\n * @param {!Array.<string>} headerText\n * @return {!DocumentFragment}\n */\nconst newCaptionFragment = (document, title, titleClass, headerText) => {\n  const fragment = document.createDocumentFragment()\n\n  const strong = document.createElement('strong')\n  strong.innerHTML = title\n  strong.classList.add(titleClass)\n  fragment.appendChild(strong)\n\n  const span = document.createElement('span')\n  span.classList.add(CLASS.COLLAPSE_TEXT)\n  if (headerText.length > 0) {\n    span.appendChild(document.createTextNode(`: ${headerText[0]}`))\n  }\n  if (headerText.length > 1) {\n    span.appendChild(document.createTextNode(`, ${headerText[1]}`))\n  }\n  if (headerText.length > 0) {\n    span.appendChild(document.createTextNode(' …'))\n  }\n  fragment.appendChild(span)\n\n  return fragment\n}\n\n/**\n * @param {!Node} nodeToReplace\n * @param {!Node} replacementNode\n * @return {void}\n */\nconst replaceNodeInSection = (nodeToReplace, replacementNode) => {\n  if (!nodeToReplace || !replacementNode) {\n    return\n  }\n  let childOfSectionTag = nodeToReplace\n  let sectionTag = nodeToReplace.parentNode\n  if (!sectionTag) {\n    return\n  }\n  let foundSectionTag = false\n  while (sectionTag) {\n    if (SectionUtilities.isMediaWikiSectionElement(sectionTag)) {\n      foundSectionTag = true\n      break\n    }\n    childOfSectionTag = sectionTag\n    sectionTag = sectionTag.parentNode\n  }\n  if (!foundSectionTag) {\n    childOfSectionTag = nodeToReplace\n    sectionTag = nodeToReplace.parentNode\n  }\n  sectionTag.insertBefore(replacementNode, childOfSectionTag)\n  sectionTag.removeChild(childOfSectionTag)\n}\n\n/**\n * @param {!Document} document\n * @param {?string} pageTitle use title for this not `display title` (which can contain tags)\n * @param {?string} infoboxTitle\n * @param {?string} otherTitle\n * @param {?string} footerTitle\n * @return {void}\n */\nconst prepareTables = (document, pageTitle, infoboxTitle, otherTitle, footerTitle) => {\n  const tables = document.querySelectorAll('table, .infobox_v3')\n  for (let i = 0; i < tables.length; ++i) {\n    const table = tables[i]\n\n    if (ElementUtilities.findClosestAncestor(table, `.${CLASS.CONTAINER}`)\n      || !shouldTableBeCollapsed(table)) {\n      continue\n    }\n\n    const headerTextArray = getTableHeaderTextArray(document, table, pageTitle)\n    if (!headerTextArray.length && !isInfobox(table)) {\n      continue\n    }\n    const captionFragment =\n      newCaptionFragment(\n        document,\n        isInfobox(table) ? infoboxTitle : otherTitle,\n        isInfobox(table) ? CLASS.TABLE_INFOBOX : CLASS.TABLE_OTHER,\n        headerTextArray)\n\n    // create the container div that will contain both the original table\n    // and the collapsed version.\n    const containerDiv = document.createElement('div')\n    containerDiv.className = CLASS.CONTAINER\n    replaceNodeInSection(table, containerDiv)\n\n    // remove top and bottom margin from the table, so that it's flush with\n    // our expand/collapse buttons\n    table.style.marginTop = '0px'\n    table.style.marginBottom = '0px'\n\n    const collapsedHeaderDiv = newCollapsedHeaderDiv(document, captionFragment)\n    collapsedHeaderDiv.style.display = 'block'\n\n    const collapsedFooterDiv = newCollapsedFooterDiv(document, footerTitle)\n    collapsedFooterDiv.style.display = 'none'\n\n    // add our stuff to the container\n    containerDiv.appendChild(collapsedHeaderDiv)\n    containerDiv.appendChild(table)\n    containerDiv.appendChild(collapsedFooterDiv)\n\n    // set initial visibility\n    table.style.display = 'none'\n  }\n}\n\n/**\n * @param {!Element} container root element to search from\n * @return {void}\n */\nconst toggleCollapsedForAll = container => {\n  const containerDivs = Polyfill.querySelectorAll(container, `.${CLASS.CONTAINER}`)\n  containerDivs.forEach(containerDiv => {\n    toggleCollapsedForContainer(containerDiv)\n  })\n}\n\n/**\n * @param {!Window} window\n * @param {!Element} container root element to search from\n * @param {?boolean} isInitiallyCollapsed\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {void}\n */\nconst setupEventHandling = (window, container, isInitiallyCollapsed, footerDivClickCallback) => {\n  /**\n   * @param {boolean} collapsed\n   * @return {boolean}\n   */\n  const dispatchSectionToggledEvent = collapsed =>\n    window.dispatchEvent(new Polyfill.CustomEvent(SECTION_TOGGLED_EVENT_TYPE, { collapsed }))\n\n  // assign click handler to the collapsed divs\n  const collapsedHeaderDivs = Polyfill.querySelectorAll(container, `.${CLASS.COLLAPSED_CONTAINER}`)\n  collapsedHeaderDivs.forEach(collapsedHeaderDiv => {\n    collapsedHeaderDiv.onclick = () => {\n      const collapsed = toggleCollapseClickCallback.bind(collapsedHeaderDiv)()\n      dispatchSectionToggledEvent(collapsed)\n    }\n  })\n\n  const collapsedFooterDivs = Polyfill.querySelectorAll(container, `.${CLASS.COLLAPSED_BOTTOM}`)\n  collapsedFooterDivs.forEach(collapsedFooterDiv => {\n    collapsedFooterDiv.onclick = () => {\n      const collapsed = toggleCollapseClickCallback.bind(collapsedFooterDiv,\n        footerDivClickCallback)()\n      dispatchSectionToggledEvent(collapsed)\n    }\n  })\n\n  if (!isInitiallyCollapsed) {\n    toggleCollapsedForAll(container)\n  }\n}\n\n/**\n * @param {!Window} window\n * @param {!Document} document\n * @param {?string} pageTitle use title for this not `display title` (which can contain tags)\n * @param {?boolean} isMainPage\n * @param {?boolean} isInitiallyCollapsed\n * @param {?string} infoboxTitle\n * @param {?string} otherTitle\n * @param {?string} footerTitle\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {void}\n */\nconst adjustTables = (window, document, pageTitle, isMainPage, isInitiallyCollapsed,\n  infoboxTitle, otherTitle, footerTitle, footerDivClickCallback) => {\n  if (isMainPage) { return }\n\n  prepareTables(document, pageTitle, infoboxTitle, otherTitle, footerTitle)\n  setupEventHandling(window, document, isInitiallyCollapsed, footerDivClickCallback)\n}\n\n/**\n * @param {!Window} window\n * @param {!Document} document\n * @param {?string} pageTitle use title for this not `display title` (which can contain tags)\n * @param {?boolean} isMainPage\n * @param {?string} infoboxTitle\n * @param {?string} otherTitle\n * @param {?string} footerTitle\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {void}\n */\nconst collapseTables = (window, document, pageTitle, isMainPage, infoboxTitle, otherTitle,\n  footerTitle, footerDivClickCallback) => {\n  adjustTables(window, document, pageTitle, isMainPage, true, infoboxTitle, otherTitle,\n    footerTitle, footerDivClickCallback)\n}\n\n/**\n * If you tap a reference targeting an anchor within a collapsed table, this\n * method will expand the references section. The client can then scroll to the\n * references section.\n *\n * The first reference (an \"[A]\") in the \"enwiki > Airplane\" article from ~June\n * 2016 exhibits this issue. (You can copy wikitext from this revision into a\n * test wiki page for testing.)\n * @param  {?Element} element\n * @return {void}\n*/\nconst expandCollapsedTableIfItContainsElement = element => {\n  if (element) {\n    const containerSelector = `[class*=\"${CLASS.CONTAINER}\"]`\n    const container = ElementUtilities.findClosestAncestor(element, containerSelector)\n    if (container) {\n      const collapsedDiv = container.firstElementChild\n      if (collapsedDiv && collapsedDiv.classList.contains(CLASS.EXPANDED)) {\n        collapsedDiv.click()\n      }\n    }\n  }\n}\n\nexport default {\n  CLASS,\n  SECTION_TOGGLED_EVENT_TYPE,\n  toggleCollapsedForAll,\n  toggleCollapseClickCallback,\n  collapseTables,\n  adjustTables,\n  prepareTables,\n  setupEventHandling,\n  expandCollapsedTableIfItContainsElement,\n  test: {\n    elementScopeComparator,\n    extractEligibleHeaderText,\n    firstWordFromString,\n    getTableHeaderTextArray,\n    shouldTableBeCollapsed,\n    isHeaderEligible,\n    isHeaderTextEligible,\n    isInfobox,\n    newCollapsedHeaderDiv,\n    newCollapsedFooterDiv,\n    newCaptionFragment,\n    isNodeTextContentSimilarToPageTitle,\n    stringWithNormalizedWhitespace,\n    replaceNodeWithBreakingSpaceTextNode\n  }\n}","/**\n * get Section Offsets object to handle quick scrolling in the table of contents\n * @param  {!HTMLBodyElement} body HTML body element DOM object.\n * @return {!object} section offsets object\n */\nconst getSectionOffsets = (body: HTMLBodyElement): object => {\n    const sections = Array.from(body.querySelectorAll('section'))\n    return {\n        sections: sections.reduce((results: Array<object>, section: HTMLElement) => {\n            const id = section.getAttribute('data-mw-section-id');\n            const heading = section &&\n                section.firstElementChild &&\n                section.firstElementChild.querySelector('.pagelib_edit_section_title');\n            if (id && parseInt(id) >= 1) {\n                results.push({\n                    heading: heading && heading.innerHTML,\n                    id: parseInt(id),\n                    yOffset: section.offsetTop,\n                });\n            }\n            return results;\n        }, [])\n    }\n}\n\n/**\n * Get section of a given element\n * @param  {!Element} element\n * @return {!Element} section\n */\nconst getSectionOfElement = (element: Element): Element | null => {\n    let current: Element | null = element\n    while (current) {\n        if (isMediaWikiSectionElement(current)) {\n            return current\n        }\n        current = current.parentElement\n    }\n    return null\n}\n\n/**\n * Get section id of a given element\n * @param  {!Element} element\n * @return {!Element} section\n */\nconst getSectionIDOfElement = (element: Element): string | null => {\n    let section = getSectionOfElement(element)\n    return section && (section.getAttribute('data-mw-section-id') || section.id.replace('content_block_', ''))\n}\n\n/**\n * Get lead paragraph text\n * @param  {!Document} document object.\n * @return {!string} lead paragraph text\n */\nconst getLeadParagraphText = (document: Document): string => {\n    let firstParagaphInASection = <HTMLElement>document.querySelector('#content_block_0>p');\n    return firstParagaphInASection && firstParagaphInASection.innerText || '';\n}\n\n\n/**\n * @param {!Element} element - element to test\n * @return {boolean} true if this is a element that represents a MediaWiki section\n */\nconst isMediaWikiSectionElement = (element: Element): boolean => {\n    if (!element) {\n        return false\n    }\n    // mobile-html output has `data-mw-section-id` attributes on section tags\n    if (element.tagName === 'SECTION' && element.getAttribute('data-mw-section-id')) {\n        return true\n    }\n    // The iOS app wraps MobileView sections with a div with the `content_block` class\n    // This should be removed after the iOS app switches to mobile-html\n    if (element.tagName === 'DIV' && element.classList && element.classList.contains('content_block')) {\n        return true\n    }\n    return false\n}\n\nexport default {\n    getSectionIDOfElement,\n    getLeadParagraphText,\n    getSectionOffsets,\n    isMediaWikiSectionElement\n}","// Node is undefined in Node.js\nconst NODE_TYPE = {\n  ELEMENT_NODE: 1,\n  TEXT_NODE: 3\n}\n\n/**\n * Determines if node is either an element or text node.\n * @param  {!Node} node\n * @return {!boolean}\n */\nconst isNodeTypeElementOrText = node =>\n  node.nodeType === NODE_TYPE.ELEMENT_NODE || node.nodeType === NODE_TYPE.TEXT_NODE\n\nexport default {\n  isNodeTypeElementOrText,\n  NODE_TYPE\n}","import './LazyLoadTransform.css'\n// todo: use imports when other modules are TypeScript.\nconst ElementGeometry = require('./ElementGeometry').default\nconst ElementUtilities = require('./ElementUtilities').default\nconst Polyfill = require('./Polyfill').default\n\n// CSS classes used to identify and present lazily loaded images. Placeholders are members of\n// PLACEHOLDER_CLASS and one state class: pending, loading, or error. Images are members of either\n// loading or loaded state classes. Class names should match those in LazyLoadTransform.css.\nconst PLACEHOLDER_CLASS = 'pagelib_lazy_load_placeholder'\nconst PLACEHOLDER_PENDING_CLASS = 'pagelib_lazy_load_placeholder_pending' // Download pending.\nconst PLACEHOLDER_LOADING_CLASS = 'pagelib_lazy_load_placeholder_loading' // Download started.\nconst PLACEHOLDER_ERROR_CLASS = 'pagelib_lazy_load_placeholder_error' // Download failure.\nconst IMAGE_LOADING_CLASS = 'pagelib_lazy_load_image_loading' // Download started.\nconst IMAGE_LOADED_CLASS = 'pagelib_lazy_load_image_loaded' // Download completed.\n\nconst CLASSES = {\n  PLACEHOLDER_CLASS,\n  PLACEHOLDER_PENDING_CLASS,\n  PLACEHOLDER_LOADING_CLASS,\n  PLACEHOLDER_ERROR_CLASS,\n  IMAGE_LOADING_CLASS,\n  IMAGE_LOADED_CLASS\n}\n\n// Attributes copied from images to placeholders via data-* attributes for later restoration. The\n// image's classes and dimensions are also set on the placeholder.\n// The 3 data-* items are used by iOS.\nconst COPY_ATTRIBUTES = ['class', 'style', 'src', 'srcset', 'width', 'height', 'alt',\n  'usemap', 'data-file-width', 'data-file-height', 'data-image-gallery'\n]\n\n// Small images, especially icons, are quickly downloaded and may appear in many places. Lazily\n// loading these images degrades the experience with little gain. Always eagerly load these images.\n// Example: flags in the medal count for the \"1896 Summer Olympics medal table.\"\n// https://en.m.wikipedia.org/wiki/1896_Summer_Olympics_medal_table?oldid=773498394#Medal_count\nconst UNIT_TO_MINIMUM_LAZY_LOAD_SIZE: {[unit in string]?: number} = {\n  px: 50, // https://phabricator.wikimedia.org/diffusion/EMFR/browse/master/includes/MobileFormatter.php;c89f371ea9e789d7e1a827ddfec7c8028a549c12$22\n  ex: 10, // ''\n  em: 5 // 1ex ≈ .5em; https://developer.mozilla.org/en-US/docs/Web/CSS/length#Units\n}\n\n/**\n * Replace an image with a placeholder.\n * @param {!Document} document\n * @param {!HTMLImageElement} image The image to be replaced.\n * @return {!HTMLSpanElement} The placeholder replacing image.\n */\nconst convertImageToPlaceholder = (document: Document, image: HTMLImageElement): HTMLSpanElement => {\n  // There are a number of possible implementations for placeholders including:\n  //\n  // - [MobileFrontend] Replace the original image with a span and replace the span with a new\n  //   downloaded image.\n  //   This option has a good fade-in but has some CSS concerns for the placeholder, particularly\n  //   `max-width`, and causes significant reflows when used with image widening.\n  //\n  // - [Previous] Replace the original image with a span and append a new downloaded image to the\n  //   span.\n  //   This option has the best cross-fading and extensibility but makes duplicating all the CSS\n  //   rules for the appended image impractical.\n  //\n  // - [Previous] Replace the original image's source with a transparent image and update the source\n  //   from a new downloaded image.\n  //   This option has a good fade-in and minimal CSS concerns for the placeholder and image but\n  //   causes significant reflows when used with image widening.\n  //\n  // - [Current] Replace the original image with a couple spans and replace the spans with a new\n  //   downloaded image.\n  //   This option is about the same as MobileFrontend but supports image widening without reflows.\n\n  // Create the root placeholder.\n  const placeholder = document.createElement('span')\n\n  // Copy the image's classes and append the placeholder and current state (pending) classes.\n  if (image.hasAttribute('class')) {\n    placeholder.setAttribute('class', image.getAttribute('class') || '')\n  }\n  placeholder.classList.add(PLACEHOLDER_CLASS)\n  placeholder.classList.add(PLACEHOLDER_PENDING_CLASS)\n\n  // Match the image's width, if specified. If image widening is used, this width will be overridden\n  // by !important priority.\n  const geometry = ElementGeometry.from(image)\n  if (geometry.width) { placeholder.style.setProperty('width', `${geometry.width}`) }\n\n  // Save the image's attributes to data-* attributes for later restoration.\n  ElementUtilities.copyAttributesToDataAttributes(image, placeholder, COPY_ATTRIBUTES)\n\n  // Create a spacer and match the aspect ratio of the original image, if determinable. If image\n  // widening is used, this spacer will scale with the width proportionally.\n  const spacing = document.createElement('span')\n  if (geometry.width && geometry.height) {\n    // Assume units are identical.\n    const ratio = geometry.heightValue / geometry.widthValue\n    spacing.style.setProperty('padding-top', `${ratio * 100}%`)\n  }\n\n  // Append the spacer to the placeholder and replace the image with the placeholder.\n  placeholder.appendChild(spacing)\n  if (image.parentNode) image.parentNode.replaceChild(placeholder, image)\n\n  return placeholder\n}\n\n/**\n * @param {!HTMLImageElement} image The image to be considered.\n * @return {!boolean} true if image download can be deferred, false if image should be eagerly\n *                    loaded.\n */\nconst isLazyLoadable = (image: HTMLImageElement): boolean => {\n  const geometry = ElementGeometry.from(image)\n  if (!geometry.width || !geometry.height) { return true }\n  const minWidth = UNIT_TO_MINIMUM_LAZY_LOAD_SIZE[geometry.widthUnit] || Infinity\n  const minHeight = UNIT_TO_MINIMUM_LAZY_LOAD_SIZE[geometry.heightUnit] || Infinity\n  return geometry.widthValue >= minWidth && geometry.heightValue >= minHeight\n}\n\n/**\n * @param {!Element} element\n * @return {!Array.<HTMLImageElement>} Convertible images descendent from but not including element.\n */\nconst queryLazyLoadableImages = (element: Element): HTMLImageElement[] =>\n  Polyfill.querySelectorAll(element, 'img').filter((image: HTMLImageElement) => isLazyLoadable(image))\n\n/**\n * Convert images with placeholders. The transformation is inverted by calling loadImage().\n * @param {!Document} document\n * @param {!Array.<HTMLImageElement>} images The images to lazily load.\n * @return {!Array.<HTMLSpanElement>} The placeholders replacing images.\n */\nconst convertImagesToPlaceholders = (document: Document, images: HTMLImageElement[]): HTMLSpanElement[] =>\n  images.map(image => convertImageToPlaceholder(document, image))\n\n/**\n * Start downloading image resources associated with a given placeholder and replace the placeholder\n * with a new image element when the download is complete.\n * @param {!Document} document\n * @param {!HTMLSpanElement} placeholder\n * @return {!HTMLImageElement} A new image element.\n */\nconst loadPlaceholder = (document: Document, placeholder: HTMLSpanElement): HTMLImageElement => {\n  placeholder.classList.add(PLACEHOLDER_LOADING_CLASS)\n  placeholder.classList.remove(PLACEHOLDER_PENDING_CLASS)\n\n  const image = document.createElement('img')\n\n  const retryListener = (event: MouseEvent) => { // eslint-disable-line require-jsdoc\n    image.setAttribute('src', image.getAttribute('src') || '')\n    event.stopPropagation()\n    event.preventDefault()\n  }\n\n  // Add the download listener prior to setting the src attribute to avoid missing the load event.\n  image.addEventListener('load', () => {\n    placeholder.removeEventListener('click', retryListener)\n    if (placeholder.parentNode) placeholder.parentNode.replaceChild(image, placeholder)\n    image.classList.add(IMAGE_LOADED_CLASS)\n    image.classList.remove(IMAGE_LOADING_CLASS)\n  }, { once: true })\n\n  image.addEventListener('error', () => {\n    placeholder.classList.add(PLACEHOLDER_ERROR_CLASS)\n    placeholder.classList.remove(PLACEHOLDER_LOADING_CLASS)\n    placeholder.addEventListener('click', retryListener)\n  }, { once: true })\n\n  // Set src and other attributes, triggering a download.\n  ElementUtilities.copyDataAttributesToAttributes(placeholder, image, COPY_ATTRIBUTES)\n\n  // Append to the class list after copying over any preexisting classes.\n  image.classList.add(IMAGE_LOADING_CLASS)\n\n  return image\n}\n\nexport default {\n  CLASSES,\n  PLACEHOLDER_CLASS,\n  queryLazyLoadableImages,\n  convertImagesToPlaceholders,\n  loadPlaceholder\n}","/** Function rate limiter. */\nexport default class Throttle {\n  /**\n   * The function to invoke when not throttled.\n   *\n   * @callback NotThrottledFunction\n   */\n\n  /**\n   * A function wrapped in a Throttle.\n   *\n   * @callback WrappedFunction\n   */\n\n  /**\n   * Wraps a function in a Throttle.\n   * @param {!Window} window\n   * @param {!number} period The nonnegative minimum number of milliseconds between function\n   *                         invocations.\n   * @param {!NotThrottledFunction} funktion\n   * @return {!WrappedFunction}\n   */\n  static wrap(window, period, funktion) {\n    const throttle = new Throttle(window, period, funktion)\n    const throttled = function Throttled() { return throttle.queue(this, arguments) }\n    throttled.result = () => throttle.result\n    throttled.pending = () => throttle.pending()\n    throttled.delay = () => throttle.delay()\n    throttled.cancel = () => throttle.cancel()\n    throttled.reset = () => throttle.reset()\n    return throttled\n  }\n\n  /**\n   * @param {!Window} window\n   * @param {!number} period The nonnegative minimum number of milliseconds between function\n   *                         invocations.\n   * @param {!NotThrottledFunction} funktion\n   */\n  constructor(window, period, funktion) {\n    this._window = window\n    this._period = period\n    this._function = funktion\n\n    // The upcoming invocation's context and arguments.\n    this._context = undefined\n    this._arguments = undefined\n\n    // The previous invocation's result, timeout identifier, and last run timestamp.\n    this._result = undefined\n    this._timeout = 0\n    this._timestamp = 0\n  }\n\n  /**\n   * The return value of the initial run is always undefined. The return value of subsequent runs is\n   * always a previous result. The context and args used by a future invocation are always the most\n   * recently supplied. Invocations, even if immediately eligible, are dispatched.\n   * @param {?any} context\n   * @param {?any} args The arguments passed to the underlying function.\n   * @return {?any} The cached return value of the underlying function.\n   */\n  queue(context, args) {\n    // Always update the this and arguments to the latest supplied.\n    this._context = context\n    this._arguments = args\n\n    if (!this.pending()) {\n      // Queue a new invocation.\n      this._timeout = this._window.setTimeout(() => {\n        this._timeout = 0\n        this._timestamp = Date.now()\n        this._result = this._function.apply(this._context, this._arguments)\n      }, this.delay())\n    }\n\n    // Always return the previous result.\n    return this.result\n  }\n\n  /** @return {?any} The cached return value of the underlying function. */\n  get result() { return this._result }\n\n  /** @return {!boolean} true if an invocation is queued. */\n  pending() { return Boolean(this._timeout) }\n\n  /**\n   * @return {!number} The nonnegative number of milliseconds until an invocation is eligible to\n   *                   run.\n   */\n  delay() {\n    if (!this._timestamp) { return 0 }\n    return Math.max(0, this._period - (Date.now() - this._timestamp))\n  }\n\n  /**\n   * Clears any pending invocation but doesn't clear time last invoked or prior result.\n   * @return {void}\n   */\n  cancel() {\n    if (this._timeout) { this._window.clearTimeout(this._timeout) }\n    this._timeout = 0\n  }\n\n  /**\n   * Clears any pending invocation, time last invoked, and prior result.\n   * @return {void}\n   */\n  reset() {\n    this.cancel()\n    this._result = undefined\n    this._timestamp = 0\n  }\n}","import './FooterContainer.css'\n\n/**\n * Returns a fragment containing structural footer html which may be inserted where needed.\n * @param {!Document} document\n * @return {!DocumentFragment}\n */\nconst containerFragment = document => {\n  const containerFragment = document.createDocumentFragment()\n  const menuSection = document.createElement('section')\n  menuSection.id = 'pagelib_footer_container_menu'\n  menuSection.className = 'pagelib_footer_section'\n  menuSection.innerHTML =\n  `<h2 id='pagelib_footer_container_menu_heading'></h2>\n   <div id='pagelib_footer_container_menu_items'></div>`\n  containerFragment.appendChild(menuSection)\n  const readMoreSection = document.createElement('section')\n  readMoreSection.id = 'pagelib_footer_container_readmore'\n  readMoreSection.className = 'pagelib_footer_section'\n  readMoreSection.innerHTML =\n  `<h2 id='pagelib_footer_container_readmore_heading'></h2>\n   <div id='pagelib_footer_container_readmore_pages'></div>`\n  containerFragment.appendChild(readMoreSection)\n  const legalSection = document.createElement('section')\n  legalSection.id = 'pagelib_footer_container_legal'\n  containerFragment.appendChild(legalSection)\n  return containerFragment\n}\n\n/**\n * Indicates whether container is has already been added.\n * @param {!Document} document\n * @return {boolean}\n */\nconst isContainerAttached = document => Boolean(document.querySelector('#pagelib_footer_container'))\n\nexport default {\n  containerFragment,\n  isContainerAttached // todo: rename isAttached()?\n}","import './FooterLegal.css'\n\n/**\n * @typedef {function} FooterLegalClickCallback\n * @return {void}\n */\n\n/**\n  * @typedef {function} FooterBrowserClickCallback\n  * @return {void}\n  */\n\n/**\n * Adds legal footer html to 'containerID' element.\n * @param {!Element} content\n * @param {?string} licenseString\n * @param {?string} licenseSubstitutionString\n * @param {!string} containerID\n * @param {!FooterLegalClickCallback} licenseLinkClickHandler\n * @param {!string} viewInBrowserString\n * @param {!FooterBrowserClickCallback} browserLinkClickHandler\n * @return {void}\n */\nconst add = (content, licenseString, licenseSubstitutionString, containerID,\n  licenseLinkClickHandler, viewInBrowserString, browserLinkClickHandler) => {\n  // todo: don't manipulate the selector. The client can make this an ID if they want it to be.\n  const container = content.querySelector(`#${containerID}`)\n  const licenseStringHalves = licenseString.split('$1')\n\n  container.innerHTML =\n  `<div class='pagelib_footer_legal_contents'>\n    <hr class='pagelib_footer_legal_divider'>\n    <span class='pagelib_footer_legal_license'>\n      ${licenseStringHalves[0]}\n      <a class='pagelib_footer_legal_license_link'>\n        ${licenseSubstitutionString}\n      </a>\n      ${licenseStringHalves[1]}\n      <br>\n      <div class=\"pagelib_footer_browser\">\n        <a class='pagelib_footer_browser_link'>\n          ${viewInBrowserString}\n        </a>\n      </div>\n    </span>\n  </div>`\n\n  container.querySelector('.pagelib_footer_legal_license_link')\n    .addEventListener('click', () => {\n      licenseLinkClickHandler()\n    })\n\n  container.querySelector('.pagelib_footer_browser_link')\n    .addEventListener('click', () => {\n      browserLinkClickHandler()\n    })\n}\n\nexport default {\n  add\n}","import Polyfill from './Polyfill'\n\n/**\n * Extracts array of page issues from element\n * @param {!Document} document\n * @param {?Element} element\n * @return {!Array.<string>} Return empty array if nothing is extracted\n */\nconst collectPageIssues = (document, element) => {\n  if (!element) {\n    return []\n  }\n  const tables =\n    Polyfill.querySelectorAll(element, 'table.ambox:not(.ambox-multiple_issues):not(.ambox-notice)')\n  // Get the tables into a fragment so we can remove some elements without triggering a layout\n  const fragment = document.createDocumentFragment()\n  const cloneTableIntoFragment =\n    table => fragment.appendChild(table.cloneNode(true)) // eslint-disable-line require-jsdoc\n  tables.forEach(cloneTableIntoFragment)\n  // Remove some elements we don't want when \"textContent\" or \"innerHTML\" are used\n  Polyfill.querySelectorAll(fragment, '.hide-when-compact, .collapsed').forEach(el => el.remove())\n  return Polyfill.querySelectorAll(fragment, 'td[class*=mbox-text] > *[class*=mbox-text]')\n}\n\n/**\n * Extracts array of page issues HTML from element\n * @param {!Document} document\n * @param {?Element} element\n * @return {!Array.<string>} Return empty array if nothing is extracted\n */\nconst collectPageIssuesHTML = (document, element) =>\n  collectPageIssues(document, element).map(el => el.innerHTML)\n\n/**\n * Extracts array of page issues text from element\n * @param {!Document} document\n * @param {?Element} element\n * @return {!Array.<string>} Return empty array if nothing is extracted\n */\nconst collectPageIssuesText = (document, element) =>\n  collectPageIssues(document, element).map(el => el.textContent.trim())\n\n/**\n * Extracts array of disambiguation titles from an element\n * @param {?Element} element\n * @return {!Array.<string>} Return empty array if nothing is extracted\n */\nconst collectDisambiguationTitles = element => {\n  if (!element) {\n    return []\n  }\n  return Polyfill.querySelectorAll(element, 'div.hatnote a[href]:not([href=\"\"]):not([redlink=\"1\"])')\n    .map(el => el.href)\n}\n\n/**\n * Extracts array of disambiguation items html from an element\n * @param {?Element} element\n * @return {!Array.<string>} Return empty array if nothing is extracted\n */\nconst collectDisambiguationHTML = element => {\n  if (!element) {\n    return []\n  }\n  return Polyfill.querySelectorAll(element, 'div.hatnote').map(el => el.innerHTML)\n}\n\nexport default {\n  collectDisambiguationTitles,\n  collectDisambiguationHTML,\n  collectPageIssuesHTML,\n  collectPageIssuesText,\n  test: {\n    collectPageIssues\n  }\n}","import './FooterReadMore.css'\n\n/**\n * @typedef {function} SaveButtonClickHandler\n * @param {!string} title\n * @return {void}\n */\n\n/**\n * @typedef {function} TitlesShownHandler\n * @param {!Array.<string>} titles\n * @return {void}\n */\n\n/**\n * Display fetched read more pages.\n * @typedef {function} ShowReadMorePagesHandler\n * @param {!Array.<object>} pages\n * @param {!string} containerID\n * @param {!SaveButtonClickHandler} saveButtonClickHandler\n * @param {!TitlesShownHandler} titlesShownHandler\n * @param {!Document} document\n * @return {void}\n */\n\nconst SAVE_BUTTON_ID_PREFIX = 'pagelib_footer_read_more_save_'\n\n/**\n * Removes parenthetical enclosures from string.\n * @param {!string} string\n * @param {!string} opener\n * @param {!string} closer\n * @return {!string}\n */\nconst safelyRemoveEnclosures = (string, opener, closer) => {\n  const enclosureRegex = new RegExp(`\\\\s?[${opener}][^${opener}${closer}]+[${closer}]`, 'g')\n  let counter = 0\n  const safeMaxTries = 30\n  let stringToClean = string\n  let previousString = ''\n  do {\n    previousString = stringToClean\n    stringToClean = stringToClean.replace(enclosureRegex, '')\n    counter++\n  } while (previousString !== stringToClean && counter < safeMaxTries)\n  return stringToClean\n}\n\n/**\n * Removes '(...)' and '/.../' parenthetical enclosures from string.\n * @param {!string} string\n * @return {!string}\n */\nconst cleanExtract = string => {\n  let stringToClean = string\n  stringToClean = safelyRemoveEnclosures(stringToClean, '(', ')')\n  stringToClean = safelyRemoveEnclosures(stringToClean, '/', '/')\n  return stringToClean\n}\n\n/**\n * Read more page model.\n */\nclass ReadMorePage {\n  /**\n   * ReadMorePage constructor.\n   * @param {!string} title\n   * @param {!string} displayTitle\n   * @param {?string} thumbnail\n   * @param {?string} description\n   * @param {?string} extract\n   */\n  constructor(title, displayTitle, thumbnail, description, extract) {\n    this.title = title\n    this.displayTitle = displayTitle\n    this.thumbnail = thumbnail\n    this.description = description\n    this.extract = extract\n  }\n}\n\n/**\n * Makes document fragment for a read more page.\n * @param {!ReadMorePage} readMorePage\n * @param {!number} index\n * @param {!SaveButtonClickHandler} saveButtonClickHandler\n * @param {!Document} document\n * @return {!DocumentFragment}\n */\nconst documentFragmentForReadMorePage = (readMorePage, index, saveButtonClickHandler, document) => {\n  const outerAnchorContainer = document.createElement('a')\n  outerAnchorContainer.id = index\n  outerAnchorContainer.className = 'pagelib_footer_readmore_page'\n\n  const hasImage = readMorePage.thumbnail && readMorePage.thumbnail.source\n  if (hasImage) {\n    const image = document.createElement('div')\n    image.style.backgroundImage = `url(${readMorePage.thumbnail.source})`\n    image.classList.add('pagelib_footer_readmore_page_image')\n    outerAnchorContainer.appendChild(image)\n  }\n\n  const innerDivContainer = document.createElement('div')\n  innerDivContainer.classList.add('pagelib_footer_readmore_page_container')\n  outerAnchorContainer.appendChild(innerDivContainer)\n  outerAnchorContainer.href = `./${encodeURI(readMorePage.title)}?event_logging_label=read_more`\n\n  let titleToShow\n  if (readMorePage.displayTitle) {\n    titleToShow = readMorePage.displayTitle\n  } else if (readMorePage.title) {\n    titleToShow = readMorePage.title\n  }\n\n  if (titleToShow) {\n    const title = document.createElement('div')\n    title.id = index\n    title.className = 'pagelib_footer_readmore_page_title'\n    title.innerHTML = titleToShow.replace(/_/g, ' ')\n    outerAnchorContainer.title = readMorePage.title.replace(/_/g, ' ')\n    innerDivContainer.appendChild(title)\n  }\n\n  let description\n  if (readMorePage.description) {\n    description = readMorePage.description\n  }\n  if ((!description || description.length < 10) && readMorePage.extract) {\n    description = cleanExtract(readMorePage.extract)\n  }\n  if (description) {\n    const descriptionEl = document.createElement('div')\n    descriptionEl.id = index\n    descriptionEl.className = 'pagelib_footer_readmore_page_description'\n    descriptionEl.innerHTML = description\n    innerDivContainer.appendChild(descriptionEl)\n  }\n\n  const saveButton = document.createElement('div')\n  saveButton.id = `${SAVE_BUTTON_ID_PREFIX}${encodeURI(readMorePage.title)}`\n  saveButton.className = 'pagelib_footer_readmore_page_save'\n  saveButton.addEventListener('click', event => {\n    event.stopPropagation()\n    event.preventDefault()\n    saveButtonClickHandler(readMorePage.title)\n  })\n  innerDivContainer.appendChild(saveButton)\n\n  return document.createDocumentFragment().appendChild(outerAnchorContainer)\n}\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @type {ShowReadMorePagesHandler}\n */\nconst showReadMorePages = (pages, containerID, saveButtonClickHandler, titlesShownHandler,\n  document) => {\n  const shownTitles = []\n  const container = document.getElementById(containerID)\n  pages.forEach((page, index) => {\n    const title = page.titles.normalized\n    shownTitles.push(title)\n    const pageModel = new ReadMorePage(title, page.titles.display, page.thumbnail,\n      page.description, page.extract)\n    const pageFragment =\n      documentFragmentForReadMorePage(pageModel, index, saveButtonClickHandler, document)\n    container.appendChild(pageFragment)\n  })\n  titlesShownHandler(shownTitles)\n}\n\n/**\n * URL for retrieving 'Read more' pages for a given title.\n * Leave 'baseURL' null if you don't need to deal with proxying.\n * @param {!string} title\n * @param {!number} count Number of `Read more` items to fetch for this title\n * @param {?string} baseURL\n * @return {!string}\n */\nconst readMoreQueryURL = (title, count, baseURL) =>\n  `${baseURL || ''}/page/related/${title}`\n\n/**\n * Fetch error handler.\n * @param {!string} statusText\n * @return {void}\n */\nconst fetchErrorHandler = statusText => {\n  // TODO: figure out if we want to hide the 'Read more' header in cases when fetch fails.\n  console.log(`statusText = ${statusText}`) // eslint-disable-line no-console\n}\n\n/**\n * Fetches 'Read more' pages.\n * @param {!string} title\n * @param {!number} count\n * @param {!string} containerID\n * @param {?string} baseURL\n * @param {!ShowReadMorePagesHandler} showReadMorePagesHandler\n * @param {!SaveButtonClickHandler} saveButtonClickHandler\n * @param {!TitlesShownHandler} titlesShownHandler\n * @param {!Document} document\n * @return {void}\n */\nconst fetchReadMore = (title, count, containerID, baseURL, showReadMorePagesHandler,\n  saveButtonClickHandler, titlesShownHandler, document) => {\n  const xhr = new XMLHttpRequest() // eslint-disable-line no-undef\n  xhr.open('GET', readMoreQueryURL(title, count, baseURL), true)\n  xhr.onload = () => {\n    if (xhr.readyState === XMLHttpRequest.DONE) { // eslint-disable-line no-undef\n      if (xhr.status === 200) {\n        const pages = JSON.parse(xhr.responseText).pages\n        let results\n        if (pages.length > count) {\n          const rand = Math.floor(Math.random() * Math.floor(pages.length - count))\n          results = pages.slice(rand, rand + count)\n        } else {\n          results = pages\n        }\n        showReadMorePagesHandler(\n          results,\n          containerID,\n          saveButtonClickHandler,\n          titlesShownHandler,\n          document\n        )\n      } else {\n        fetchErrorHandler(xhr.statusText)\n      }\n    }\n  }\n  xhr.onerror = () => fetchErrorHandler(xhr.statusText)\n  try {\n    xhr.send()\n  } catch (error) {\n    fetchErrorHandler(error.toString())\n  }\n}\n\n/**\n * Updates save button bookmark icon for saved state.\n * @param {!HTMLDivElement} button\n * @param {!boolean} isSaved\n * @return {void}\n */\nconst updateSaveButtonBookmarkIcon = (button, isSaved) => {\n  const unfilledClass = 'pagelib_footer_readmore_bookmark_unfilled'\n  const filledClass = 'pagelib_footer_readmore_bookmark_filled'\n  button.classList.remove(filledClass, unfilledClass)\n  button.classList.add(isSaved ? filledClass : unfilledClass)\n}\n\n/**\n * Updates save button text and bookmark icon for saved state.\n * Safe to call even for titles for which there is not currently a 'Read more' item.\n * @param {!string} title\n * @param {!string} text\n * @param {!boolean} isSaved\n * @param {!Document} document\n * @return {void}\n*/\nconst updateSaveButtonForTitle = (title, text, isSaved, document) => {\n  const saveButton = document.getElementById(`${SAVE_BUTTON_ID_PREFIX}${encodeURI(title)}`)\n  if (!saveButton) {\n    return\n  }\n  saveButton.innerText = text\n  saveButton.title = text\n  updateSaveButtonBookmarkIcon(saveButton, isSaved)\n}\n\n/**\n * Adds 'Read more' for 'title' to 'containerID' element.\n * Leave 'baseURL' null if you don't need to deal with proxying.\n * @param {!string} title\n * @param {!number} count\n * @param {!string} containerID\n * @param {?string} baseURL\n * @param {!SaveButtonClickHandler} saveButtonClickHandler\n * @param {!TitlesShownHandler} titlesShownHandler\n * @param {!Document} document\n * @return {void}\n */\nconst add = (title, count, containerID, baseURL, saveButtonClickHandler, titlesShownHandler,\n  document) => {\n  fetchReadMore(\n    title,\n    count,\n    containerID,\n    baseURL,\n    showReadMorePages,\n    saveButtonClickHandler,\n    titlesShownHandler,\n    document\n  )\n}\n\n/**\n * Sets heading element string.\n * @param {!string} headingString\n * @param {!string} headingID\n * @param {!Document} document\n * @return {void}\n */\nconst setHeading = (headingString, headingID, document) => {\n  const headingElement = document.getElementById(headingID)\n  headingElement.innerText = headingString\n  headingElement.title = headingString\n}\n\nexport default {\n  add,\n  setHeading,\n  updateSaveButtonForTitle,\n  test: {\n    cleanExtract,\n    safelyRemoveEnclosures\n  }\n}","/** CSS length value and unit of measure. */\nclass DimensionUnit {\n  /**\n   * Returns the dimension and units of an Element, usually width or height, as specified by inline\n   * style or attribute. This is a pragmatic not bulletproof implementation.\n   * @param {!Element} element\n   * @param {!string} property\n   * @return {?DimensionUnit}\n   */\n  static fromElement(element, property) {\n    return element.style.getPropertyValue(property)\n      && DimensionUnit.fromStyle(element.style.getPropertyValue(property))\n      || element.hasAttribute(property) && new DimensionUnit(element.getAttribute(property))\n      || undefined\n  }\n\n  /**\n   * This is a pragmatic not bulletproof implementation.\n   * @param {!string} property\n   * @return {!DimensionUnit}\n   */\n  static fromStyle(property) {\n    const matches = property.match(/(-?\\d*\\.?\\d*)(\\D+)?/) || []\n    return new DimensionUnit(matches[1], matches[2])\n  }\n\n  /**\n   * @param {!string} value\n   * @param {?string} unit Defaults to pixels.\n   */\n  constructor(value, unit) {\n    this._value = Number(value)\n    this._unit = unit || 'px'\n  }\n\n  /** @return {!number} NaN if unknown. */\n  get value() { return this._value }\n\n  /** @return {!string} */\n  get unit() { return this._unit }\n\n  /** @return {!string} */\n  toString() {\n    return isNaN(this.value) ? '' : `${this.value}${this.unit}`\n  }\n}\n\n/** Element width and height dimensions and units. */\nexport default class ElementGeometry {\n  /**\n   * @param {!Element} element\n   * @return {!ElementGeometry}\n   */\n  static from(element) {\n    return new ElementGeometry(DimensionUnit.fromElement(element, 'width'),\n      DimensionUnit.fromElement(element, 'height'))\n  }\n\n  /**\n   * @param {?DimensionUnit} width\n   * @param {?DimensionUnit} height\n   */\n  constructor(width, height) {\n    this._width = width\n    this._height = height\n  }\n\n  /**\n   * @return {?DimensionUnit}\n   */\n  get width() { return this._width }\n\n  /** @return {!number} NaN if unknown. */\n  get widthValue() { return this._width && !isNaN(this._width.value) ? this._width.value : NaN }\n\n  /** @return {!string} */\n  get widthUnit() { return this._width && this._width.unit || 'px' }\n\n  /**\n   * @return {?DimensionUnit}\n   */\n  get height() { return this._height }\n\n  /** @return {!number} NaN if unknown. */\n  get heightValue() { return this._height && !isNaN(this._height.value) ? this._height.value : NaN }\n\n  /** @return {!string} */\n  get heightUnit() { return this._height && this._height.unit || 'px' }\n}","import './EditTransform.css'\n\nconst CLASS = {\n  SECTION_HEADER: 'pagelib_edit_section_header',\n  TITLE: 'pagelib_edit_section_title',\n  LINK_CONTAINER: 'pagelib_edit_section_link_container',\n  LINK: 'pagelib_edit_section_link',\n  PROTECTION: { UNPROTECTED: '', PROTECTED: 'page-protected', FORBIDDEN: 'no-editing' }\n}\n\nconst IDS = {\n  TITLE_DESCRIPTION: 'pagelib_edit_section_title_description',\n  ADD_TITLE_DESCRIPTION: 'pagelib_edit_section_add_title_description',\n  DIVIDER: 'pagelib_edit_section_divider',\n  PRONUNCIATION: 'pagelib_edit_section_title_pronunciation'\n}\n\nconst DATA_ATTRIBUTE = { SECTION_INDEX: 'data-id', ACTION: 'data-action' }\nconst ACTION_EDIT_SECTION = 'edit_section'\nconst ACTION_TITLE_PRONUNCIATION = 'title_pronunciation'\nconst ACTION_ADD_TITLE_DESCRIPTION = 'add_title_description'\n\n/**\n * Enables edit buttons to be shown (and which ones: protected or regular).\n * @param {!HTMLDocument} document\n * @param {?boolean} isEditable true if edit buttons should be shown\n * @param {?boolean} isProtected true if the protected edit buttons should be shown\n * @return {void}\n */\nconst setEditButtons = (document, isEditable = false, isProtected = false) => {\n  const classList = document.documentElement.classList\n  if (isEditable) {\n    classList.remove(CLASS.PROTECTION.FORBIDDEN)\n  } else {\n    classList.add(CLASS.PROTECTION.FORBIDDEN)\n  }\n  if (isProtected) {\n    classList.add(CLASS.PROTECTION.PROTECTED)\n  } else {\n    classList.remove(CLASS.PROTECTION.PROTECTED)\n  }\n}\n\n/**\n * @param {!Document} document\n * @param {!number} index The zero-based index of the section.\n * @return {!HTMLAnchorElement}\n */\nconst newEditSectionLink = (document, index) => {\n  const link = document.createElement('a')\n  link.href = ''\n  link.setAttribute(DATA_ATTRIBUTE.SECTION_INDEX, index)\n  link.setAttribute(DATA_ATTRIBUTE.ACTION, ACTION_EDIT_SECTION)\n  link.classList.add(CLASS.LINK)\n  return link\n}\n\n/**\n * @param {!Document} document\n * @param {!number} index The zero-based index of the section.\n * @return {!HTMLSpanElement}\n */\nconst newEditSectionButton = (document, index) => {\n  const container = document.createElement('span')\n  container.classList.add(CLASS.LINK_CONTAINER)\n\n  const link = newEditSectionLink(document, index)\n  container.appendChild(link)\n\n  return container\n}\n\n/**\n * As a client, you may wish to set the ID attribute.\n * @param {!Document} document\n * @param {!number} index The zero-based index of the section.\n * @param {!number} level The *one-based* header or table of contents level.\n * @param {?string} titleHTML Title of this section header.\n * @param {?boolean} showEditPencil Whether to show the \"edit\" pencil (default is true).\n * @return {!HTMLElement}\n */\nconst newEditSectionHeader = (document, index, level, titleHTML, showEditPencil = true) => {\n  const element = document.createElement('div')\n  element.className = CLASS.SECTION_HEADER\n\n  const title = document.createElement(`h${level}`)\n  title.innerHTML = titleHTML || ''\n  title.className = CLASS.TITLE\n  title.setAttribute(DATA_ATTRIBUTE.SECTION_INDEX, index)\n  element.appendChild(title)\n\n  if (showEditPencil) {\n    const button = newEditSectionButton(document, index)\n    element.appendChild(button)\n  }\n  return element\n}\n\n/**\n * Elements needed to show or add page title description.\n * @param {!Document} document\n * @param {?string} titleDescription Page title description.\n * @param {?string} addTitleDescriptionString Localized string e.g. 'Add title description'.\n * @param {?boolean} isTitleDescriptionEditable Whether title description is editable.\n * @return {?HTMLElement}\n */\nconst titleDescriptionElements = (document, titleDescription, addTitleDescriptionString,\n  isTitleDescriptionEditable) => {\n  const descriptionExists = titleDescription !== undefined && titleDescription.length > 0\n  if (descriptionExists) {\n    const p = document.createElement('p')\n    p.id = IDS.TITLE_DESCRIPTION\n    p.innerHTML = titleDescription\n    return p\n  }\n  if (isTitleDescriptionEditable) {\n    const a = document.createElement('a')\n    a.href = '#'\n    a.setAttribute(DATA_ATTRIBUTE.ACTION, ACTION_ADD_TITLE_DESCRIPTION)\n    const p = document.createElement('p')\n    p.id = IDS.ADD_TITLE_DESCRIPTION\n    p.innerHTML = addTitleDescriptionString\n    a.appendChild(p)\n    return a\n  }\n  return null\n}\n\n/**\n * Lead section header is a special case as it needs to show page title and description too,\n * and in addition to the lead edit pencil, the description can also be editable.\n * As a client, you may wish to set the ID attribute.\n * @param {!Document} document\n * @param {?string} pageDisplayTitle Page display title.\n * @param {?string} titleDescription Page title description.\n * @param {?string} addTitleDescriptionString Localized string e.g. 'Add title description'.\n * @param {?boolean} isTitleDescriptionEditable Whether title description is editable.\n * @param {?boolean} showEditPencil Whether to show the \"edit\" pencil (default is true).\n * @param {?boolean} hasPronunciation Whether to show pronunciation speaker icon (default is false).\n * @return {!HTMLElement}\n */\nconst newEditLeadSectionHeader = (document, pageDisplayTitle, titleDescription,\n  addTitleDescriptionString, isTitleDescriptionEditable, showEditPencil = true,\n  hasPronunciation = false) => {\n\n  const container = document.createDocumentFragment()\n\n  const header = newEditSectionHeader(document, 0, 1, pageDisplayTitle, showEditPencil)\n\n  if (hasPronunciation) {\n    const a = document.createElement('a')\n    a.setAttribute(DATA_ATTRIBUTE.ACTION, ACTION_TITLE_PRONUNCIATION)\n    a.id = IDS.PRONUNCIATION\n    header.querySelector('h1').appendChild(a)\n  }\n\n  container.appendChild(header)\n\n  const descriptionElements = titleDescriptionElements(document, titleDescription,\n    addTitleDescriptionString, isTitleDescriptionEditable)\n\n  if (descriptionElements) {\n    container.appendChild(descriptionElements)\n  }\n\n  const divider = document.createElement('hr')\n  divider.id = IDS.DIVIDER\n  container.appendChild(divider)\n\n  return container\n}\n\nexport default {\n  CLASS,\n  ADD_TITLE_DESCRIPTION: IDS.ADD_TITLE_DESCRIPTION,\n  setEditButtons,\n  newEditSectionButton,\n  newEditSectionHeader,\n  newEditLeadSectionHeader\n}","const CLASS = { ANDROID: 'pagelib_platform_android', IOS:  'pagelib_platform_ios' }\n\n// Regular expressions from https://phabricator.wikimedia.org/diffusion/EMFR/browse/master/resources/mobile.startup/browser.js;c89f371ea9e789d7e1a827ddfec7c8028a549c12.\n/**\n * @param {!Window} window\n * @return {!boolean} true if the user agent is Android, false otherwise.\n */\nconst isAndroid = window => /android/i.test(window.navigator.userAgent)\n\n/**\n * @param {!Window} window\n * @return {!boolean} true if the user agent is iOS, false otherwise.\n */\nconst isIOs = window => /ipad|iphone|ipod/i.test(window.navigator.userAgent)\n\n/**\n * @param {!HTMLDocument} document\n * @param {!string} platform one of the values in CLASS\n * @return {void}\n */\nconst setPlatform = (document, platform) => {\n  document.querySelector('html').classList.add(platform)\n}\n\n/**\n * @param {!Window} window\n * @return {void}\n */\nconst classify = window => {\n  const html = window.document.querySelector('html')\n  if (isAndroid(window)) { html.classList.add(CLASS.ANDROID) }\n  if (isIOs(window)) { html.classList.add(CLASS.IOS) }\n}\n\nexport default {\n  CLASS,\n  classify,\n  setPlatform\n}","import './ThemeTransform.css'\nimport ElementUtilities from './ElementUtilities'\nimport Polyfill from './Polyfill'\n\n// Elements marked with these classes indicate certain ancestry constraints that are\n// difficult to describe as CSS selectors.\nconst CONSTRAINT = {\n  IMAGE_PRESUMES_WHITE_BACKGROUND: 'pagelib_theme_image_presumes_white_background',\n  DIV_DO_NOT_APPLY_BASELINE: 'pagelib_theme_div_do_not_apply_baseline'\n}\n\n// Theme to CSS classes.\nconst THEME = {\n  DEFAULT: 'pagelib_theme_default',\n  DARK: 'pagelib_theme_dark',\n  SEPIA: 'pagelib_theme_sepia',\n  BLACK: 'pagelib_theme_black'\n}\n\n/**\n * @param {!Document} document\n * @param {!string} theme\n * @return {void}\n */\nconst setTheme = (document, theme) => {\n  const html = document.querySelector('html')\n\n  // Set the new theme.\n  html.classList.add(theme)\n\n  // Clear any previous theme.\n  for (const key in THEME) {\n    if (Object.prototype.hasOwnProperty.call(THEME, key) && THEME[key] !== theme) {\n      html.classList.remove(THEME[key])\n    }\n  }\n}\n\n/**\n * Football template image filename regex.\n * https://en.wikipedia.org/wiki/Template:Football_kit/pattern_list\n * @type {RegExp}\n */\nconst footballTemplateImageFilenameRegex =\n  new RegExp('Kit_(body|socks|shorts|right_arm|left_arm)(.*).png$')\n\n/* en > Away colours > 793128975 */\n/* en > Manchester United F.C. > 793244653 */\n/**\n * Determines whether white background should be added to image.\n * @param  {!HTMLImageElement} image\n * @return {!boolean}\n */\nconst imagePresumesWhiteBackground = image => {\n  if (footballTemplateImageFilenameRegex.test(image.src)) {\n    return false\n  }\n  if (image.classList.contains('mwe-math-fallback-image-inline')) {\n    return false\n  }\n  return !ElementUtilities.closestInlineStyle(image, 'background')\n}\n\n/**\n * Annotate elements with CSS classes that can be used by CSS rules. The classes themselves are not\n * theme-dependent so classification only need only occur once after the content is loaded, not\n * every time the theme changes.\n * @param {!Element} element\n * @return {void}\n */\nconst classifyElements = element => {\n  Polyfill.querySelectorAll(element, 'img')\n    .filter(imagePresumesWhiteBackground)\n    .forEach(image => {\n      image.classList.add(CONSTRAINT.IMAGE_PRESUMES_WHITE_BACKGROUND)\n    })\n  /* en > Away colours > 793128975 */\n  /* en > Manchester United F.C. > 793244653 */\n  /* en > Pantone > 792312384 */\n  /* en > Wikipedia:Graphs_and_charts > 801754530 */\n  /* en > PepsiCo > 807406166 */\n  /* en > Lua_(programming_language) > 809310207 */\n  const selector = [\n    'div.color_swatch div',\n    'div[style*=\"position: absolute\"]',\n    'div.barbox table div[style*=\"background:\"]',\n    'div.chart div[style*=\"background-color\"]',\n    'div.chart ul li span[style*=\"background-color\"]',\n    'span.legend-color',\n    'div.mw-highlight span',\n    'code.mw-highlight span',\n    '.BrickChartTemplate div',\n    '.PieChartTemplate div',\n    '.BarChartTemplate div',\n    '.StackedBarTemplate td',\n    '.chess-board div',\n    'span[style*=\"background\"]'\n  ].join()\n  Polyfill.querySelectorAll(element, selector).forEach(element =>\n    element.classList.add(CONSTRAINT.DIV_DO_NOT_APPLY_BASELINE))\n}\n\nexport default {\n  CONSTRAINT,\n  THEME,\n  setTheme,\n  classifyElements\n}","import './FooterMenu.css'\nimport CollectionUtilities from './CollectionUtilities'\n\n/**\n * @typedef {function} FooterMenuItemClickCallback\n * @param {!Array.<string>} payload Important - should return empty array if no payload strings.\n * @return {void}\n */\n\n/**\n * @typedef {number} MenuItemType\n */\n\n/**\n * Type representing kinds of menu items.\n * @enum {MenuItemType}\n */\nconst MenuItemType = {\n  languages: 1,\n  lastEdited: 2,\n  pageIssues: 3,\n  disambiguation: 4,\n  coordinate: 5,\n  talkPage: 6,\n  referenceList: 7,\n}\n\n/**\n * Menu item model.\n */\nclass MenuItem {\n  /**\n   * MenuItem constructor.\n   * @param {!string} title\n   * @param {?string} subtitle\n   * @param {!MenuItemType} itemType\n   * @param {FooterMenuItemClickCallback} clickHandler\n   */\n  constructor(title, subtitle, itemType, clickHandler) {\n    this.title = title\n    this.subtitle = subtitle\n    this.itemType = itemType\n    this.clickHandler = clickHandler\n    this.payload = []\n  }\n\n  /**\n   * Returns icon CSS class for this menu item based on its type.\n   * @return {!string}\n   */\n  iconClass() {\n    switch (this.itemType) {\n    case MenuItemType.languages:\n      return 'pagelib_footer_menu_icon_languages'\n    case MenuItemType.lastEdited:\n      return 'pagelib_footer_menu_icon_last_edited'\n    case MenuItemType.talkPage:\n      return 'pagelib_footer_menu_icon_talk_page'\n    case MenuItemType.pageIssues:\n      return 'pagelib_footer_menu_icon_page_issues'\n    case MenuItemType.disambiguation:\n      return 'pagelib_footer_menu_icon_disambiguation'\n    case MenuItemType.coordinate:\n      return 'pagelib_footer_menu_icon_coordinate'\n    case MenuItemType.referenceList:\n      return 'pagelib_footer_menu_icon_reference_list'\n    default:\n      return ''\n    }\n  }\n\n  /**\n   * Extracts array of page issues, disambiguation titles, etc from element.\n   * @typedef {function} PayloadExtractor\n   * @param {!Document} document\n   * @param {?Element} element\n   * @return {!Array.<string>} Return empty array if nothing is extracted\n   */\n\n  /**\n   * Returns reference to function for extracting payload when this menu item is tapped.\n   * @return {?PayloadExtractor}\n   */\n  payloadExtractor() {\n    switch (this.itemType) {\n    case MenuItemType.pageIssues:\n      return CollectionUtilities.collectPageIssuesText\n    case MenuItemType.disambiguation:\n      // Adapt 'collectDisambiguationTitles' method signature to conform to PayloadExtractor type.\n      return (_, element) => CollectionUtilities.collectDisambiguationTitles(element)\n    default:\n      return undefined\n    }\n  }\n}\n\n/**\n * Makes document fragment for a menu item.\n * @param {!MenuItem} menuItem\n * @param {!Document} document\n * @return {!DocumentFragment}\n */\nconst documentFragmentForMenuItem = (menuItem, document) => {\n  const item = document.createElement('div')\n  item.className = 'pagelib_footer_menu_item'\n\n  const containerAnchor = document.createElement('a')\n  containerAnchor.addEventListener('click', () => {\n    menuItem.clickHandler(menuItem.payload)\n  })\n\n  item.appendChild(containerAnchor)\n\n  if (menuItem.title) {\n    const title = document.createElement('div')\n    title.className = 'pagelib_footer_menu_item_title'\n    title.innerText = menuItem.title\n    containerAnchor.title = menuItem.title\n    containerAnchor.appendChild(title)\n  }\n\n  if (menuItem.subtitle) {\n    const subtitle = document.createElement('div')\n    subtitle.className = 'pagelib_footer_menu_item_subtitle'\n    subtitle.innerText = menuItem.subtitle\n    containerAnchor.appendChild(subtitle)\n  }\n\n  const iconClass = menuItem.iconClass()\n  if (iconClass) {\n    item.classList.add(iconClass)\n  }\n\n  return document.createDocumentFragment().appendChild(item)\n}\n\n/**\n * Adds a MenuItem to a container.\n * @param {!MenuItem} menuItem\n * @param {!string} containerID\n * @param {!Document} document\n * @return {void}\n */\nconst addItem = (menuItem, containerID, document) => {\n  document.getElementById(containerID).appendChild(\n    documentFragmentForMenuItem(menuItem, document)\n  )\n}\n\n/**\n * Conditionally adds a MenuItem to a container.\n * @param {!string} title\n * @param {!string} subtitle\n * @param {!MenuItemType} itemType\n * @param {!string} containerID\n * @param {FooterMenuItemClickCallback} clickHandler\n * @param {!Document} document\n * @return {void}\n */\nconst maybeAddItem = (title, subtitle, itemType, containerID, clickHandler, document) => {\n  const item = new MenuItem(title, subtitle, itemType, clickHandler)\n\n  // Items are not added if they have a payload extractor which fails to extract anything.\n  const extractor = item.payloadExtractor()\n  if (extractor) {\n    item.payload = extractor(document, document.querySelector('section[data-mw-section-id=\"0\"]'))\n    if (item.payload.length === 0) {\n      return\n    }\n  }\n\n  addItem(item, containerID, document)\n}\n\n/**\n * Sets heading element string.\n * @param {!string} headingString\n * @param {!string} headingID\n * @param {!Document} document\n * @return {void}\n */\nconst setHeading = (headingString, headingID, document) => {\n  const headingElement = document.getElementById(headingID)\n  headingElement.innerText = headingString\n  headingElement.title = headingString\n}\n\nexport default {\n  MenuItemType, // todo: rename to just ItemType?\n  setHeading,\n  maybeAddItem\n}","import ElementUtilities from './ElementUtilities'\nimport NodeUtilities from './NodeUtilities'\nimport Polyfill from './Polyfill'\n\nconst REFERENCE_SELECTOR = '.reference, .mw-ref'\nconst CITE_HASH_PREFIX = '#cite_note'\n\n/**\n * Is Citation.\n * @param {!string} href\n * @return {!boolean}\n */\nconst isCitation = href => href.indexOf(CITE_HASH_PREFIX) > -1\n\n/**\n * Determines if node is a text node containing only whitespace.\n * @param {!Node} node\n * @return {!boolean}\n */\nconst isWhitespaceTextNode = node =>\n  Boolean(node) && node.nodeType === Node.TEXT_NODE && Boolean(node.textContent.match(/^\\s+$/))\n\n/**\n * Checks if element has a child anchor with a citation link.\n * @param {!Element} element\n * @return {!boolean}\n */\nconst hasCitationLink = element => {\n  const anchor = element.querySelector('a')\n  return anchor && isCitation(anchor.hash)\n}\n\n/**\n * Get the reference text container.\n * @param {!Document} document\n * @param {!Element} source\n * @return {?HTMLElement}\n */\nconst getRefTextContainer = (document, source) => {\n  const refTextContainerID = source.querySelector('A').getAttribute('href').slice(1)\n  const refTextContainer = document.getElementById(refTextContainerID)\n    || document.getElementById(decodeURIComponent(refTextContainerID))\n\n  return refTextContainer\n}\n\n/**\n * Extract reference text free of backlinks.\n * @param {!Document} document\n * @param {!Element} source\n * @return {!string}\n */\nconst collectRefText = (document, source) => {\n  const refTextContainer = getRefTextContainer(document, source)\n  if (!refTextContainer) {\n    return ''\n  }\n\n  // Clone what we're interested in into a frag so we can easily\n  // remove things without consequence to the 'live' document.\n  const frag = document.createDocumentFragment()\n  const fragDiv = document.createElement('div')\n  frag.appendChild(fragDiv)\n  // eslint-disable-next-line require-jsdoc\n  const cloneNodeIntoFragmentDiv = node => fragDiv.appendChild(node.cloneNode(true))\n  let cur = refTextContainer.firstChild\n  while (cur) {\n    if (NodeUtilities.isNodeTypeElementOrText(cur)) {\n      cloneNodeIntoFragmentDiv(cur)\n    }\n    cur = cur.nextSibling\n  }\n\n  const removalSelector = 'link, style, sup[id^=cite_ref], .mw-cite-backlink'\n  Polyfill.querySelectorAll(fragDiv, removalSelector)\n    .forEach(node => node.remove())\n\n  return fragDiv.innerHTML.trim()\n}\n\n/**\n * Get closest element to node which has class `reference`. If node itself has class `reference`\n * returns the node.\n * @param {!Node} sourceNode\n * @return {?HTMLElement}\n */\nconst closestReferenceClassElement = sourceNode => {\n  if (Polyfill.matchesSelector(sourceNode, REFERENCE_SELECTOR)) {\n    return sourceNode\n  }\n  return ElementUtilities.findClosestAncestor(sourceNode, REFERENCE_SELECTOR)\n}\n\n/**\n * Reference item model.\n */\nclass ReferenceItem {\n  /**\n   * ReferenceItem constructor.\n   * @param {!string} id\n   * @param {!DOMRect} rect\n   * @param {?string} text\n   * @param {?string} html\n   * @param {?string} href\n   */\n  constructor(id, rect, text, html, href) {\n    this.id = id\n    this.rect = rect\n    this.text = text\n    this.html = html\n    this.href = href\n  }\n}\n\n/**\n * Reference item model.\n */\nclass ReferenceLinkItem {\n  /**\n   * ReferenceLinkItem construtor.\n   * @param {!string} href\n   * @param {?string} text\n   */\n  constructor(href, text) {\n    this.href = href\n    this.text = text\n  }\n}\n\n/**\n * Get node's bounding rect as a plain object.\n * @param {!Node} node\n * @return {!Object<string, number>}\n */\nconst getBoundingClientRectAsPlainObject = node => {\n  const rect = node.getBoundingClientRect()\n  return {\n    top: rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n    left: rect.left,\n    width: rect.width,\n    height: rect.height,\n    x: rect.x,\n    y: rect.y\n  }\n}\n\n/**\n * Converts node to ReferenceItem.\n * @param {!Document} document\n * @param {!Node} node\n * @return {!ReferenceItem}\n */\nconst referenceItemForNode = (document, node) => new ReferenceItem(\n  closestReferenceClassElement(node).id,\n  getBoundingClientRectAsPlainObject(node),\n  node.textContent,\n  collectRefText(document, node),\n  node.querySelector('A').getAttribute('href')\n)\n\n/**\n * Converts node to ReferenceLinkItem.\n * @param {!Document} document\n * @param {!Node} node\n * @return {!ReferenceItem}\n */\nconst referenceLinkItemForNode = (document, node) => new ReferenceLinkItem(\n  node.querySelector('A').getAttribute('href'),\n  node.textContent\n)\n\n/**\n * Container for nearby references including the index of the selected reference.\n */\nclass NearbyReferences {\n/**\n * @param {!number} selectedIndex\n * @param {!Array.<ReferenceItem>} referencesGroup\n * @return {!NearbyReferences}\n */\n  constructor(selectedIndex, referencesGroup) {\n    this.selectedIndex = selectedIndex\n    this.referencesGroup = referencesGroup\n  }\n}\n\n/**\n * Closure around a node for getting previous or next sibling.\n *\n * @typedef SiblingGetter\n * @param {!Node} node\n * @return {?Node}\n */\n\n/**\n  * Closure around `collectedNodes` for collecting reference nodes.\n  *\n  * @typedef Collector\n  * @param {!Node} node\n  * @return {void}\n  */\n\n/**\n * Get adjacent non-whitespace node.\n * @param {!Node} node\n * @param {!SiblingGetter} siblingGetter\n * @return {?Node}\n */\nconst adjacentNonWhitespaceNode = (node, siblingGetter) => {\n  let currentNode = node\n  do {\n    currentNode = siblingGetter(currentNode)\n  } while (isWhitespaceTextNode(currentNode))\n  return currentNode\n}\n\n/**\n * Collect adjacent reference nodes. The starting node is not collected.\n * @param {!Node} node\n * @param {!SiblingGetter} siblingGetter\n * @param {!Collector} nodeCollector\n * @return {void}\n */\nconst collectAdjacentReferenceNodes = (node, siblingGetter, nodeCollector) => {\n  let currentNode = node\n  while (true) {\n    currentNode = adjacentNonWhitespaceNode(currentNode, siblingGetter)\n    if (!currentNode || currentNode.nodeType !== Node.ELEMENT_NODE\n        || !hasCitationLink(currentNode)) {\n      break\n    }\n    nodeCollector(currentNode)\n  }\n}\n\n/* eslint-disable valid-jsdoc */\n/** @type {SiblingGetter} */\nconst prevSiblingGetter = node => node.previousSibling\n\n/** @type {SiblingGetter} */\nconst nextSiblingGetter = node => node.nextSibling\n/* eslint-enable valid-jsdoc */\n\n/**\n * Collect nearby reference nodes.\n * @param {!Node} sourceNode\n * @return {!Array.<Node>}\n */\nconst collectNearbyReferenceNodes = sourceNode => {\n  const collectedNodes = [sourceNode]\n\n  /* eslint-disable require-jsdoc */\n  // These are `Collector`s.\n  const collectedNodesUnshifter = node => collectedNodes.unshift(node)\n  const collectedNodesPusher = node => collectedNodes.push(node)\n  /* eslint-enable require-jsdoc */\n\n  collectAdjacentReferenceNodes(sourceNode, prevSiblingGetter, collectedNodesUnshifter)\n  collectAdjacentReferenceNodes(sourceNode, nextSiblingGetter, collectedNodesPusher)\n\n  return collectedNodes\n}\n\n/**\n * Collect nearby references.\n * @param {!Document} document\n * @param {!Node} sourceNode\n * @return {!NearbyReferences}\n */\nconst collectNearbyReferences = (document, sourceNode) => {\n  const sourceNodeParent = sourceNode.parentElement\n  const referenceNodes = collectNearbyReferenceNodes(sourceNodeParent)\n  const selectedIndex = referenceNodes.indexOf(sourceNodeParent)\n  const referencesGroup = referenceNodes.map(node => referenceItemForNode(document, node))\n  return new NearbyReferences(selectedIndex, referencesGroup)\n}\n\n/**\n * Collect nearby references.\n * @param {!Document} document\n * @param {!Node} sourceNode\n * @return {!NearbyReferences}\n */\nconst collectNearbyReferencesAsText = (document, sourceNode) => {\n  const sourceNodeParent = sourceNode.parentElement\n  const referenceNodes = collectNearbyReferenceNodes(sourceNodeParent)\n  const selectedIndex = referenceNodes.indexOf(sourceNodeParent)\n  const referencesGroup = referenceNodes.map(node => referenceLinkItemForNode(document, node))\n  return new NearbyReferences(selectedIndex, referencesGroup)\n}\n\nexport default {\n  collectNearbyReferences,\n  collectNearbyReferencesAsText,\n  isCitation,\n  test: {\n    adjacentNonWhitespaceNode,\n    closestReferenceClassElement,\n    collectAdjacentReferenceNodes,\n    collectNearbyReferenceNodes,\n    collectRefText,\n    getRefTextContainer,\n    hasCitationLink,\n    isWhitespaceTextNode,\n    nextSiblingGetter,\n    prevSiblingGetter\n  }\n}","/**\n * Sets text size adjustment percentage of the body element\n * @param  {!HTMLBodyElement} body that needs the margins adjusted.\n * @param  {!string} textSize percentage for text-size-adjust in format of string, like '100%'\n * @return {void}\n */\nconst setPercentage = (body: HTMLBodyElement, textSize: string): void => {\n    if (textSize){\n        // casting body style to avoid errors with the subscript operator and typescript\n        // see https://stackoverflow.com/questions/37655393\n        (<any>body.style)['-webkit-text-size-adjust'] = textSize;\n        (<any>body.style)['text-size-adjust'] = textSize;\n    }\n}\n\n\nexport default {\n    setPercentage\n}","interface Spacing {\n  top?: string\n  right?: string\n  bottom?: string\n  left?: string\n}\n\n/**\n * Sets the margins on an element via inline styles.\n * @param {!HTMLBodyElement} bodyElement the element that needs the margins adjusted.\n *   For the apps this is usually the body element.\n * @param {Spacing} values { top, right, bottom, left }\n *   Use value strings with units, e.g. '16px'. Undefined values are ignored.\n * @return {void}\n */\nconst setMargins = (bodyElement: HTMLBodyElement, values: Spacing): void => {\n  if (values.top !== undefined) {\n    bodyElement.style.marginTop = values.top\n  }\n  if (values.right !== undefined) {\n    bodyElement.style.marginRight = values.right\n  }\n  if (values.bottom !== undefined) {\n    bodyElement.style.marginBottom = values.bottom\n  }\n  if (values.left !== undefined) {\n    bodyElement.style.marginLeft = values.left\n  }\n}\n\n/**\n * Sets padding on an element via inline styles.\n * @param {!HTMLBodyElement} bodyElement the element that needs the padding adjusted.\n *   For the apps this is usually the body element.\n * @param {Spacing} values { top, right, bottom, left }\n *   Use value strings with units, e.g. '16px'. Undefined values are ignored.\n * @return {void}\n */\nconst setPadding = (bodyElement: HTMLBodyElement, values: Spacing): void => {\n  if (values.top !== undefined) {\n    bodyElement.style.paddingTop = values.top\n  }\n  if (values.right !== undefined) {\n    bodyElement.style.paddingRight = values.right\n  }\n  if (values.bottom !== undefined) {\n    bodyElement.style.paddingBottom = values.bottom\n  }\n  if (values.left !== undefined) {\n    bodyElement.style.paddingLeft = values.left\n  }\n}\n\nexport default {\n  setMargins,\n  setPadding\n}","import './DimImagesTransform.css'\nconst CLASS = 'pagelib_dim_images'\n\n/**\n * @param {!Document} document\n * @param {!boolean} enable\n * @return {void}\n */\nconst dimImages = (document, enable) => {\n  document.querySelector('html').classList[enable ? 'add' : 'remove'](CLASS)\n}\n\n/**\n * @deprecated Use dimImages instead, which only requires a Document\n * @param {!Window} window\n * @param {!boolean} enable\n * @return {void}\n */\nconst dim = (window, enable) => dimImages(window.document, enable)\n\n/**\n * @param {!Document} document\n * @return {boolean}\n */\nconst areImagesDimmed = document => document.querySelector('html').classList.contains(CLASS)\n\n/**\n * @deprecated Use areImagesDimmed instead, which only requires a Document\n * @param {!Window} window\n * @return {boolean}\n */\nconst isDim = window => areImagesDimmed(window.document)\n\nexport default {\n  CLASS,\n  dim,\n  isDim,\n  dimImages,\n  areImagesDimmed,\n}","import CollapseTable from './CollapseTable'\nimport ElementUtilities from './ElementUtilities'\nimport LazyLoadTransform from './LazyLoadTransform'\nimport Throttle from './Throttle'\n\nconst EVENT_TYPES = ['scroll', 'resize', CollapseTable.SECTION_TOGGLED_EVENT_TYPE]\nconst THROTTLE_PERIOD_MILLISECONDS = 100\n\n/**\n * This class subscribes to key page events, applying lazy load transforms or inversions as\n * applicable. It has external dependencies on the section-toggled custom event and the following\n * standard browser events: resize, scroll.\n */\nexport default class {\n  /**\n   * @param {!Window} window\n   * @param {!number} loadDistanceMultiplier Images within this multiple of the screen height are\n   *                                         loaded in either direction.\n   */\n  constructor(window, loadDistanceMultiplier) {\n    this._window = window\n    this._loadDistanceMultiplier = loadDistanceMultiplier\n\n    this._placeholders = []\n    this._registered = false\n    this._throttledLoadPlaceholders = Throttle.wrap(window, THROTTLE_PERIOD_MILLISECONDS,\n      () => this._loadPlaceholders())\n  }\n\n  /**\n   * Convert images with placeholders. Calling this function may register this instance to listen to\n   * page events.\n   * @param {!Element} element\n   * @return {void}\n   */\n  convertImagesToPlaceholders(element) {\n    const images = LazyLoadTransform.queryLazyLoadableImages(element)\n    const placeholders = LazyLoadTransform.convertImagesToPlaceholders(this._window.document,\n      images)\n    this._placeholders = this._placeholders.concat(placeholders)\n    this._register()\n  }\n\n  /**\n   * Searches for existing placeholders in the DOM Document.\n   * This is an alternative to #convertImagesToPlaceholders if that was already done server-side.\n   * @param {!Element} element root element to start searching for placeholders\n   * @return {void}\n   */\n  collectExistingPlaceholders(element) {\n    const placeholders\n      = Array.from(element.querySelectorAll(`.${LazyLoadTransform.PLACEHOLDER_CLASS}`))\n    this._placeholders = this._placeholders.concat(placeholders)\n    this._register()\n  }\n\n  /**\n   * Manually trigger a load images check. Calling this function may deregister this instance from\n   * listening to page events.\n   * @return {void}\n   */\n  loadPlaceholders() { this._throttledLoadPlaceholders() }\n\n  /**\n   * This method may be safely called even when already unregistered. This function clears the\n   * record of placeholders.\n   * @return {void}\n   */\n  deregister() {\n    if (!this._registered) { return }\n\n    EVENT_TYPES.forEach(eventType =>\n      this._window.removeEventListener(eventType, this._throttledLoadPlaceholders))\n    this._throttledLoadPlaceholders.reset()\n\n    this._placeholders = []\n    this._registered = false\n  }\n\n  /**\n   * This method may be safely called even when already registered.\n   * @return {void}\n   */\n  _register() {\n    if (this._registered || !this._placeholders.length) { return }\n    this._registered = true\n\n    EVENT_TYPES.forEach(eventType =>\n      this._window.addEventListener(eventType, this._throttledLoadPlaceholders))\n  }\n\n  /** @return {void} */\n  _loadPlaceholders() {\n    this._placeholders = this._placeholders.filter(placeholder => {\n      let pending = true\n      if (this._isPlaceholderEligibleToLoad(placeholder)) {\n        LazyLoadTransform.loadPlaceholder(this._window.document, placeholder)\n        pending = false\n      }\n      return pending\n    })\n\n    if (this._placeholders.length === 0) {\n      this.deregister()\n    }\n  }\n\n  /**\n   * @param {!HTMLSpanElement} placeholder\n   * @return {!boolean}\n   */\n  _isPlaceholderEligibleToLoad(placeholder) {\n    return ElementUtilities.isVisible(placeholder)\n      && this._isPlaceholderWithinLoadDistance(placeholder)\n  }\n\n  /**\n   * @param {!HTMLSpanElement} placeholder\n   * @return {!boolean}\n   */\n  _isPlaceholderWithinLoadDistance(placeholder) {\n    const bounds = placeholder.getBoundingClientRect()\n    const range = this._window.innerHeight * this._loadDistanceMultiplier\n    return !(bounds.top > range || bounds.bottom < -range)\n  }\n}","/* eslint-disable sort-imports */\n\n// We want the theme transform to be first. This is because the theme transform CSS has to use\n// some '!important' CSS modifiers to reliably set themes on elements which may contain inline\n// styles. Moving it to the top of the file is necessary so other transforms can override\n// these '!important' themes transform CSS bits if needed. Note - if other transforms have trouble\n// overriding things changed by theme transform remember to match or exceed the selector specificity\n// used by the theme transform for whatever it is you are trying to override.\nimport ThemeTransform from './ThemeTransform'\n\nimport AdjustTextSize from './AdjustTextSize'\nimport BodySpacingTransform from './BodySpacingTransform'\nimport CollapseTable from './CollapseTable'\nimport CollectionUtilities from './CollectionUtilities'\nimport CompatibilityTransform from './CompatibilityTransform'\nimport DimImagesTransform from './DimImagesTransform'\nimport EditTransform from './EditTransform'\nimport ElementGeometry from './ElementGeometry'\nimport ElementUtilities from './ElementUtilities'\nimport LeadIntroductionTransform from './LeadIntroductionTransform'\nimport FooterContainer from './FooterContainer'\nimport FooterLegal from './FooterLegal'\nimport FooterMenu from './FooterMenu'\nimport FooterReadMore from './FooterReadMore'\nimport FooterTransformer from './FooterTransformer'\nimport LazyLoadTransform from './LazyLoadTransform'\nimport LazyLoadTransformer from './LazyLoadTransformer'\nimport PlatformTransform from './PlatformTransform'\nimport Polyfill from './Polyfill'\nimport RedLinks from './RedLinks'\nimport ReferenceCollection from './ReferenceCollection'\nimport Throttle from './Throttle'\nimport SectionUtilities from './SectionUtilities'\nimport WidenImage from './WidenImage'\nimport './OrderedList.css'\nimport './Sections.css'\n\nexport default {\n  AdjustTextSize,\n  BodySpacingTransform,\n  // todo: rename CollapseTableTransform.\n  CollapseTable,\n  CollectionUtilities,\n  CompatibilityTransform,\n  DimImagesTransform,\n  EditTransform,\n  // todo: rename Footer.ContainerTransform, Footer.LegalTransform, Footer.MenuTransform,\n  //       Footer.ReadMoreTransform.\n  LeadIntroductionTransform,\n  FooterContainer,\n  FooterLegal,\n  FooterMenu,\n  FooterReadMore,\n  FooterTransformer,\n  LazyLoadTransform,\n  LazyLoadTransformer,\n  PlatformTransform,\n  // todo: rename RedLinkTransform.\n  RedLinks,\n  ReferenceCollection,\n  SectionUtilities,\n  ThemeTransform,\n  // todo: rename WidenImageTransform.\n  WidenImage,\n  test: {\n    ElementGeometry,\n    ElementUtilities,\n    Polyfill,\n    Throttle\n  }\n}","const COMPATIBILITY = {\n  FILTER: 'pagelib_compatibility_filter'\n}\n\n/**\n * @param {!Document} document\n * @param {!Array.<string>} properties\n * @param {!string} value\n * @return {void}\n */\nconst isStyleSupported = (document, properties, value) => {\n  const element = document.createElement('span')\n  return properties.some(property => {\n    element.style[property] = value\n    return element.style.cssText\n  })\n}\n\n/**\n * @param {!Document} document\n * @return {void}\n */\nconst isFilterSupported = document =>\n  isStyleSupported(document, ['webkitFilter', 'filter'], 'blur(0)')\n\n/**\n * @param {!Document} document\n * @return {void}\n */\nconst enableSupport = document => {\n  const html = document.querySelector('html')\n  if (!isFilterSupported(document)) { html.classList.add(COMPATIBILITY.FILTER) }\n}\n\nexport default {\n  COMPATIBILITY,\n  enableSupport\n}","import Polyfill from './Polyfill'\n\nconst ELEMENT_NODE = 1\n\n/**\n * Determine if paragraph is the one we are interested in.\n * @param  {!HTMLParagraphElement}  paragraphElement\n * @return {!boolean}\n */\nconst isParagraphEligible = paragraphElement => {\n  // Ignore 'coordinates' which are presently hidden. See enwiki 'Bolton Field' and 'Sharya Forest\n  // Museum Railway'. Not counting coordinates towards the eligible P min textContent length\n  // heuristic has dual effect of P's containing only coordinates being rejected, and P's containing\n  // coordinates but also other elements meeting the eligible P min textContent length being\n  // accepted.\n  const coordElement = paragraphElement.querySelector('[id=\"coordinates\"]')\n  const coordTextLength = !coordElement ? 0 : coordElement.textContent.length\n\n  // Ensures the paragraph has at least a little text. Otherwise silly things like a empty P or P\n  // which only contains a BR tag will get pulled up. See enwiki 'Hawaii', 'United States',\n  // 'Academy (educational institution)', 'Lovászpatona'\n  const minEligibleTextLength = 50\n  const hasEnoughEligibleText =\n    paragraphElement.textContent.length - coordTextLength >= minEligibleTextLength\n  return hasEnoughEligibleText\n}\n\n/**\n * Nodes we want to move up. This includes the `eligibleParagraph` and everything up to (but not\n * including) the next paragraph.\n * @param  {!HTMLParagraphElement} eligibleParagraph\n * @return {!Array.<Node>} Array of text nodes, elements, etc...\n */\nconst extractLeadIntroductionNodes = eligibleParagraph => {\n  const introNodes = []\n  let node = eligibleParagraph\n  do {\n    introNodes.push(node)\n    node = node.nextSibling\n  } while (node && !(node.nodeType === ELEMENT_NODE && node.tagName === 'P'))\n  return introNodes\n}\n\n/**\n * Locate first eligible paragraph. We don't want paragraphs from somewhere in the middle of a\n * table, so only paragraphs which are direct children of `containerID` element are considered.\n * @param  {!Document} document\n * @param  {!string} containerID ID of the section under examination.\n * @return {?HTMLParagraphElement}\n */\nconst getEligibleParagraph = (document, containerID) =>\n  Polyfill.querySelectorAll(document, `#${containerID} > p`).find(isParagraphEligible)\n\n/**\n * Instead of moving the infobox down beneath the first P tag, move the first eligible P tag\n * (and related elements) up. This ensures some text will appear above infoboxes, tables, images\n * etc. This method does not do a 'mainpage' check - do so before calling it.\n * @param  {!Document} document\n * @param  {!string} containerID ID of the section under examination.\n * @param  {?Element} afterElement Element after which paragraph will be moved. If not specified\n * paragraph will be move to top of `containerID` element.\n * @return {void}\n */\nconst moveLeadIntroductionUp = (document, containerID, afterElement) => {\n  const eligibleParagraph = getEligibleParagraph(document, containerID)\n  if (!eligibleParagraph) {\n    return\n  }\n\n  // A light-weight fragment to hold everything we want to move up.\n  const fragment = document.createDocumentFragment()\n  // DocumentFragment's `appendChild` attaches the element to the fragment AND removes it from DOM.\n  extractLeadIntroductionNodes(eligibleParagraph).forEach(element => fragment.appendChild(element))\n\n  const container = document.getElementById(containerID)\n  const insertBeforeThisElement = !afterElement ? container.firstChild : afterElement.nextSibling\n\n  // Attach the fragment just before `insertBeforeThisElement`. Conveniently, `insertBefore` on a\n  // DocumentFragment inserts 'the children of the fragment, not the fragment itself.', so no\n  // unnecessary container element is introduced.\n  // https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\n  container.insertBefore(fragment, insertBeforeThisElement)\n}\n\nexport default {\n  moveLeadIntroductionUp,\n  test: {\n    isParagraphEligible,\n    extractLeadIntroductionNodes,\n    getEligibleParagraph\n  }\n}","import FooterContainer from './FooterContainer'\nimport FooterLegal from './FooterLegal'\nimport FooterReadMore from './FooterReadMore'\nimport Throttle from './Throttle'\n\nconst RESIZE_EVENT_TYPE = 'resize'\nconst RESIZE_LISTENER_THROTTLE_PERIOD_MILLISECONDS = 100\n\nconst ID_CONTAINER = 'pagelib_footer_container'\nconst ID_LEGAL_CONTAINER = 'pagelib_footer_container_legal'\n\nconst ID_READ_MORE_CONTAINER = 'pagelib_footer_container_readmore_pages'\nconst ID_READ_MORE_HEADER = 'pagelib_footer_container_readmore_heading'\n\n/** */\nexport default class {\n  /** */\n  constructor() {\n    this._resizeListener = undefined\n  }\n\n  /**\n   * @param {!Window} window\n   * @param {!Element} container\n   * @param {!string} baseURL\n   * @param {!string} title\n   * @param {!string} readMoreHeader\n   * @param {!number} readMoreLimit\n   * @param {!string} license\n   * @param {!string} licenseSubstitutionString\n   * @param {!FooterLegalClickCallback} licenseLinkClickHandler\n   * @param {!string} viewInBrowserString\n   * @param {!FooterBrowserClickCallback} browserLinkClickHandler\n   * @param {!TitlesShownHandler} titlesShownHandler\n   * @param {!SaveButtonClickHandler} saveButtonClickHandler\n   * @return {void}\n   */\n  add(window, container, baseURL, title, readMoreHeader, readMoreLimit, license,\n    licenseSubstitutionString, licenseLinkClickHandler, viewInBrowserString,\n    browserLinkClickHandler, titlesShownHandler,\n    saveButtonClickHandler) {\n    this.remove(window)\n    container.appendChild(FooterContainer.containerFragment(window.document))\n\n    FooterLegal.add(window.document, license, licenseSubstitutionString, ID_LEGAL_CONTAINER,\n      licenseLinkClickHandler, viewInBrowserString, browserLinkClickHandler)\n\n    FooterReadMore.setHeading(readMoreHeader, ID_READ_MORE_HEADER, window.document)\n    FooterReadMore.add(title, readMoreLimit, ID_READ_MORE_CONTAINER, baseURL,\n      saveButtonClickHandler, titles => {\n        FooterContainer.updateBottomPaddingToAllowReadMoreToScrollToTop(window)\n        titlesShownHandler(titles)\n      }, window.document)\n\n    this._resizeListener = Throttle.wrap(window, RESIZE_LISTENER_THROTTLE_PERIOD_MILLISECONDS,\n      () => FooterContainer.updateBottomPaddingToAllowReadMoreToScrollToTop(window))\n    window.addEventListener(RESIZE_EVENT_TYPE, this._resizeListener)\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {void}\n   */\n  remove(window) {\n    if (this._resizeListener) {\n      window.removeEventListener(RESIZE_EVENT_TYPE, this._resizeListener)\n      this._resizeListener.cancel()\n      this._resizeListener = undefined\n    }\n\n    const footer = window.document.getElementById(ID_CONTAINER)\n    if (footer) {\n      // todo: support recycling.\n      footer.parentNode.removeChild(footer)\n    }\n  }\n}","import Polyfill from './Polyfill'\n\n/**\n * Configures span to be suitable replacement for red link anchor.\n * @param {!HTMLSpanElement} span The span element to configure as anchor replacement.\n * @param {!HTMLAnchorElement} anchor The anchor element being replaced.\n * @return {void}\n */\nconst configureRedLinkTemplate = (span, anchor) => {\n  span.innerHTML = anchor.innerHTML\n  span.setAttribute('class', anchor.getAttribute('class'))\n}\n\n/**\n * Finds red links in a document.\n * @param {!Document} content Document in which to seek red links.\n * @return {!Array.<HTMLAnchorElement>} Array of zero or more red link anchors.\n */\nconst redLinkAnchorsInDocument = content => Polyfill.querySelectorAll(content, 'a.new')\n\n/**\n * Makes span to be used as cloning template for red link anchor replacements.\n * @param  {!Document} document Document to use to create span element.\n * @return {!HTMLSpanElement} Span element suitable for use as template for red link anchor\n * replacements.\n */\nconst newRedLinkTemplate = document => document.createElement('span')\n\n/**\n * Replaces anchor with span.\n * @param  {!HTMLAnchorElement} anchor Anchor element.\n * @param  {!HTMLSpanElement} span Span element.\n * @return {void}\n */\nconst replaceAnchorWithSpan = (anchor, span) => anchor.parentNode.replaceChild(span, anchor)\n\n/**\n * Hides red link anchors in a document so they are unclickable and unfocusable.\n * @param {!Document} document Document in which to hide red links.\n * @return {void}\n */\nconst hideRedLinks = document => {\n  const spanTemplate = newRedLinkTemplate(document)\n  redLinkAnchorsInDocument(document)\n    .forEach(redLink => {\n      const span = spanTemplate.cloneNode(false)\n      configureRedLinkTemplate(span, redLink)\n      replaceAnchorWithSpan(redLink, span)\n    })\n}\n\nexport default {\n  hideRedLinks,\n  test: {\n    configureRedLinkTemplate,\n    redLinkAnchorsInDocument,\n    newRedLinkTemplate,\n    replaceAnchorWithSpan\n  }\n}","import './WidenImage.css'\nimport elementUtilities from './ElementUtilities'\n\n/**\n * Gets array of ancestors of element which need widening.\n * @param  {!HTMLElement} element\n * @return {!Array.<HTMLElement>} Zero length array is returned if no elements should be widened.\n */\nconst ancestorsToWiden = element => {\n  const widenThese = []\n  let el = element\n  while (el.parentElement) {\n    el = el.parentElement\n    // No need to walk above 'content_block'.\n    if (el.classList.contains('content_block')) {\n      break\n    }\n    widenThese.push(el)\n  }\n  return widenThese\n}\n\n/**\n * Sets style value.\n * @param {!CSSStyleDeclaration} style\n * @param {!string} key\n * @param {*} value\n * @return {void}\n */\nconst updateStyleValue = (style, key, value) => {\n  style[key] = value\n}\n\n/**\n * Sets style value only if value for given key already exists.\n * @param {CSSStyleDeclaration} style\n * @param {!string} key\n * @param {*} value\n * @return {void}\n */\nconst updateExistingStyleValue = (style, key, value) => {\n  const valueExists = Boolean(style[key])\n  if (valueExists) {\n    updateStyleValue(style, key, value)\n  }\n}\n\n/**\n * Image widening CSS key/value pairs.\n * @type {Object}\n */\nconst styleWideningKeysAndValues = {\n  width: '100%',\n  height: 'auto',\n  maxWidth: '100%',\n  float: 'none'\n}\n\n/**\n * Perform widening on an element. Certain style properties are updated, but only if existing values\n * for these properties already exist.\n * @param  {!HTMLElement} element\n * @return {void}\n */\nconst widenElementByUpdatingExistingStyles = element => {\n  Object.keys(styleWideningKeysAndValues)\n    .forEach(key => updateExistingStyleValue(element.style, key, styleWideningKeysAndValues[key]))\n}\n\n/**\n * Perform widening on an element.\n * @param  {!HTMLElement} element\n * @return {void}\n */\nconst widenElementByUpdatingStyles = element => {\n  Object.keys(styleWideningKeysAndValues)\n    .forEach(key => updateStyleValue(element.style, key, styleWideningKeysAndValues[key]))\n}\n\n/**\n * To widen an image element a css class called 'pagelib_widen_image_override' is applied to the\n * image element, however, ancestors of the image element can prevent the widening from taking\n * effect. This method makes minimal adjustments to ancestors of the image element being widened so\n * the image widening can take effect.\n * @param  {!HTMLElement} element Element whose ancestors will be widened\n * @return {void}\n */\nconst widenAncestors = element => {\n  ancestorsToWiden(element).forEach(widenElementByUpdatingExistingStyles)\n\n  // Without forcing widening on the parent anchor, lazy image loading placeholders\n  // aren't correctly widened on iOS for some reason.\n  const parentAnchor = elementUtilities.findClosestAncestor(element, 'a.image')\n  if (parentAnchor) {\n    widenElementByUpdatingStyles(parentAnchor)\n  }\n}\n\n/**\n * Some images should not be widened. This method makes that determination.\n * @param  {!HTMLElement} image   The image in question\n * @return {boolean}              Whether 'image' should be widened\n */\nconst shouldWidenImage = image => {\n  // Images within a \"<div class='noresize'>...</div>\" should not be widened.\n  // Example exhibiting links overlaying such an image:\n  //   'enwiki > Counties of England > Scope and structure > Local government'\n  if (elementUtilities.findClosestAncestor(image, \"[class*='noresize']\")) {\n    return false\n  }\n\n  // Side-by-side images should not be widened. Often their captions mention 'left' and 'right', so\n  // we don't want to widen these as doing so would stack them vertically.\n  // Examples exhibiting side-by-side images:\n  //    'enwiki > Cold Comfort (Inside No. 9) > Casting'\n  //    'enwiki > Vincent van Gogh > Letters'\n  if (elementUtilities.findClosestAncestor(image, \"div[class*='tsingle']\")) {\n    return false\n  }\n\n  // Imagemaps, which expect images to be specific sizes, should not be widened.\n  // Examples can be found on 'enwiki > Kingdom (biology)':\n  //    - first non lead image is an image map\n  //    - 'Three domains of life > Phylogenetic Tree of Life' image is an image map\n  if (image.hasAttribute('usemap')) {\n    return false\n  }\n\n  // Images in tables should not be widened - doing so can horribly mess up table layout.\n  if (elementUtilities.isNestedInTable(image)) {\n    return false\n  }\n\n  // Widening absolutely positioned images can cause overlapping with adjacent text.\n  // Example can be found on `ja > 今治城 > 71804195`, which has a Mapplot template which outputs\n  // an image nested in an absolutely positioned div.\n  if (elementUtilities.closestInlineStyle(image, 'position', 'absolute')) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Widens the image.\n * @param  {!HTMLElement} image   The image in question\n * @return {void}\n */\nconst widenImage = image => {\n  widenAncestors(image)\n  image.classList.add('pagelib_widen_image_override')\n}\n\n/**\n * Widens an image if the image is found to be fit for widening.\n * @param  {!HTMLElement} image   The image in question\n * @return {boolean}              Whether or not 'image' was widened\n */\nconst maybeWidenImage = image => {\n  if (shouldWidenImage(image)) {\n    widenImage(image)\n    return true\n  }\n  return false\n}\n\nexport default {\n  maybeWidenImage,\n  test: {\n    ancestorsToWiden,\n    shouldWidenImage,\n    updateExistingStyleValue,\n    widenAncestors,\n    widenElementByUpdatingExistingStyles,\n    widenElementByUpdatingStyles\n  }\n}"],"sourceRoot":""}