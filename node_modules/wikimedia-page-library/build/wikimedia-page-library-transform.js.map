{"version":3,"sources":["webpack://pagelib/webpack/universalModuleDefinition","webpack://pagelib/webpack/bootstrap","webpack://pagelib/./src/transform/Polyfill.js","webpack://pagelib/./src/transform/ElementUtilities.js","webpack://pagelib/./src/transform/Throttle.js","webpack://pagelib/./src/transform/CollapseTable.js","webpack://pagelib/./src/transform/NodeUtilities.js","webpack://pagelib/./src/transform/CollectionUtilities.js","webpack://pagelib/./src/transform/ElementGeometry.js","webpack://pagelib/./src/transform/FooterContainer.js","webpack://pagelib/./src/transform/FooterLegal.js","webpack://pagelib/./src/transform/FooterReadMore.js","webpack://pagelib/./src/transform/LazyLoadTransform.ts","webpack://pagelib/./src/transform/index.js","webpack://pagelib/./src/transform/ThemeTransform.js","webpack://pagelib/./src/transform/BodySpacingTransform.ts","webpack://pagelib/./src/transform/CompatibilityTransform.js","webpack://pagelib/./src/transform/DimImagesTransform.js","webpack://pagelib/./src/transform/EditTransform.js","webpack://pagelib/./src/transform/LeadIntroductionTransform.js","webpack://pagelib/./src/transform/FooterMenu.js","webpack://pagelib/./src/transform/FooterTransformer.js","webpack://pagelib/./src/transform/LazyLoadTransformer.js","webpack://pagelib/./src/transform/PlatformTransform.js","webpack://pagelib/./src/transform/RedLinks.js","webpack://pagelib/./src/transform/ReferenceCollection.js","webpack://pagelib/./src/transform/WidenImage.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CustomEvent","window","type","parameters","arguments","length","undefined","bubbles","cancelable","detail","event","document","createEvent","initCustomEvent","matchesSelector","el","selector","matches","webkitMatchesSelector","querySelectorAll","element","Array","slice","_Polyfill","findClosestAncestor","parentElement","Polyfill","isNestedInTable","Boolean","closestInlineStyle","thisValue","style","isVisible","offsetWidth","offsetHeight","getClientRects","copyAttributesToDataAttributes","source","destination","attributes","filter","attribute","hasAttribute","forEach","setAttribute","getAttribute","copyDataAttributesToAttributes","Throttle","period","funktion","_classCallCheck","_window","_period","_function","_context","_arguments","_result","_timeout","_timestamp","throttle","throttled","queue","result","pending","delay","cancel","reset","context","args","_this","setTimeout","Date","now","apply","Math","max","clearTimeout","NODE_TYPE","NodeUtilities","CLASS","isHeaderEligible","header","childNodes","isHeaderTextEligible","headerText","replace","firstWordFromString","string","match","isNodeTextContentSimilarToPageTitle","node","pageTitle","firstPageTitleWord","firstNodeTextContentWord","textContent","toLowerCase","stringWithNormalizedWhitespace","trim","isNodeBreakElement","nodeType","ELEMENT_NODE","tagName","replaceNodeWithBreakingSpaceTextNode","parentNode","replaceChild","createTextNode","extractEligibleHeaderText","fragment","createDocumentFragment","appendChild","cloneNode","fragmentHeader","querySelector","remove","childNodesArray","isNodeTypeElementOrText","elementScopeComparator","a","b","aHasScope","bHasScope","getTableHeaderTextArray","headerTextArray","headers","sort","indexOf","push","toggleCollapsedForContainer","container","trigger","footerDivClickCallback","children","table","footer","caption","collapsed","display","classList","add","visibility","toggleCollapseClickCallback","shouldTableBeCollapsed","blacklistIntersects","some","clazz","contains","isInfobox","newCollapsedHeaderDiv","content","div","createElement","newCollapsedFooterDiv","innerHTML","newCaptionFragment","title","strong","span","prepareTables","infoboxTitle","otherTitle","footerTitle","tables","ElementUtilities","captionFragment","containerDiv","className","insertBefore","removeChild","marginTop","marginBottom","collapsedHeaderDiv","collapsedFooterDiv","setupEventHandling","isInitiallyCollapsed","dispatchSectionToggledEvent","dispatchEvent","onclick","adjustTables","isMainPage","SECTION_TOGGLED_EVENT_TYPE","collapseTables","expandCollapsedTableIfItContainsElement","containerSelector","collapsedDiv","firstElementChild","click","test","TEXT_NODE","collectPageIssues","collectDisambiguationTitles","map","href","collectDisambiguationHTML","collectPageIssuesHTML","collectPageIssuesText","DimensionUnit","unit","_value","Number","_unit","getPropertyValue","fromStyle","isNaN","ElementGeometry","width","height","_width","_height","fromElement","NaN","containerFragment","isContainerAttached","updateBottomPaddingToAllowReadMoreToScrollToTop","getElementById","currentPadding","parseInt","paddingBottom","clientHeight","newPadding","innerHeight","updateLeftAndRightMargin","margin","join","marginLeft","marginRight","rightOrLeft","dir","backgroundPosition","paddingLeft","paddingRight","licenseString","licenseSubstitutionString","containerID","licenseLinkClickHandler","viewInBrowserString","browserLinkClickHandler","licenseStringHalves","split","addEventListener","safelyRemoveEnclosures","opener","closer","enclosureRegex","RegExp","counter","stringToClean","previousString","cleanExtract","ReadMorePage","displayTitle","thumbnail","description","extract","showReadMorePages","pages","saveButtonClickHandler","titlesShownHandler","shownTitles","page","index","pageFragment","readMorePage","outerAnchorContainer","id","image","backgroundImage","innerDivContainer","encodeURI","titleToShow","descriptionEl","saveButton","stopPropagation","preventDefault","documentFragmentForReadMorePage","pageprops","displaytitle","readMoreQueryURL","count","baseURL","action","format","formatversion","prop","generator","gsrlimit","gsrprop","gsrsearch","gsrwhat","exchars","exintro","exlimit","explaintext","pilicense","pilimit","piprop","pithumbsize","queryParameters","keys","encodeURIComponent","fetchErrorHandler","statusText","console","log","showReadMorePagesHandler","xhr","XMLHttpRequest","open","onload","readyState","DONE","status","JSON","parse","responseText","query","onerror","send","error","toString","fetchReadMore","setHeading","headingString","headingID","headingElement","innerText","updateSaveButtonForTitle","text","isSaved","button","unfilledClass","filledClass","updateSaveButtonBookmarkIcon","default","COPY_ATTRIBUTES","UNIT_TO_MINIMUM_LAZY_LOAD_SIZE","px","ex","em","PLACEHOLDER_CLASS","queryLazyLoadableImages","geometry","from","minWidth","widthUnit","Infinity","minHeight","heightUnit","widthValue","heightValue","isLazyLoadable","convertImagesToPlaceholders","images","placeholder","setProperty","spacing","ratio","convertImageToPlaceholder","loadPlaceholder","retryListener","removeEventListener","once","BodySpacingTransform","CollapseTable","CollectionUtilities","CompatibilityTransform","DimImagesTransform","EditTransform","LeadIntroductionTransform","FooterContainer","FooterLegal","FooterMenu","FooterReadMore","FooterTransformer","LazyLoadTransform","LazyLoadTransformer","PlatformTransform","RedLinks","ReferenceCollection","ThemeTransform","WidenImage","CONSTRAINT","IMAGE_PRESUMES_WHITE_BACKGROUND","DIV_DO_NOT_APPLY_BASELINE","THEME","DEFAULT","DARK","SEPIA","BLACK","footballTemplateImageFilenameRegex","imagePresumesWhiteBackground","src","setTheme","theme","html","classifyElements","setMargins","bodyElement","values","callback","top","right","bottom","left","setPadding","paddingTop","COMPATIBILITY","FILTER","enableSupport","properties","cssText","isStyleSupported","isFilterSupported","isDim","dim","enable","SECTION_HEADER","TITLE","LINK_CONTAINER","LINK","PROTECTION","UNPROTECTED","PROTECTED","FORBIDDEN","IDS","DATA_ATTRIBUTE","newEditSectionButton","link","newEditSectionLink","newEditSectionHeader","level","titleHTML","showEditPencil","newEditLeadSectionHeader","pageDisplayTitle","titleDescription","addTitleDescriptionString","isTitleDescriptionEditable","hasPronunciation","descriptionElements","titleDescriptionElements","divider","isParagraphEligible","paragraphElement","coordElement","coordTextLength","extractLeadIntroductionNodes","eligibleParagraph","introNodes","nextSibling","getEligibleParagraph","find","moveLeadIntroductionUp","afterElement","insertBeforeThisElement","firstChild","_CollectionUtilities","MenuItemType","languages","lastEdited","pageIssues","disambiguation","coordinate","talkPage","MenuItem","subtitle","itemType","clickHandler","payload","_","maybeAddItem","item","extractor","payloadExtractor","menuItem","containerAnchor","iconClass","documentFragmentForMenuItem","addItem","_class","_resizeListener","readMoreHeader","readMoreLimit","license","titles","wrap","EVENT_TYPES","THROTTLE_PERIOD_MILLISECONDS","loadDistanceMultiplier","_loadDistanceMultiplier","_placeholders","_registered","_throttledLoadPlaceholders","_loadPlaceholders","placeholders","concat","_register","_this2","eventType","_this3","_this4","_isPlaceholderEligibleToLoad","deregister","_isPlaceholderWithinLoadDistance","bounds","getBoundingClientRect","range","ANDROID","IOS","classify","navigator","userAgent","isAndroid","isIOs","configureRedLinkTemplate","anchor","redLinkAnchorsInDocument","newRedLinkTemplate","replaceAnchorWithSpan","hideRedLinks","spanTemplate","redLink","isCitation","isWhitespaceTextNode","Node","hasCitationLink","hash","getRefTextContainer","refTextContainerID","decodeURIComponent","collectRefText","refTextContainer","frag","fragDiv","closestReferenceClassElement","sourceNode","ReferenceItem","rect","NearbyReferences","selectedIndex","referencesGroup","adjacentNonWhitespaceNode","siblingGetter","currentNode","collectAdjacentReferenceNodes","nodeCollector","prevSiblingGetter","previousSibling","nextSiblingGetter","collectNearbyReferenceNodes","collectedNodes","unshift","collectNearbyReferences","sourceNodeParent","referenceNodes","referenceItemForNode","_ElementUtilities","ancestorsToWiden","widenThese","updateStyleValue","updateExistingStyleValue","styleWideningKeysAndValues","maxWidth","float","widenElementByUpdatingExistingStyles","widenElementByUpdatingStyles","widenAncestors","parentAnchor","elementUtilities","shouldWidenImage","maybeWidenImage","widenImage"],"mappings":"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","file":"wikimedia-page-library-transform.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pagelib\"] = factory();\n\telse\n\t\troot[\"pagelib\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","/**\n * Polyfill function that tells whether a given element matches a selector.\n * @param {!Element} el Element\n * @param {!string} selector Selector to look for\n * @return {!boolean} Whether the element matches the selector\n */\nconst matchesSelector = (el, selector) => {\n  if (el.matches) {\n    return el.matches(selector)\n  }\n  if (el.matchesSelector) {\n    return el.matchesSelector(selector)\n  }\n  if (el.webkitMatchesSelector) {\n    return el.webkitMatchesSelector(selector)\n  }\n  return false\n}\n\n/**\n * @param {!Element} element\n * @param {!string} selector\n * @return {!Array.<Element>}\n */\nconst querySelectorAll = (element, selector) =>\n  Array.prototype.slice.call(element.querySelectorAll(selector))\n\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill\n// Required by Android API 16 AOSP Nexus S emulator.\n// eslint-disable-next-line no-undef\nconst CustomEvent = typeof window !== 'undefined' && window.CustomEvent\n  || function(type, parameters = { bubbles: false, cancelable: false, detail: undefined }) {\n    // eslint-disable-next-line no-undef\n    const event = document.createEvent('CustomEvent')\n    event.initCustomEvent(type, parameters.bubbles, parameters.cancelable, parameters.detail)\n    return event\n  }\n\nexport default {\n  matchesSelector,\n  querySelectorAll,\n  CustomEvent\n}","import Polyfill from './Polyfill'\n\n// todo: drop ancestor consideration and move to Polyfill.closest().\n/**\n * Returns closest ancestor of element which matches selector.\n * Similar to 'closest' methods as seen here:\n *  https://api.jquery.com/closest/\n *  https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n * @param  {!Element} el        Element\n * @param  {!string} selector   Selector to look for in ancestors of 'el'\n * @return {?HTMLElement}       Closest ancestor of 'el' matching 'selector'\n */\nconst findClosestAncestor = (el, selector) => {\n  let parentElement\n  for (parentElement = el.parentElement;\n    parentElement && !Polyfill.matchesSelector(parentElement, selector);\n    parentElement = parentElement.parentElement) {\n    // Intentionally empty.\n  }\n  return parentElement\n}\n\n/**\n * @param {?Element} element\n * @param {!string} property\n * @param {?string} value\n * @return {?Element} The inclusive first element with an inline style (and optional value) or\n * undefined.\n */\nconst closestInlineStyle = (element, property, value) => {\n  for (let el = element; el; el = el.parentElement) {\n    const thisValue = el.style[property]\n    if (thisValue) {\n      if (value === undefined) {\n        return el\n      }\n      if (value === thisValue) {\n        return el\n      }\n    }\n  }\n  return undefined\n}\n\n/**\n * Determines if element has a table ancestor.\n * @param  {!Element}  el   Element\n * @return {!boolean}       Whether table ancestor of 'el' is found\n */\nconst isNestedInTable = el => Boolean(findClosestAncestor(el, 'table'))\n\n/**\n * @param {!HTMLElement} element\n * @return {!boolean} true if element affects layout, false otherwise.\n */\nconst isVisible = element =>\n  // https://github.com/jquery/jquery/blob/305f193/src/css/hiddenVisibleSelectors.js#L12\n  Boolean(element.offsetWidth || element.offsetHeight || element.getClientRects().length)\n\n/**\n * Copy existing attributes from source to destination as data-* attributes.\n * @param {!HTMLElement} source\n * @param {!HTMLElement} destination\n * @param {!Array.<string>} attributes\n * @return {void}\n */\nconst copyAttributesToDataAttributes = (source, destination, attributes) => {\n  attributes.filter(attribute => source.hasAttribute(attribute))\n    .forEach(attribute =>\n      destination.setAttribute(`data-${attribute}`, source.getAttribute(attribute)))\n}\n\n/**\n * Copy existing data-* attributes from source to destination as attributes.\n * @param {!HTMLElement} source\n * @param {!HTMLElement} destination\n * @param {!Array.<string>} attributes\n * @return {void}\n */\nconst copyDataAttributesToAttributes = (source, destination, attributes) => {\n  attributes.filter(attribute => source.hasAttribute(`data-${attribute}`))\n    .forEach(attribute =>\n      destination.setAttribute(attribute, source.getAttribute(`data-${attribute}`)))\n}\n\nexport default {\n  findClosestAncestor,\n  isNestedInTable,\n  closestInlineStyle,\n  isVisible,\n  copyAttributesToDataAttributes,\n  copyDataAttributesToAttributes\n}","/** Function rate limiter. */\nexport default class Throttle {\n  /**\n   * The function to invoke when not throttled.\n   *\n   * @callback NotThrottledFunction\n   */\n\n  /**\n   * A function wrapped in a Throttle.\n   *\n   * @callback WrappedFunction\n   */\n\n  /**\n   * Wraps a function in a Throttle.\n   * @param {!Window} window\n   * @param {!number} period The nonnegative minimum number of milliseconds between function\n   *                         invocations.\n   * @param {!NotThrottledFunction} funktion\n   * @return {!WrappedFunction}\n   */\n  static wrap(window, period, funktion) {\n    const throttle = new Throttle(window, period, funktion)\n    const throttled = function Throttled() { return throttle.queue(this, arguments) }\n    throttled.result = () => throttle.result\n    throttled.pending = () => throttle.pending()\n    throttled.delay = () => throttle.delay()\n    throttled.cancel = () => throttle.cancel()\n    throttled.reset = () => throttle.reset()\n    return throttled\n  }\n\n  /**\n   * @param {!Window} window\n   * @param {!number} period The nonnegative minimum number of milliseconds between function\n   *                         invocations.\n   * @param {!NotThrottledFunction} funktion\n   */\n  constructor(window, period, funktion) {\n    this._window = window\n    this._period = period\n    this._function = funktion\n\n    // The upcoming invocation's context and arguments.\n    this._context = undefined\n    this._arguments = undefined\n\n    // The previous invocation's result, timeout identifier, and last run timestamp.\n    this._result = undefined\n    this._timeout = 0\n    this._timestamp = 0\n  }\n\n  /**\n   * The return value of the initial run is always undefined. The return value of subsequent runs is\n   * always a previous result. The context and args used by a future invocation are always the most\n   * recently supplied. Invocations, even if immediately eligible, are dispatched.\n   * @param {?any} context\n   * @param {?any} args The arguments passed to the underlying function.\n   * @return {?any} The cached return value of the underlying function.\n   */\n  queue(context, args) {\n    // Always update the this and arguments to the latest supplied.\n    this._context = context\n    this._arguments = args\n\n    if (!this.pending()) {\n      // Queue a new invocation.\n      this._timeout = this._window.setTimeout(() => {\n        this._timeout = 0\n        this._timestamp = Date.now()\n        this._result = this._function.apply(this._context, this._arguments)\n      }, this.delay())\n    }\n\n    // Always return the previous result.\n    return this.result\n  }\n\n  /** @return {?any} The cached return value of the underlying function. */\n  get result() { return this._result }\n\n  /** @return {!boolean} true if an invocation is queued. */\n  pending() { return Boolean(this._timeout) }\n\n  /**\n   * @return {!number} The nonnegative number of milliseconds until an invocation is eligible to\n   *                   run.\n   */\n  delay() {\n    if (!this._timestamp) { return 0 }\n    return Math.max(0, this._period - (Date.now() - this._timestamp))\n  }\n\n  /**\n   * Clears any pending invocation but doesn't clear time last invoked or prior result.\n   * @return {void}\n   */\n  cancel() {\n    if (this._timeout) { this._window.clearTimeout(this._timeout) }\n    this._timeout = 0\n  }\n\n  /**\n   * Clears any pending invocation, time last invoked, and prior result.\n   * @return {void}\n   */\n  reset() {\n    this.cancel()\n    this._result = undefined\n    this._timestamp = 0\n  }\n}","import './CollapseTable.css'\nimport ElementUtilities from './ElementUtilities'\nimport NodeUtilities from './NodeUtilities'\nimport Polyfill from './Polyfill'\n\nconst NODE_TYPE = NodeUtilities.NODE_TYPE\n\nconst SECTION_TOGGLED_EVENT_TYPE = 'section-toggled'\nconst BREAKING_SPACE = ' '\nconst CLASS = {\n  ICON: 'pagelib_collapse_table_icon',\n  CONTAINER: 'pagelib_collapse_table_container',\n  COLLAPSED_CONTAINER: 'pagelib_collapse_table_collapsed_container',\n  COLLAPSED: 'pagelib_collapse_table_collapsed',\n  COLLAPSED_BOTTOM: 'pagelib_collapse_table_collapsed_bottom',\n  COLLAPSE_TEXT: 'pagelib_collapse_table_collapse_text',\n  EXPANDED: 'pagelib_collapse_table_expanded',\n}\n\n/**\n * Determine if we want to extract text from this header.\n * @param {!Element} header\n * @return {!boolean}\n */\nconst isHeaderEligible =\n  header => header.childNodes && Polyfill.querySelectorAll(header, 'a').length < 3\n\n/**\n * Determine eligibility of extracted text.\n * @param {?string} headerText\n * @return {!boolean}\n */\nconst isHeaderTextEligible = headerText =>\n  headerText && headerText.replace(/[\\s0-9]/g, '').length > 0\n\n/**\n * Extracts first word from string. Returns null if for any reason it is unable to do so.\n * @param  {!string} string\n * @return {?string}\n */\nconst firstWordFromString = string => {\n  // 'If the global flag (g) is not set, Element zero of the array contains the entire match,\n  // while elements 1 through n contain any submatches.'\n  const matches = string.match(/\\w+/) // Only need first match so not using 'g' option.\n  if (!matches) {\n    return undefined\n  }\n  return matches[0]\n}\n\n/**\n * Is node's textContent too similar to pageTitle. Checks if the first word of the node's\n * textContent is found at the beginning of pageTitle.\n * @param  {!Node} node\n * @param  {!string} pageTitle\n * @return {!boolean}\n */\nconst isNodeTextContentSimilarToPageTitle = (node, pageTitle) => {\n  const firstPageTitleWord = firstWordFromString(pageTitle)\n  const firstNodeTextContentWord = firstWordFromString(node.textContent)\n  // Don't claim similarity if 1st words were not extracted.\n  if (!firstPageTitleWord || !firstNodeTextContentWord) {\n    return false\n  }\n  return firstPageTitleWord.toLowerCase() === firstNodeTextContentWord.toLowerCase()\n}\n\n/**\n * Removes leading and trailing whitespace and normalizes other whitespace - i.e. ensures\n * non-breaking spaces, tabs, etc are replaced with regular breaking spaces.\n * @param  {!string} string\n * @return {!string}\n */\nconst stringWithNormalizedWhitespace = string => string.trim().replace(/\\s/g, BREAKING_SPACE)\n\n/**\n * Determines if node is a BR.\n * @param  {!Node}  node\n * @return {!boolean}\n */\nconst isNodeBreakElement = node => node.nodeType === NODE_TYPE.ELEMENT_NODE && node.tagName === 'BR'\n\n/**\n * Replace node with a text node bearing a single breaking space.\n * @param {!Document} document\n * @param  {!Node} node\n * @return {void}\n */\nconst replaceNodeWithBreakingSpaceTextNode = (document, node) => {\n  node.parentNode.replaceChild(document.createTextNode(BREAKING_SPACE), node)\n}\n\n/**\n * Extracts any header text determined to be eligible.\n * @param {!Document} document\n * @param {!Element} header\n * @param {?string} pageTitle\n * @return {?string}\n */\nconst extractEligibleHeaderText = (document, header, pageTitle) => {\n  if (!isHeaderEligible(header)) {\n    return null\n  }\n  // Clone header into fragment. This is done so we can remove some elements we don't want\n  // represented when \"textContent\" is used. Because we've cloned the header into a fragment, we are\n  // free to strip out anything we want without worrying about affecting the visible document.\n  const fragment = document.createDocumentFragment()\n  fragment.appendChild(header.cloneNode(true))\n  const fragmentHeader = fragment.querySelector('th')\n\n  Polyfill.querySelectorAll(fragmentHeader, '.geo, .coordinates, sup.reference, ol, ul')\n    .forEach(el => el.remove())\n\n  const childNodesArray = Array.prototype.slice.call(fragmentHeader.childNodes)\n  if (pageTitle) {\n    childNodesArray\n      .filter(NodeUtilities.isNodeTypeElementOrText)\n      .filter(node => isNodeTextContentSimilarToPageTitle(node, pageTitle))\n      .forEach(node => node.remove())\n  }\n\n  childNodesArray\n    .filter(isNodeBreakElement)\n    .forEach(node => replaceNodeWithBreakingSpaceTextNode(document, node))\n\n  const headerText = fragmentHeader.textContent\n  if (isHeaderTextEligible(headerText)) {\n    return stringWithNormalizedWhitespace(headerText)\n  }\n  return null\n}\n\n/**\n * Used to sort array of Elements so those containing 'scope' attribute are moved to front of\n * array. Relative order between 'scope' elements is preserved. Relative order between non 'scope'\n * elements is preserved.\n * @param  {!Element} a\n * @param  {!Element} b\n * @return {!number}\n */\nconst elementScopeComparator = (a, b) => {\n  const aHasScope = a.hasAttribute('scope')\n  const bHasScope = b.hasAttribute('scope')\n  if (aHasScope && bHasScope) {\n    return 0\n  }\n  if (aHasScope) {\n    return -1\n  }\n  if (bHasScope) {\n    return 1\n  }\n  return 0\n}\n\n/**\n * Find an array of table header (TH) contents. If there are no TH elements in\n * the table or the header's link matches pageTitle, an empty array is returned.\n * @param {!Document} document\n * @param {!Element} element\n * @param {?string} pageTitle Unencoded page title; if this title matches the\n *                            contents of the header exactly, it will be omitted.\n * @return {!Array<string>}\n */\nconst getTableHeaderTextArray = (document, element, pageTitle) => {\n  const headerTextArray = []\n  const headers = Polyfill.querySelectorAll(element, 'th')\n  headers.sort(elementScopeComparator)\n  for (let i = 0; i < headers.length; ++i) {\n    const headerText = extractEligibleHeaderText(document, headers[i], pageTitle)\n    if (headerText && headerTextArray.indexOf(headerText) === -1) {\n      headerTextArray.push(headerText)\n      // 'newCaptionFragment' only ever uses the first 2 items.\n      if (headerTextArray.length === 2) {\n        break\n      }\n    }\n  }\n  return headerTextArray\n}\n\n/**\n * @typedef {function} FooterDivClickCallback\n * @param {!HTMLElement}\n * @return {void}\n */\n\n/**\n * @param {!Element} container div\n * @param {?Element} trigger element that was clicked or tapped\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {boolean} true if collapsed, false if expanded.\n */\nconst toggleCollapsedForContainer = function(container, trigger, footerDivClickCallback) {\n  const header = container.children[0]\n  const table = container.children[1]\n  const footer = container.children[2]\n  const caption = header.querySelector('.app_table_collapsed_caption')\n  const collapsed = table.style.display !== 'none'\n  if (collapsed) {\n    table.style.display = 'none'\n    header.classList.remove(CLASS.COLLAPSED)\n    header.classList.remove(CLASS.ICON)\n    header.classList.add(CLASS.EXPANDED)\n    if (caption) {\n      caption.style.visibility = 'visible'\n    }\n    footer.style.display = 'none'\n    // if they clicked the bottom div, then scroll back up to the top of the table.\n    if (trigger === footer && footerDivClickCallback) {\n      footerDivClickCallback(container)\n    }\n  } else {\n    table.style.display = 'block'\n    header.classList.remove(CLASS.EXPANDED)\n    header.classList.add(CLASS.COLLAPSED)\n    header.classList.add(CLASS.ICON)\n    if (caption) {\n      caption.style.visibility = 'hidden'\n    }\n    footer.style.display = 'block'\n  }\n  return collapsed\n}\n\n/**\n * Ex: toggleCollapseClickCallback.bind(el, (container) => {\n *       window.scrollTo(0, container.offsetTop - transformer.getDecorOffset())\n *     })\n * @this HTMLElement\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {boolean} true if collapsed, false if expanded.\n */\nconst toggleCollapseClickCallback = function(footerDivClickCallback) {\n  const container = this.parentNode\n  return toggleCollapsedForContainer(container, this, footerDivClickCallback)\n}\n\n/**\n * @param {!HTMLElement} table\n * @return {!boolean} true if table should be collapsed, false otherwise.\n */\nconst shouldTableBeCollapsed = table => {\n  const classBlacklist = ['navbox', 'vertical-navbox', 'navbox-inner', 'metadata', 'mbox-small']\n  const blacklistIntersects = classBlacklist.some(clazz => table.classList.contains(clazz))\n  return table.style.display !== 'none' && !blacklistIntersects\n}\n\n/**\n * @param {!Element} element\n * @return {!boolean} true if element is an infobox, false otherwise.\n */\nconst isInfobox = element =>\n  element.classList.contains('infobox')\n  || element.classList.contains('infobox_v3')\n\n/**\n * @param {!Document} document\n * @param {!DocumentFragment} content\n * @return {!HTMLDivElement}\n */\nconst newCollapsedHeaderDiv = (document, content) => {\n  const div = document.createElement('div')\n  div.classList.add(CLASS.COLLAPSED_CONTAINER)\n  div.classList.add(CLASS.EXPANDED)\n  div.appendChild(content)\n  return div\n}\n\n/**\n * @param {!Document} document\n * @param {?string} content HTML string.\n * @return {!HTMLDivElement}\n */\nconst newCollapsedFooterDiv = (document, content) => {\n  const div = document.createElement('div')\n  div.classList.add(CLASS.COLLAPSED_BOTTOM)\n  div.classList.add(CLASS.ICON)\n  div.innerHTML = content || ''\n  return div\n}\n\n/**\n * @param {!Document} document\n * @param {!string} title\n * @param {!Array.<string>} headerText\n * @return {!DocumentFragment}\n */\nconst newCaptionFragment = (document, title, headerText) => {\n  const fragment = document.createDocumentFragment()\n\n  const strong = document.createElement('strong')\n  strong.innerHTML = title\n  fragment.appendChild(strong)\n\n  const span = document.createElement('span')\n  span.classList.add(CLASS.COLLAPSE_TEXT)\n  if (headerText.length > 0) {\n    span.appendChild(document.createTextNode(`: ${headerText[0]}`))\n  }\n  if (headerText.length > 1) {\n    span.appendChild(document.createTextNode(`, ${headerText[1]}`))\n  }\n  if (headerText.length > 0) {\n    span.appendChild(document.createTextNode(' …'))\n  }\n  fragment.appendChild(span)\n\n  return fragment\n}\n\n/**\n * @param {!Document} document\n * @param {?string} pageTitle use title for this not `display title` (which can contain tags)\n * @param {?string} infoboxTitle\n * @param {?string} otherTitle\n * @param {?string} footerTitle\n * @return {void}\n */\nconst prepareTables = (document, pageTitle, infoboxTitle, otherTitle, footerTitle) => {\n  const tables = document.querySelectorAll('table, .infobox_v3')\n  for (let i = 0; i < tables.length; ++i) {\n    const table = tables[i]\n\n    if (ElementUtilities.findClosestAncestor(table, `.${CLASS.CONTAINER}`)\n      || !shouldTableBeCollapsed(table)) {\n      continue\n    }\n\n    const headerTextArray = getTableHeaderTextArray(document, table, pageTitle)\n    if (!headerTextArray.length && !isInfobox(table)) {\n      continue\n    }\n    const captionFragment =\n      newCaptionFragment(document, isInfobox(table) ? infoboxTitle : otherTitle, headerTextArray)\n\n    // create the container div that will contain both the original table\n    // and the collapsed version.\n    const containerDiv = document.createElement('div')\n    containerDiv.className = CLASS.CONTAINER\n    table.parentNode.insertBefore(containerDiv, table)\n    table.parentNode.removeChild(table)\n\n    // remove top and bottom margin from the table, so that it's flush with\n    // our expand/collapse buttons\n    table.style.marginTop = '0px'\n    table.style.marginBottom = '0px'\n\n    const collapsedHeaderDiv = newCollapsedHeaderDiv(document, captionFragment)\n    collapsedHeaderDiv.style.display = 'block'\n\n    const collapsedFooterDiv = newCollapsedFooterDiv(document, footerTitle)\n    collapsedFooterDiv.style.display = 'none'\n\n    // add our stuff to the container\n    containerDiv.appendChild(collapsedHeaderDiv)\n    containerDiv.appendChild(table)\n    containerDiv.appendChild(collapsedFooterDiv)\n\n    // set initial visibility\n    table.style.display = 'none'\n  }\n}\n\n/**\n * @param {!Window} window\n * @param {!Element} container root element to search from\n * @param {?boolean} isInitiallyCollapsed\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {void}\n */\nconst setupEventHandling = (window, container, isInitiallyCollapsed, footerDivClickCallback) => {\n  /**\n   * @param {boolean} collapsed\n   * @return {boolean}\n   */\n  const dispatchSectionToggledEvent = collapsed =>\n    window.dispatchEvent(new Polyfill.CustomEvent(SECTION_TOGGLED_EVENT_TYPE, { collapsed }))\n\n  // assign click handler to the collapsed divs\n  const collapsedHeaderDivs = Polyfill.querySelectorAll(container, `.${CLASS.COLLAPSED_CONTAINER}`)\n  collapsedHeaderDivs.forEach(collapsedHeaderDiv => {\n    collapsedHeaderDiv.onclick = () => {\n      const collapsed = toggleCollapseClickCallback.bind(collapsedHeaderDiv)()\n      dispatchSectionToggledEvent(collapsed)\n    }\n  })\n\n  const collapsedFooterDivs = Polyfill.querySelectorAll(container, `.${CLASS.COLLAPSED_BOTTOM}`)\n  collapsedFooterDivs.forEach(collapsedFooterDiv => {\n    collapsedFooterDiv.onclick = () => {\n      const collapsed = toggleCollapseClickCallback.bind(collapsedFooterDiv,\n        footerDivClickCallback)()\n      dispatchSectionToggledEvent(collapsed)\n    }\n  })\n\n  if (!isInitiallyCollapsed) {\n    const containerDivs = Polyfill.querySelectorAll(container, `.${CLASS.CONTAINER}`)\n    containerDivs.forEach(containerDiv => {\n      toggleCollapsedForContainer(containerDiv)\n    })\n  }\n}\n\n/**\n * @param {!Window} window\n * @param {!Document} document\n * @param {?string} pageTitle use title for this not `display title` (which can contain tags)\n * @param {?boolean} isMainPage\n * @param {?boolean} isInitiallyCollapsed\n * @param {?string} infoboxTitle\n * @param {?string} otherTitle\n * @param {?string} footerTitle\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {void}\n */\nconst adjustTables = (window, document, pageTitle, isMainPage, isInitiallyCollapsed,\n  infoboxTitle, otherTitle, footerTitle, footerDivClickCallback) => {\n  if (isMainPage) { return }\n\n  prepareTables(document, pageTitle, infoboxTitle, otherTitle, footerTitle)\n  setupEventHandling(window, document, isInitiallyCollapsed, footerDivClickCallback)\n}\n\n/**\n * @param {!Window} window\n * @param {!Document} document\n * @param {?string} pageTitle use title for this not `display title` (which can contain tags)\n * @param {?boolean} isMainPage\n * @param {?string} infoboxTitle\n * @param {?string} otherTitle\n * @param {?string} footerTitle\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {void}\n */\nconst collapseTables = (window, document, pageTitle, isMainPage, infoboxTitle, otherTitle,\n  footerTitle, footerDivClickCallback) => {\n  adjustTables(window, document, pageTitle, isMainPage, true, infoboxTitle, otherTitle,\n    footerTitle, footerDivClickCallback)\n}\n\n/**\n * If you tap a reference targeting an anchor within a collapsed table, this\n * method will expand the references section. The client can then scroll to the\n * references section.\n *\n * The first reference (an \"[A]\") in the \"enwiki > Airplane\" article from ~June\n * 2016 exhibits this issue. (You can copy wikitext from this revision into a\n * test wiki page for testing.)\n * @param  {?Element} element\n * @return {void}\n*/\nconst expandCollapsedTableIfItContainsElement = element => {\n  if (element) {\n    const containerSelector = `[class*=\"${CLASS.CONTAINER}\"]`\n    const container = ElementUtilities.findClosestAncestor(element, containerSelector)\n    if (container) {\n      const collapsedDiv = container.firstElementChild\n      if (collapsedDiv && collapsedDiv.classList.contains(CLASS.EXPANDED)) {\n        collapsedDiv.click()\n      }\n    }\n  }\n}\n\nexport default {\n  SECTION_TOGGLED_EVENT_TYPE,\n  toggleCollapseClickCallback,\n  collapseTables,\n  adjustTables,\n  prepareTables,\n  setupEventHandling,\n  expandCollapsedTableIfItContainsElement,\n  test: {\n    elementScopeComparator,\n    extractEligibleHeaderText,\n    firstWordFromString,\n    getTableHeaderTextArray,\n    shouldTableBeCollapsed,\n    isHeaderEligible,\n    isHeaderTextEligible,\n    isInfobox,\n    newCollapsedHeaderDiv,\n    newCollapsedFooterDiv,\n    newCaptionFragment,\n    isNodeTextContentSimilarToPageTitle,\n    stringWithNormalizedWhitespace,\n    replaceNodeWithBreakingSpaceTextNode\n  }\n}","// Node is undefined in Node.js\nconst NODE_TYPE = {\n  ELEMENT_NODE: 1,\n  TEXT_NODE: 3\n}\n\n/**\n * Determines if node is either an element or text node.\n * @param  {!Node} node\n * @return {!boolean}\n */\nconst isNodeTypeElementOrText = node =>\n  node.nodeType === NODE_TYPE.ELEMENT_NODE || node.nodeType === NODE_TYPE.TEXT_NODE\n\nexport default {\n  isNodeTypeElementOrText,\n  NODE_TYPE\n}","import Polyfill from './Polyfill'\n\n/**\n * Extracts array of page issues from element\n * @param {!Document} document\n * @param {?Element} element\n * @return {!Array.<string>} Return empty array if nothing is extracted\n */\nconst collectPageIssues = (document, element) => {\n  if (!element) {\n    return []\n  }\n  const tables =\n    Polyfill.querySelectorAll(element, 'table.ambox:not(.ambox-multiple_issues):not(.ambox-notice)')\n  // Get the tables into a fragment so we can remove some elements without triggering a layout\n  const fragment = document.createDocumentFragment()\n  const cloneTableIntoFragment =\n    table => fragment.appendChild(table.cloneNode(true)) // eslint-disable-line require-jsdoc\n  tables.forEach(cloneTableIntoFragment)\n  // Remove some elements we don't want when \"textContent\" or \"innerHTML\" are used\n  Polyfill.querySelectorAll(fragment, '.hide-when-compact, .collapsed').forEach(el => el.remove())\n  return Polyfill.querySelectorAll(fragment, 'td[class*=mbox-text] > *[class*=mbox-text]')\n}\n\n/**\n * Extracts array of page issues HTML from element\n * @param {!Document} document\n * @param {?Element} element\n * @return {!Array.<string>} Return empty array if nothing is extracted\n */\nconst collectPageIssuesHTML = (document, element) =>\n  collectPageIssues(document, element).map(el => el.innerHTML)\n\n/**\n * Extracts array of page issues text from element\n * @param {!Document} document\n * @param {?Element} element\n * @return {!Array.<string>} Return empty array if nothing is extracted\n */\nconst collectPageIssuesText = (document, element) =>\n  collectPageIssues(document, element).map(el => el.textContent.trim())\n\n/**\n * Extracts array of disambiguation titles from an element\n * @param {?Element} element\n * @return {!Array.<string>} Return empty array if nothing is extracted\n */\nconst collectDisambiguationTitles = element => {\n  if (!element) {\n    return []\n  }\n  return Polyfill.querySelectorAll(element, 'div.hatnote a[href]:not([href=\"\"]):not([redlink=\"1\"])')\n    .map(el => el.href)\n}\n\n/**\n * Extracts array of disambiguation items html from an element\n * @param {?Element} element\n * @return {!Array.<string>} Return empty array if nothing is extracted\n */\nconst collectDisambiguationHTML = element => {\n  if (!element) {\n    return []\n  }\n  return Polyfill.querySelectorAll(element, 'div.hatnote').map(el => el.innerHTML)\n}\n\nexport default {\n  collectDisambiguationTitles,\n  collectDisambiguationHTML,\n  collectPageIssuesHTML,\n  collectPageIssuesText,\n  test: {\n    collectPageIssues\n  }\n}","/** CSS length value and unit of measure. */\nclass DimensionUnit {\n  /**\n   * Returns the dimension and units of an Element, usually width or height, as specified by inline\n   * style or attribute. This is a pragmatic not bulletproof implementation.\n   * @param {!Element} element\n   * @param {!string} property\n   * @return {?DimensionUnit}\n   */\n  static fromElement(element, property) {\n    return element.style.getPropertyValue(property)\n      && DimensionUnit.fromStyle(element.style.getPropertyValue(property))\n      || element.hasAttribute(property) && new DimensionUnit(element.getAttribute(property))\n      || undefined\n  }\n\n  /**\n   * This is a pragmatic not bulletproof implementation.\n   * @param {!string} property\n   * @return {!DimensionUnit}\n   */\n  static fromStyle(property) {\n    const matches = property.match(/(-?\\d*\\.?\\d*)(\\D+)?/) || []\n    return new DimensionUnit(matches[1], matches[2])\n  }\n\n  /**\n   * @param {!string} value\n   * @param {?string} unit Defaults to pixels.\n   */\n  constructor(value, unit) {\n    this._value = Number(value)\n    this._unit = unit || 'px'\n  }\n\n  /** @return {!number} NaN if unknown. */\n  get value() { return this._value }\n\n  /** @return {!string} */\n  get unit() { return this._unit }\n\n  /** @return {!string} */\n  toString() {\n    return isNaN(this.value) ? '' : `${this.value}${this.unit}`\n  }\n}\n\n/** Element width and height dimensions and units. */\nexport default class ElementGeometry {\n  /**\n   * @param {!Element} element\n   * @return {!ElementGeometry}\n   */\n  static from(element) {\n    return new ElementGeometry(DimensionUnit.fromElement(element, 'width'),\n      DimensionUnit.fromElement(element, 'height'))\n  }\n\n  /**\n   * @param {?DimensionUnit} width\n   * @param {?DimensionUnit} height\n   */\n  constructor(width, height) {\n    this._width = width\n    this._height = height\n  }\n\n  /**\n   * @return {?DimensionUnit}\n   */\n  get width() { return this._width }\n\n  /** @return {!number} NaN if unknown. */\n  get widthValue() { return this._width && !isNaN(this._width.value) ? this._width.value : NaN }\n\n  /** @return {!string} */\n  get widthUnit() { return this._width && this._width.unit || 'px' }\n\n  /**\n   * @return {?DimensionUnit}\n   */\n  get height() { return this._height }\n\n  /** @return {!number} NaN if unknown. */\n  get heightValue() { return this._height && !isNaN(this._height.value) ? this._height.value : NaN }\n\n  /** @return {!string} */\n  get heightUnit() { return this._height && this._height.unit || 'px' }\n}","import './FooterContainer.css'\nimport Polyfill from './Polyfill'\n\n/**\n * Ensures the 'Read more' section header can always be scrolled to the top of the screen.\n * @param {!Window} window\n * @return {void}\n */\nconst updateBottomPaddingToAllowReadMoreToScrollToTop = window => {\n  const div = window.document.getElementById('pagelib_footer_container_ensure_can_scroll_to_top')\n  const currentPadding = parseInt(div.style.paddingBottom, 10) || 0\n  const height = div.clientHeight - currentPadding\n  const newPadding = Math.max(0, window.innerHeight - height)\n  div.style.paddingBottom = `${newPadding}px`\n}\n\n/**\n * Allows native code to adjust footer container margins without having to worry about\n * implementation details.\n * @param {!number} margin\n * @param {!Document} document\n * @return {void}\n */\nconst updateLeftAndRightMargin = (margin, document) => {\n  const selectors = [\n    '#pagelib_footer_container_menu_heading',\n    '#pagelib_footer_container_readmore',\n    '#pagelib_footer_container_legal'\n  ]\n  const elements = Polyfill.querySelectorAll(document, selectors.join())\n  elements.forEach(element => {\n    element.style.marginLeft = `${margin}px`\n    element.style.marginRight = `${margin}px`\n  })\n  const rightOrLeft = document.querySelector('html').dir === 'rtl' ? 'right' : 'left'\n  Polyfill.querySelectorAll(document, '.pagelib_footer_menu_item')\n    .forEach(element => {\n      element.style.backgroundPosition = `${rightOrLeft} ${margin}px center`\n      element.style.paddingLeft = `${margin}px`\n      element.style.paddingRight = `${margin}px`\n    })\n}\n\n/**\n * Returns a fragment containing structural footer html which may be inserted where needed.\n * @param {!Document} document\n * @return {!DocumentFragment}\n */\nconst containerFragment = document => {\n  const containerDiv = document.createElement('div')\n  const containerFragment = document.createDocumentFragment()\n  containerFragment.appendChild(containerDiv)\n  containerDiv.innerHTML =\n  `<div id='pagelib_footer_container' class='pagelib_footer_container'>\n    <div id='pagelib_footer_container_section_0'>\n      <div id='pagelib_footer_container_menu'>\n        <div id='pagelib_footer_container_menu_heading' class='pagelib_footer_container_heading'>\n        </div>\n        <div id='pagelib_footer_container_menu_items'>\n        </div>\n      </div>\n    </div>\n    <div id='pagelib_footer_container_ensure_can_scroll_to_top'>\n      <div id='pagelib_footer_container_section_1'>\n        <div id='pagelib_footer_container_readmore'>\n          <div\n            id='pagelib_footer_container_readmore_heading' class='pagelib_footer_container_heading'>\n          </div>\n          <div id='pagelib_footer_container_readmore_pages'>\n          </div>\n        </div>\n      </div>\n      <div id='pagelib_footer_container_legal'></div>\n    </div>\n  </div>`\n  return containerFragment\n}\n\n/**\n * Indicates whether container is has already been added.\n * @param {!Document} document\n * @return {boolean}\n */\nconst isContainerAttached = document => Boolean(document.querySelector('#pagelib_footer_container'))\n\nexport default {\n  containerFragment,\n  isContainerAttached, // todo: rename isAttached()?\n  updateBottomPaddingToAllowReadMoreToScrollToTop,\n  updateLeftAndRightMargin\n}","import './FooterLegal.css'\n\n/**\n * @typedef {function} FooterLegalClickCallback\n * @return {void}\n */\n\n/**\n  * @typedef {function} FooterBrowserClickCallback\n  * @return {void}\n  */\n\n/**\n * Adds legal footer html to 'containerID' element.\n * @param {!Element} content\n * @param {?string} licenseString\n * @param {?string} licenseSubstitutionString\n * @param {!string} containerID\n * @param {!FooterLegalClickCallback} licenseLinkClickHandler\n * @param {!string} viewInBrowserString\n * @param {!FooterBrowserClickCallback} browserLinkClickHandler\n * @return {void}\n */\nconst add = (content, licenseString, licenseSubstitutionString, containerID,\n  licenseLinkClickHandler, viewInBrowserString, browserLinkClickHandler) => {\n  // todo: don't manipulate the selector. The client can make this an ID if they want it to be.\n  const container = content.querySelector(`#${containerID}`)\n  const licenseStringHalves = licenseString.split('$1')\n\n  container.innerHTML =\n  `<div class='pagelib_footer_legal_contents'>\n    <hr class='pagelib_footer_legal_divider'>\n    <span class='pagelib_footer_legal_license'>\n      ${licenseStringHalves[0]}\n      <a class='pagelib_footer_legal_license_link'>\n        ${licenseSubstitutionString}\n      </a>\n      ${licenseStringHalves[1]}\n      <br>\n      <div class=\"pagelib_footer_browser\">\n        <a class='pagelib_footer_browser_link'>\n          ${viewInBrowserString}\n        </a>\n      </div>\n    </span>\n  </div>`\n\n  container.querySelector('.pagelib_footer_legal_license_link')\n    .addEventListener('click', () => {\n      licenseLinkClickHandler()\n    })\n\n  container.querySelector('.pagelib_footer_browser_link')\n    .addEventListener('click', () => {\n      browserLinkClickHandler()\n    })\n}\n\nexport default {\n  add\n}","import './FooterReadMore.css'\n\n/**\n * @typedef {function} SaveButtonClickHandler\n * @param {!string} title\n * @return {void}\n */\n\n/**\n * @typedef {function} TitlesShownHandler\n * @param {!Array.<string>} titles\n * @return {void}\n */\n\n/**\n * Display fetched read more pages.\n * @typedef {function} ShowReadMorePagesHandler\n * @param {!Array.<object>} pages\n * @param {!string} containerID\n * @param {!SaveButtonClickHandler} saveButtonClickHandler\n * @param {!TitlesShownHandler} titlesShownHandler\n * @param {!Document} document\n * @return {void}\n */\n\nconst SAVE_BUTTON_ID_PREFIX = 'pagelib_footer_read_more_save_'\n\n/**\n * Removes parenthetical enclosures from string.\n * @param {!string} string\n * @param {!string} opener\n * @param {!string} closer\n * @return {!string}\n */\nconst safelyRemoveEnclosures = (string, opener, closer) => {\n  const enclosureRegex = new RegExp(`\\\\s?[${opener}][^${opener}${closer}]+[${closer}]`, 'g')\n  let counter = 0\n  const safeMaxTries = 30\n  let stringToClean = string\n  let previousString = ''\n  do {\n    previousString = stringToClean\n    stringToClean = stringToClean.replace(enclosureRegex, '')\n    counter++\n  } while (previousString !== stringToClean && counter < safeMaxTries)\n  return stringToClean\n}\n\n/**\n * Removes '(...)' and '/.../' parenthetical enclosures from string.\n * @param {!string} string\n * @return {!string}\n */\nconst cleanExtract = string => {\n  let stringToClean = string\n  stringToClean = safelyRemoveEnclosures(stringToClean, '(', ')')\n  stringToClean = safelyRemoveEnclosures(stringToClean, '/', '/')\n  return stringToClean\n}\n\n/**\n * Read more page model.\n */\nclass ReadMorePage {\n  /**\n   * ReadMorePage constructor.\n   * @param {!string} title\n   * @param {!string} displayTitle\n   * @param {?string} thumbnail\n   * @param {?string} description\n   * @param {?string} extract\n   */\n  constructor(title, displayTitle, thumbnail, description, extract) {\n    this.title = title\n    this.displayTitle = displayTitle\n    this.thumbnail = thumbnail\n    this.description = description\n    this.extract = extract\n  }\n}\n\n/**\n * Makes document fragment for a read more page.\n * @param {!ReadMorePage} readMorePage\n * @param {!number} index\n * @param {!SaveButtonClickHandler} saveButtonClickHandler\n * @param {!Document} document\n * @return {!DocumentFragment}\n */\nconst documentFragmentForReadMorePage = (readMorePage, index, saveButtonClickHandler, document) => {\n  const outerAnchorContainer = document.createElement('a')\n  outerAnchorContainer.id = index\n  outerAnchorContainer.className = 'pagelib_footer_readmore_page'\n\n  const hasImage = readMorePage.thumbnail && readMorePage.thumbnail.source\n  if (hasImage) {\n    const image = document.createElement('div')\n    image.style.backgroundImage = `url(${readMorePage.thumbnail.source})`\n    image.classList.add('pagelib_footer_readmore_page_image')\n    outerAnchorContainer.appendChild(image)\n  }\n\n  const innerDivContainer = document.createElement('div')\n  innerDivContainer.classList.add('pagelib_footer_readmore_page_container')\n  outerAnchorContainer.appendChild(innerDivContainer)\n  outerAnchorContainer.href = `/wiki/${encodeURI(readMorePage.title)}?event_logging_label=read_more`\n\n  let titleToShow\n  if (readMorePage.displayTitle) {\n    titleToShow = readMorePage.displayTitle\n  } else if (readMorePage.title) {\n    titleToShow = readMorePage.title\n  }\n\n  if (titleToShow) {\n    const title = document.createElement('div')\n    title.id = index\n    title.className = 'pagelib_footer_readmore_page_title'\n    title.innerHTML = titleToShow.replace(/_/g, ' ')\n    outerAnchorContainer.title = readMorePage.title.replace(/_/g, ' ')\n    innerDivContainer.appendChild(title)\n  }\n\n  let description\n  if (readMorePage.description) {\n    description = readMorePage.description\n  }\n  if ((!description || description.length < 10) && readMorePage.extract) {\n    description = cleanExtract(readMorePage.extract)\n  }\n  if (description) {\n    const descriptionEl = document.createElement('div')\n    descriptionEl.id = index\n    descriptionEl.className = 'pagelib_footer_readmore_page_description'\n    descriptionEl.innerHTML = description\n    innerDivContainer.appendChild(descriptionEl)\n  }\n\n  const saveButton = document.createElement('div')\n  saveButton.id = `${SAVE_BUTTON_ID_PREFIX}${encodeURI(readMorePage.title)}`\n  saveButton.className = 'pagelib_footer_readmore_page_save'\n  saveButton.addEventListener('click', event => {\n    event.stopPropagation()\n    event.preventDefault()\n    saveButtonClickHandler(readMorePage.title)\n  })\n  innerDivContainer.appendChild(saveButton)\n\n  return document.createDocumentFragment().appendChild(outerAnchorContainer)\n}\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @type {ShowReadMorePagesHandler}\n */\nconst showReadMorePages = (pages, containerID, saveButtonClickHandler, titlesShownHandler,\n  document) => {\n  const shownTitles = []\n  const container = document.getElementById(containerID)\n  pages.forEach((page, index) => {\n    const title = page.title.replace(/ /g, '_')\n    shownTitles.push(title)\n    const pageModel = new ReadMorePage(title, page.pageprops.displaytitle, page.thumbnail,\n      page.description, page.extract)\n    const pageFragment =\n      documentFragmentForReadMorePage(pageModel, index, saveButtonClickHandler, document)\n    container.appendChild(pageFragment)\n  })\n  titlesShownHandler(shownTitles)\n}\n\n/**\n * Makes 'Read more' query parameters object for a title.\n * @param {!string} title\n * @param {!number} count\n * @return {!Object.<string, string|number>}\n */\nconst queryParameters = (title, count) => ({\n  action: 'query',\n  format: 'json',\n  formatversion: 2,\n  prop: 'extracts|pageimages|description|pageprops',\n\n  // https://www.mediawiki.org/wiki/API:Search\n  // https://www.mediawiki.org/wiki/Help:CirrusSearch\n  generator: 'search',\n  gsrlimit: count, // Limit search results by count.\n  gsrprop: 'redirecttitle', // Include a a parsed snippet of the redirect title property.\n  gsrsearch: `morelike:${title}`, // Weight search with the title.\n  gsrwhat: 'text', // Search the text then titles of pages.\n\n  // https://www.mediawiki.org/wiki/Extension:TextExtracts\n  exchars: 256, // Limit number of characters returned.\n  exintro: '', // Only content before the first section.\n  exlimit: count, // Limit extract results by count.\n  explaintext: '', // Strip HTML.\n\n  // https://www.mediawiki.org/wiki/Extension:PageImages\n  pilicense: 'any', // Include non-free images.\n  pilimit: count, // Limit thumbnail results by count.\n  piprop: 'thumbnail', // Include URL and dimensions of thumbnail.\n  pithumbsize: 120 // Limit thumbnail dimensions.\n})\n\n/**\n * Converts query parameter object to string.\n * @param {!Object.<string, string|number>} parameters\n * @return {!string}\n */\nconst stringFromQueryParameters = parameters => Object.keys(parameters)\n  .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(parameters[key])}`)\n  .join('&')\n\n/**\n * URL for retrieving 'Read more' pages for a given title.\n * Leave 'baseURL' null if you don't need to deal with proxying.\n * @param {!string} title\n * @param {!number} count Number of `Read more` items to fetch for this title\n * @param {?string} baseURL\n * @return {!string}\n */\nconst readMoreQueryURL = (title, count, baseURL) =>\n  `${baseURL || ''}/w/api.php?${stringFromQueryParameters(queryParameters(title, count))}`\n\n/**\n * Fetch error handler.\n * @param {!string} statusText\n * @return {void}\n */\nconst fetchErrorHandler = statusText => {\n  // TODO: figure out if we want to hide the 'Read more' header in cases when fetch fails.\n  console.log(`statusText = ${statusText}`) // eslint-disable-line no-console\n}\n\n/**\n * Fetches 'Read more' pages.\n * @param {!string} title\n * @param {!number} count\n * @param {!string} containerID\n * @param {?string} baseURL\n * @param {!ShowReadMorePagesHandler} showReadMorePagesHandler\n * @param {!SaveButtonClickHandler} saveButtonClickHandler\n * @param {!TitlesShownHandler} titlesShownHandler\n * @param {!Document} document\n * @return {void}\n */\nconst fetchReadMore = (title, count, containerID, baseURL, showReadMorePagesHandler,\n  saveButtonClickHandler, titlesShownHandler, document) => {\n  const xhr = new XMLHttpRequest() // eslint-disable-line no-undef\n  xhr.open('GET', readMoreQueryURL(title, count, baseURL), true)\n  xhr.onload = () => {\n    if (xhr.readyState === XMLHttpRequest.DONE) { // eslint-disable-line no-undef\n      if (xhr.status === 200) {\n        showReadMorePagesHandler(\n          JSON.parse(xhr.responseText).query.pages,\n          containerID,\n          saveButtonClickHandler,\n          titlesShownHandler,\n          document\n        )\n      } else {\n        fetchErrorHandler(xhr.statusText)\n      }\n    }\n  }\n  xhr.onerror = () => fetchErrorHandler(xhr.statusText)\n  try {\n    xhr.send()\n  } catch (error) {\n    fetchErrorHandler(error.toString())\n  }\n}\n\n/**\n * Updates save button bookmark icon for saved state.\n * @param {!HTMLDivElement} button\n * @param {!boolean} isSaved\n * @return {void}\n */\nconst updateSaveButtonBookmarkIcon = (button, isSaved) => {\n  const unfilledClass = 'pagelib_footer_readmore_bookmark_unfilled'\n  const filledClass = 'pagelib_footer_readmore_bookmark_filled'\n  button.classList.remove(filledClass, unfilledClass)\n  button.classList.add(isSaved ? filledClass : unfilledClass)\n}\n\n/**\n * Updates save button text and bookmark icon for saved state.\n * Safe to call even for titles for which there is not currently a 'Read more' item.\n * @param {!string} title\n * @param {!string} text\n * @param {!boolean} isSaved\n * @param {!Document} document\n * @return {void}\n*/\nconst updateSaveButtonForTitle = (title, text, isSaved, document) => {\n  const saveButton = document.getElementById(`${SAVE_BUTTON_ID_PREFIX}${encodeURI(title)}`)\n  if (!saveButton) {\n    return\n  }\n  saveButton.innerText = text\n  saveButton.title = text\n  updateSaveButtonBookmarkIcon(saveButton, isSaved)\n}\n\n/**\n * Adds 'Read more' for 'title' to 'containerID' element.\n * Leave 'baseURL' null if you don't need to deal with proxying.\n * @param {!string} title\n * @param {!number} count\n * @param {!string} containerID\n * @param {?string} baseURL\n * @param {!SaveButtonClickHandler} saveButtonClickHandler\n * @param {!TitlesShownHandler} titlesShownHandler\n * @param {!Document} document\n * @return {void}\n */\nconst add = (title, count, containerID, baseURL, saveButtonClickHandler, titlesShownHandler,\n  document) => {\n  fetchReadMore(\n    title,\n    count,\n    containerID,\n    baseURL,\n    showReadMorePages,\n    saveButtonClickHandler,\n    titlesShownHandler,\n    document\n  )\n}\n\n/**\n * Sets heading element string.\n * @param {!string} headingString\n * @param {!string} headingID\n * @param {!Document} document\n * @return {void}\n */\nconst setHeading = (headingString, headingID, document) => {\n  const headingElement = document.getElementById(headingID)\n  headingElement.innerText = headingString\n  headingElement.title = headingString\n}\n\nexport default {\n  add,\n  setHeading,\n  updateSaveButtonForTitle,\n  test: {\n    cleanExtract,\n    safelyRemoveEnclosures\n  }\n}","import './LazyLoadTransform.css'\n// todo: use imports when other modules are TypeScript.\nconst ElementGeometry = require('./ElementGeometry').default\nconst ElementUtilities = require('./ElementUtilities').default\nconst Polyfill = require('./Polyfill').default\n\n// CSS classes used to identify and present lazily loaded images. Placeholders are members of\n// PLACEHOLDER_CLASS and one state class: pending, loading, or error. Images are members of either\n// loading or loaded state classes. Class names should match those in LazyLoadTransform.css.\nconst PLACEHOLDER_CLASS = 'pagelib_lazy_load_placeholder'\nconst PLACEHOLDER_PENDING_CLASS = 'pagelib_lazy_load_placeholder_pending' // Download pending.\nconst PLACEHOLDER_LOADING_CLASS = 'pagelib_lazy_load_placeholder_loading' // Download started.\nconst PLACEHOLDER_ERROR_CLASS = 'pagelib_lazy_load_placeholder_error' // Download failure.\nconst IMAGE_LOADING_CLASS = 'pagelib_lazy_load_image_loading' // Download started.\nconst IMAGE_LOADED_CLASS = 'pagelib_lazy_load_image_loaded' // Download completed.\n\n// Attributes copied from images to placeholders via data-* attributes for later restoration. The\n// image's classes and dimensions are also set on the placeholder.\n// The 3 data-* items are used by iOS.\nconst COPY_ATTRIBUTES = ['class', 'style', 'src', 'srcset', 'width', 'height', 'alt',\n  'usemap', 'data-file-width', 'data-file-height', 'data-image-gallery'\n]\n\n// Small images, especially icons, are quickly downloaded and may appear in many places. Lazily\n// loading these images degrades the experience with little gain. Always eagerly load these images.\n// Example: flags in the medal count for the \"1896 Summer Olympics medal table.\"\n// https://en.m.wikipedia.org/wiki/1896_Summer_Olympics_medal_table?oldid=773498394#Medal_count\nconst UNIT_TO_MINIMUM_LAZY_LOAD_SIZE: {[unit in string]?: number} = {\n  px: 50, // https://phabricator.wikimedia.org/diffusion/EMFR/browse/master/includes/MobileFormatter.php;c89f371ea9e789d7e1a827ddfec7c8028a549c12$22\n  ex: 10, // ''\n  em: 5 // 1ex ≈ .5em; https://developer.mozilla.org/en-US/docs/Web/CSS/length#Units\n}\n\n/**\n * Replace an image with a placeholder.\n * @param {!Document} document\n * @param {!HTMLImageElement} image The image to be replaced.\n * @return {!HTMLSpanElement} The placeholder replacing image.\n */\nconst convertImageToPlaceholder = (document: Document, image: HTMLImageElement): HTMLSpanElement => {\n  // There are a number of possible implementations for placeholders including:\n  //\n  // - [MobileFrontend] Replace the original image with a span and replace the span with a new\n  //   downloaded image.\n  //   This option has a good fade-in but has some CSS concerns for the placeholder, particularly\n  //   `max-width`, and causes significant reflows when used with image widening.\n  //\n  // - [Previous] Replace the original image with a span and append a new downloaded image to the\n  //   span.\n  //   This option has the best cross-fading and extensibility but makes duplicating all the CSS\n  //   rules for the appended image impractical.\n  //\n  // - [Previous] Replace the original image's source with a transparent image and update the source\n  //   from a new downloaded image.\n  //   This option has a good fade-in and minimal CSS concerns for the placeholder and image but\n  //   causes significant reflows when used with image widening.\n  //\n  // - [Current] Replace the original image with a couple spans and replace the spans with a new\n  //   downloaded image.\n  //   This option is about the same as MobileFrontend but supports image widening without reflows.\n\n  // Create the root placeholder.\n  const placeholder = document.createElement('span')\n\n  // Copy the image's classes and append the placeholder and current state (pending) classes.\n  if (image.hasAttribute('class')) {\n    placeholder.setAttribute('class', image.getAttribute('class') || '')\n  }\n  placeholder.classList.add(PLACEHOLDER_CLASS)\n  placeholder.classList.add(PLACEHOLDER_PENDING_CLASS)\n\n  // Match the image's width, if specified. If image widening is used, this width will be overridden\n  // by !important priority.\n  const geometry = ElementGeometry.from(image)\n  if (geometry.width) { placeholder.style.setProperty('width', `${geometry.width}`) }\n\n  // Save the image's attributes to data-* attributes for later restoration.\n  ElementUtilities.copyAttributesToDataAttributes(image, placeholder, COPY_ATTRIBUTES)\n\n  // Create a spacer and match the aspect ratio of the original image, if determinable. If image\n  // widening is used, this spacer will scale with the width proportionally.\n  const spacing = document.createElement('span')\n  if (geometry.width && geometry.height) {\n    // Assume units are identical.\n    const ratio = geometry.heightValue / geometry.widthValue\n    spacing.style.setProperty('padding-top', `${ratio * 100}%`)\n  }\n\n  // Append the spacer to the placeholder and replace the image with the placeholder.\n  placeholder.appendChild(spacing)\n  if (image.parentNode) image.parentNode.replaceChild(placeholder, image)\n\n  return placeholder\n}\n\n/**\n * @param {!HTMLImageElement} image The image to be considered.\n * @return {!boolean} true if image download can be deferred, false if image should be eagerly\n *                    loaded.\n */\nconst isLazyLoadable = (image: HTMLImageElement): boolean => {\n  const geometry = ElementGeometry.from(image)\n  if (!geometry.width || !geometry.height) { return true }\n  const minWidth = UNIT_TO_MINIMUM_LAZY_LOAD_SIZE[geometry.widthUnit] || Infinity\n  const minHeight = UNIT_TO_MINIMUM_LAZY_LOAD_SIZE[geometry.heightUnit] || Infinity\n  return geometry.widthValue >= minWidth && geometry.heightValue >= minHeight\n}\n\n/**\n * @param {!Element} element\n * @return {!Array.<HTMLImageElement>} Convertible images descendent from but not including element.\n */\nconst queryLazyLoadableImages = (element: Element): HTMLImageElement[] =>\n  Polyfill.querySelectorAll(element, 'img').filter((image: HTMLImageElement) => isLazyLoadable(image))\n\n/**\n * Convert images with placeholders. The transformation is inverted by calling loadImage().\n * @param {!Document} document\n * @param {!Array.<HTMLImageElement>} images The images to lazily load.\n * @return {!Array.<HTMLSpanElement>} The placeholders replacing images.\n */\nconst convertImagesToPlaceholders = (document: Document, images: HTMLImageElement[]): HTMLSpanElement[] =>\n  images.map(image => convertImageToPlaceholder(document, image))\n\n/**\n * Start downloading image resources associated with a given placeholder and replace the placeholder\n * with a new image element when the download is complete.\n * @param {!Document} document\n * @param {!HTMLSpanElement} placeholder\n * @return {!HTMLImageElement} A new image element.\n */\nconst loadPlaceholder = (document: Document, placeholder: HTMLSpanElement): HTMLImageElement => {\n  placeholder.classList.add(PLACEHOLDER_LOADING_CLASS)\n  placeholder.classList.remove(PLACEHOLDER_PENDING_CLASS)\n\n  const image = document.createElement('img')\n\n  const retryListener = (event: MouseEvent) => { // eslint-disable-line require-jsdoc\n    image.setAttribute('src', image.getAttribute('src') || '')\n    event.stopPropagation()\n    event.preventDefault()\n  }\n\n  // Add the download listener prior to setting the src attribute to avoid missing the load event.\n  image.addEventListener('load', () => {\n    placeholder.removeEventListener('click', retryListener)\n    if (placeholder.parentNode) placeholder.parentNode.replaceChild(image, placeholder)\n    image.classList.add(IMAGE_LOADED_CLASS)\n    image.classList.remove(IMAGE_LOADING_CLASS)\n  }, { once: true })\n\n  image.addEventListener('error', () => {\n    placeholder.classList.add(PLACEHOLDER_ERROR_CLASS)\n    placeholder.classList.remove(PLACEHOLDER_LOADING_CLASS)\n    placeholder.addEventListener('click', retryListener)\n  }, { once: true })\n\n  // Set src and other attributes, triggering a download.\n  ElementUtilities.copyDataAttributesToAttributes(placeholder, image, COPY_ATTRIBUTES)\n\n  // Append to the class list after copying over any preexisting classes.\n  image.classList.add(IMAGE_LOADING_CLASS)\n\n  return image\n}\n\nexport default {\n  PLACEHOLDER_CLASS,\n  queryLazyLoadableImages,\n  convertImagesToPlaceholders,\n  loadPlaceholder\n}","/* eslint-disable sort-imports */\n\n// We want the theme transform to be first. This is because the theme transform CSS has to use\n// some '!important' CSS modifiers to reliably set themes on elements which may contain inline\n// styles. Moving it to the top of the file is necessary so other transforms can override\n// these '!important' themes transform CSS bits if needed. Note - if other transforms have trouble\n// overriding things changed by theme transform remember to match or exceed the selector specificity\n// used by the theme transform for whatever it is you are trying to override.\nimport ThemeTransform from './ThemeTransform'\n\nimport BodySpacingTransform from './BodySpacingTransform'\nimport CollapseTable from './CollapseTable'\nimport CollectionUtilities from './CollectionUtilities'\nimport CompatibilityTransform from './CompatibilityTransform'\nimport DimImagesTransform from './DimImagesTransform'\nimport EditTransform from './EditTransform'\nimport ElementGeometry from './ElementGeometry'\nimport ElementUtilities from './ElementUtilities'\nimport LeadIntroductionTransform from './LeadIntroductionTransform'\nimport FooterContainer from './FooterContainer'\nimport FooterLegal from './FooterLegal'\nimport FooterMenu from './FooterMenu'\nimport FooterReadMore from './FooterReadMore'\nimport FooterTransformer from './FooterTransformer'\nimport LazyLoadTransform from './LazyLoadTransform'\nimport LazyLoadTransformer from './LazyLoadTransformer'\nimport PlatformTransform from './PlatformTransform'\nimport Polyfill from './Polyfill'\nimport RedLinks from './RedLinks'\nimport ReferenceCollection from './ReferenceCollection'\nimport Throttle from './Throttle'\nimport WidenImage from './WidenImage'\nimport './OrderedList.css'\n\nexport default {\n  BodySpacingTransform,\n  // todo: rename CollapseTableTransform.\n  CollapseTable,\n  CollectionUtilities,\n  CompatibilityTransform,\n  DimImagesTransform,\n  EditTransform,\n  // todo: rename Footer.ContainerTransform, Footer.LegalTransform, Footer.MenuTransform,\n  //       Footer.ReadMoreTransform.\n  LeadIntroductionTransform,\n  FooterContainer,\n  FooterLegal,\n  FooterMenu,\n  FooterReadMore,\n  FooterTransformer,\n  LazyLoadTransform,\n  LazyLoadTransformer,\n  PlatformTransform,\n  // todo: rename RedLinkTransform.\n  RedLinks,\n  ReferenceCollection,\n  ThemeTransform,\n  // todo: rename WidenImageTransform.\n  WidenImage,\n  test: {\n    ElementGeometry,\n    ElementUtilities,\n    Polyfill,\n    Throttle\n  }\n}","import './ThemeTransform.css'\nimport ElementUtilities from './ElementUtilities'\nimport Polyfill from './Polyfill'\n\n// Elements marked with these classes indicate certain ancestry constraints that are\n// difficult to describe as CSS selectors.\nconst CONSTRAINT = {\n  IMAGE_PRESUMES_WHITE_BACKGROUND: 'pagelib_theme_image_presumes_white_background',\n  DIV_DO_NOT_APPLY_BASELINE: 'pagelib_theme_div_do_not_apply_baseline'\n}\n\n// Theme to CSS classes.\nconst THEME = {\n  DEFAULT: 'pagelib_theme_default',\n  DARK: 'pagelib_theme_dark',\n  SEPIA: 'pagelib_theme_sepia',\n  BLACK: 'pagelib_theme_black'\n}\n\n/**\n * @param {!Document} document\n * @param {!string} theme\n * @return {void}\n */\nconst setTheme = (document, theme) => {\n  const html = document.querySelector('html')\n\n  // Set the new theme.\n  html.classList.add(theme)\n\n  // Clear any previous theme.\n  for (const key in THEME) {\n    if (Object.prototype.hasOwnProperty.call(THEME, key) && THEME[key] !== theme) {\n      html.classList.remove(THEME[key])\n    }\n  }\n}\n\n/**\n * Football template image filename regex.\n * https://en.wikipedia.org/wiki/Template:Football_kit/pattern_list\n * @type {RegExp}\n */\nconst footballTemplateImageFilenameRegex =\n  new RegExp('Kit_(body|socks|shorts|right_arm|left_arm)(.*).png$')\n\n/* en > Away colours > 793128975 */\n/* en > Manchester United F.C. > 793244653 */\n/**\n * Determines whether white background should be added to image.\n * @param  {!HTMLImageElement} image\n * @return {!boolean}\n */\nconst imagePresumesWhiteBackground = image => {\n  if (footballTemplateImageFilenameRegex.test(image.src)) {\n    return false\n  }\n  if (image.classList.contains('mwe-math-fallback-image-inline')) {\n    return false\n  }\n  return !ElementUtilities.closestInlineStyle(image, 'background')\n}\n\n/**\n * Annotate elements with CSS classes that can be used by CSS rules. The classes themselves are not\n * theme-dependent so classification only need only occur once after the content is loaded, not\n * every time the theme changes.\n * @param {!Element} element\n * @return {void}\n */\nconst classifyElements = element => {\n  Polyfill.querySelectorAll(element, 'img')\n    .filter(imagePresumesWhiteBackground)\n    .forEach(image => {\n      image.classList.add(CONSTRAINT.IMAGE_PRESUMES_WHITE_BACKGROUND)\n    })\n  /* en > Away colours > 793128975 */\n  /* en > Manchester United F.C. > 793244653 */\n  /* en > Pantone > 792312384 */\n  /* en > Wikipedia:Graphs_and_charts > 801754530 */\n  /* en > PepsiCo > 807406166 */\n  /* en > Lua_(programming_language) > 809310207 */\n  const selector = [\n    'div.color_swatch div',\n    'div[style*=\"position: absolute\"]',\n    'div.barbox table div[style*=\"background:\"]',\n    'div.chart div[style*=\"background-color\"]',\n    'div.chart ul li span[style*=\"background-color\"]',\n    'span.legend-color',\n    'div.mw-highlight span',\n    'code.mw-highlight span',\n    '.BrickChartTemplate div',\n    '.PieChartTemplate div',\n    '.BarChartTemplate div',\n    '.StackedBarTemplate td',\n    '.chess-board div'\n  ].join()\n  Polyfill.querySelectorAll(element, selector).forEach(element =>\n    element.classList.add(CONSTRAINT.DIV_DO_NOT_APPLY_BASELINE))\n}\n\nexport default {\n  CONSTRAINT,\n  THEME,\n  setTheme,\n  classifyElements\n}","interface Spacing {\n  top?: string\n  right?: string\n  bottom?: string\n  left?: string\n}\n\n/**\n * Sets the margins on an element via inline styles.\n * @param {!HTMLBodyElement} bodyElement the element that needs the margins adjusted.\n *   For the apps this is usually the body element.\n * @param {Spacing} values { top, right, bottom, left }\n *   Use value strings with units, e.g. '16px'. Undefined values are ignored.\n * @param callback callback function\n * @return {void}\n */\nconst setMargins = (bodyElement: HTMLBodyElement, values: Spacing, callback?: () => void): void => {\n  if (values.top !== undefined) {\n    bodyElement.style.marginTop = values.top\n  }\n  if (values.right !== undefined) {\n    bodyElement.style.marginRight = values.right\n  }\n  if (values.bottom !== undefined) {\n    bodyElement.style.marginBottom = values.bottom\n  }\n  if (values.left !== undefined) {\n    bodyElement.style.marginLeft = values.left\n  }\n  if (callback) {\n    callback()\n  }\n}\n\n/**\n * Sets padding on an element via inline styles.\n * @param {!HTMLBodyElement} bodyElement the element that needs the padding adjusted.\n *   For the apps this is usually the body element.\n * @param {Spacing} values { top, right, bottom, left }\n *   Use value strings with units, e.g. '16px'. Undefined values are ignored.\n * @param callback callback function\n * @return {void}\n */\nconst setPadding = (bodyElement: HTMLBodyElement, values: Spacing, callback?: () => void): void => {\n  if (values.top !== undefined) {\n    bodyElement.style.paddingTop = values.top\n  }\n  if (values.right !== undefined) {\n    bodyElement.style.paddingRight = values.right\n  }\n  if (values.bottom !== undefined) {\n    bodyElement.style.paddingBottom = values.bottom\n  }\n  if (values.left !== undefined) {\n    bodyElement.style.paddingLeft = values.left\n  }\n  if (callback) {\n    callback()\n  }\n}\n\nexport default {\n  setMargins,\n  setPadding\n}","const COMPATIBILITY = {\n  FILTER: 'pagelib_compatibility_filter'\n}\n\n/**\n * @param {!Document} document\n * @param {!Array.<string>} properties\n * @param {!string} value\n * @return {void}\n */\nconst isStyleSupported = (document, properties, value) => {\n  const element = document.createElement('span')\n  return properties.some(property => {\n    element.style[property] = value\n    return element.style.cssText\n  })\n}\n\n/**\n * @param {!Document} document\n * @return {void}\n */\nconst isFilterSupported = document =>\n  isStyleSupported(document, ['webkitFilter', 'filter'], 'blur(0)')\n\n/**\n * @param {!Document} document\n * @return {void}\n */\nconst enableSupport = document => {\n  const html = document.querySelector('html')\n  if (!isFilterSupported(document)) { html.classList.add(COMPATIBILITY.FILTER) }\n}\n\nexport default {\n  COMPATIBILITY,\n  enableSupport\n}","import './DimImagesTransform.css'\nconst CLASS = 'pagelib_dim_images'\n\n// todo: only require a Document\n/**\n * @param {!Window} window\n * @param {!boolean} enable\n * @return {void}\n */\nconst dim = (window, enable) => {\n  window.document.querySelector('html')\n    .classList[enable ? 'add' : 'remove'](CLASS)\n}\n\n// todo: only require a Document\n/**\n * @param {!Window} window\n * @return {boolean}\n */\nconst isDim = window => window.document.querySelector('html')\n  .classList.contains(CLASS)\n\nexport default {\n  CLASS,\n  isDim,\n  dim\n}","import './EditTransform.css'\n\nconst CLASS = {\n  SECTION_HEADER: 'pagelib_edit_section_header',\n  TITLE: 'pagelib_edit_section_title',\n  LINK_CONTAINER: 'pagelib_edit_section_link_container',\n  LINK: 'pagelib_edit_section_link',\n  PROTECTION: { UNPROTECTED: '', PROTECTED: 'page-protected', FORBIDDEN: 'no-editing' }\n}\n\nconst IDS = {\n  TITLE_DESCRIPTION: 'pagelib_edit_section_title_description',\n  ADD_TITLE_DESCRIPTION: 'pagelib_edit_section_add_title_description',\n  DIVIDER: 'pagelib_edit_section_divider',\n  PRONUNCIATION: 'pagelib_edit_section_title_pronunciation'\n}\n\nconst DATA_ATTRIBUTE = { SECTION_INDEX: 'data-id', ACTION: 'data-action' }\nconst ACTION_EDIT_SECTION = 'edit_section'\nconst ACTION_TITLE_PRONUNCIATION = 'title_pronunciation'\nconst ACTION_ADD_TITLE_DESCRIPTION = 'add_title_description'\n\n/**\n * @param {!Document} document\n * @param {!number} index The zero-based index of the section.\n * @return {!HTMLAnchorElement}\n */\nconst newEditSectionLink = (document, index) => {\n  const link = document.createElement('a')\n  link.href = ''\n  link.setAttribute(DATA_ATTRIBUTE.SECTION_INDEX, index)\n  link.setAttribute(DATA_ATTRIBUTE.ACTION, ACTION_EDIT_SECTION)\n  link.classList.add(CLASS.LINK)\n  return link\n}\n\n/**\n * @param {!Document} document\n * @param {!number} index The zero-based index of the section.\n * @return {!HTMLSpanElement}\n */\nconst newEditSectionButton = (document, index) => {\n  const container = document.createElement('span')\n  container.classList.add(CLASS.LINK_CONTAINER)\n\n  const link = newEditSectionLink(document, index)\n  container.appendChild(link)\n\n  return container\n}\n\n/**\n * As a client, you may wish to set the ID attribute.\n * @param {!Document} document\n * @param {!number} index The zero-based index of the section.\n * @param {!number} level The *one-based* header or table of contents level.\n * @param {?string} titleHTML Title of this section header.\n * @param {?boolean} showEditPencil Whether to show the \"edit\" pencil (default is true).\n * @return {!HTMLElement}\n */\nconst newEditSectionHeader = (document, index, level, titleHTML, showEditPencil = true) => {\n  const element = document.createElement('div')\n  element.className = CLASS.SECTION_HEADER\n\n  const title = document.createElement(`h${level}`)\n  title.innerHTML = titleHTML || ''\n  title.className = CLASS.TITLE\n  title.setAttribute(DATA_ATTRIBUTE.SECTION_INDEX, index)\n  element.appendChild(title)\n\n  if (showEditPencil) {\n    const button = newEditSectionButton(document, index)\n    element.appendChild(button)\n  }\n  return element\n}\n\n/**\n * Elements needed to show or add page title description.\n * @param {!Document} document\n * @param {?string} titleDescription Page title description.\n * @param {?string} addTitleDescriptionString Localized string e.g. 'Add title description'.\n * @param {?boolean} isTitleDescriptionEditable Whether title description is editable.\n * @return {?HTMLElement}\n */\nconst titleDescriptionElements = (document, titleDescription, addTitleDescriptionString,\n  isTitleDescriptionEditable) => {\n  const descriptionExists = titleDescription !== undefined && titleDescription.length > 0\n  if (descriptionExists) {\n    const p = document.createElement('p')\n    p.id = IDS.TITLE_DESCRIPTION\n    p.innerHTML = titleDescription\n    return p\n  }\n  if (isTitleDescriptionEditable) {\n    const a = document.createElement('a')\n    a.href = '#'\n    a.setAttribute(DATA_ATTRIBUTE.ACTION, ACTION_ADD_TITLE_DESCRIPTION)\n    const p = document.createElement('p')\n    p.id = IDS.ADD_TITLE_DESCRIPTION\n    p.innerHTML = addTitleDescriptionString\n    a.appendChild(p)\n    return a\n  }\n  return null\n}\n\n/**\n * Lead section header is a special case as it needs to show page title and description too,\n * and in addition to the lead edit pencil, the description can also be editable.\n * As a client, you may wish to set the ID attribute.\n * @param {!Document} document\n * @param {?string} pageDisplayTitle Page display title.\n * @param {?string} titleDescription Page title description.\n * @param {?string} addTitleDescriptionString Localized string e.g. 'Add title description'.\n * @param {?boolean} isTitleDescriptionEditable Whether title description is editable.\n * @param {?boolean} showEditPencil Whether to show the \"edit\" pencil (default is true).\n * @param {?boolean} hasPronunciation Whether to show pronunciation speaker icon (default is false).\n * @return {!HTMLElement}\n */\nconst newEditLeadSectionHeader = (document, pageDisplayTitle, titleDescription,\n  addTitleDescriptionString, isTitleDescriptionEditable, showEditPencil = true,\n  hasPronunciation = false) => {\n\n  const container = document.createDocumentFragment()\n\n  const header = newEditSectionHeader(document, 0, 1, pageDisplayTitle, showEditPencil)\n\n  if (hasPronunciation) {\n    const a = document.createElement('a')\n    a.setAttribute(DATA_ATTRIBUTE.ACTION, ACTION_TITLE_PRONUNCIATION)\n    a.id = IDS.PRONUNCIATION\n    header.querySelector('h1').appendChild(a)\n  }\n\n  container.appendChild(header)\n\n  const descriptionElements = titleDescriptionElements(document, titleDescription,\n    addTitleDescriptionString, isTitleDescriptionEditable)\n\n  if (descriptionElements) {\n    container.appendChild(descriptionElements)\n  }\n\n  const divider = document.createElement('hr')\n  divider.id = IDS.DIVIDER\n  container.appendChild(divider)\n\n  return container\n}\n\nexport default {\n  CLASS,\n  newEditSectionButton,\n  newEditSectionHeader,\n  newEditLeadSectionHeader\n}","import Polyfill from './Polyfill'\n\nconst ELEMENT_NODE = 1\n\n/**\n * Determine if paragraph is the one we are interested in.\n * @param  {!HTMLParagraphElement}  paragraphElement\n * @return {!boolean}\n */\nconst isParagraphEligible = paragraphElement => {\n  // Ignore 'coordinates' which are presently hidden. See enwiki 'Bolton Field' and 'Sharya Forest\n  // Museum Railway'. Not counting coordinates towards the eligible P min textContent length\n  // heuristic has dual effect of P's containing only coordinates being rejected, and P's containing\n  // coordinates but also other elements meeting the eligible P min textContent length being\n  // accepted.\n  const coordElement = paragraphElement.querySelector('[id=\"coordinates\"]')\n  const coordTextLength = !coordElement ? 0 : coordElement.textContent.length\n\n  // Ensures the paragraph has at least a little text. Otherwise silly things like a empty P or P\n  // which only contains a BR tag will get pulled up. See enwiki 'Hawaii', 'United States',\n  // 'Academy (educational institution)', 'Lovászpatona'\n  const minEligibleTextLength = 50\n  const hasEnoughEligibleText =\n    paragraphElement.textContent.length - coordTextLength >= minEligibleTextLength\n  return hasEnoughEligibleText\n}\n\n/**\n * Nodes we want to move up. This includes the `eligibleParagraph` and everything up to (but not\n * including) the next paragraph.\n * @param  {!HTMLParagraphElement} eligibleParagraph\n * @return {!Array.<Node>} Array of text nodes, elements, etc...\n */\nconst extractLeadIntroductionNodes = eligibleParagraph => {\n  const introNodes = []\n  let node = eligibleParagraph\n  do {\n    introNodes.push(node)\n    node = node.nextSibling\n  } while (node && !(node.nodeType === ELEMENT_NODE && node.tagName === 'P'))\n  return introNodes\n}\n\n/**\n * Locate first eligible paragraph. We don't want paragraphs from somewhere in the middle of a\n * table, so only paragraphs which are direct children of `containerID` element are considered.\n * @param  {!Document} document\n * @param  {!string} containerID ID of the section under examination.\n * @return {?HTMLParagraphElement}\n */\nconst getEligibleParagraph = (document, containerID) =>\n  Polyfill.querySelectorAll(document, `#${containerID} > p`).find(isParagraphEligible)\n\n/**\n * Instead of moving the infobox down beneath the first P tag, move the first eligible P tag\n * (and related elements) up. This ensures some text will appear above infoboxes, tables, images\n * etc. This method does not do a 'mainpage' check - do so before calling it.\n * @param  {!Document} document\n * @param  {!string} containerID ID of the section under examination.\n * @param  {?Element} afterElement Element after which paragraph will be moved. If not specified\n * paragraph will be move to top of `containerID` element.\n * @return {void}\n */\nconst moveLeadIntroductionUp = (document, containerID, afterElement) => {\n  const eligibleParagraph = getEligibleParagraph(document, containerID)\n  if (!eligibleParagraph) {\n    return\n  }\n\n  // A light-weight fragment to hold everything we want to move up.\n  const fragment = document.createDocumentFragment()\n  // DocumentFragment's `appendChild` attaches the element to the fragment AND removes it from DOM.\n  extractLeadIntroductionNodes(eligibleParagraph).forEach(element => fragment.appendChild(element))\n\n  const container = document.getElementById(containerID)\n  const insertBeforeThisElement = !afterElement ? container.firstChild : afterElement.nextSibling\n\n  // Attach the fragment just before `insertBeforeThisElement`. Conveniently, `insertBefore` on a\n  // DocumentFragment inserts 'the children of the fragment, not the fragment itself.', so no\n  // unnecessary container element is introduced.\n  // https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\n  container.insertBefore(fragment, insertBeforeThisElement)\n}\n\nexport default {\n  moveLeadIntroductionUp,\n  test: {\n    isParagraphEligible,\n    extractLeadIntroductionNodes,\n    getEligibleParagraph\n  }\n}","import './FooterMenu.css'\nimport CollectionUtilities from './CollectionUtilities'\n\n/**\n * @typedef {function} FooterMenuItemClickCallback\n * @param {!Array.<string>} payload Important - should return empty array if no payload strings.\n * @return {void}\n */\n\n/**\n * @typedef {number} MenuItemType\n */\n\n/**\n * Type representing kinds of menu items.\n * @enum {MenuItemType}\n */\nconst MenuItemType = {\n  languages: 1,\n  lastEdited: 2,\n  pageIssues: 3,\n  disambiguation: 4,\n  coordinate: 5,\n  talkPage: 6\n}\n\n/**\n * Menu item model.\n */\nclass MenuItem {\n  /**\n   * MenuItem constructor.\n   * @param {!string} title\n   * @param {?string} subtitle\n   * @param {!MenuItemType} itemType\n   * @param {FooterMenuItemClickCallback} clickHandler\n   */\n  constructor(title, subtitle, itemType, clickHandler) {\n    this.title = title\n    this.subtitle = subtitle\n    this.itemType = itemType\n    this.clickHandler = clickHandler\n    this.payload = []\n  }\n\n  /**\n   * Returns icon CSS class for this menu item based on its type.\n   * @return {!string}\n   */\n  iconClass() {\n    switch (this.itemType) {\n    case MenuItemType.languages:\n      return 'pagelib_footer_menu_icon_languages'\n    case MenuItemType.lastEdited:\n      return 'pagelib_footer_menu_icon_last_edited'\n    case MenuItemType.talkPage:\n      return 'pagelib_footer_menu_icon_talk_page'\n    case MenuItemType.pageIssues:\n      return 'pagelib_footer_menu_icon_page_issues'\n    case MenuItemType.disambiguation:\n      return 'pagelib_footer_menu_icon_disambiguation'\n    case MenuItemType.coordinate:\n      return 'pagelib_footer_menu_icon_coordinate'\n    default:\n      return ''\n    }\n  }\n\n  /**\n   * Extracts array of page issues, disambiguation titles, etc from element.\n   * @typedef {function} PayloadExtractor\n   * @param {!Document} document\n   * @param {?Element} element\n   * @return {!Array.<string>} Return empty array if nothing is extracted\n   */\n\n  /**\n   * Returns reference to function for extracting payload when this menu item is tapped.\n   * @return {?PayloadExtractor}\n   */\n  payloadExtractor() {\n    switch (this.itemType) {\n    case MenuItemType.pageIssues:\n      return CollectionUtilities.collectPageIssuesText\n    case MenuItemType.disambiguation:\n      // Adapt 'collectDisambiguationTitles' method signature to conform to PayloadExtractor type.\n      return (_, element) => CollectionUtilities.collectDisambiguationTitles(element)\n    default:\n      return undefined\n    }\n  }\n}\n\n/**\n * Makes document fragment for a menu item.\n * @param {!MenuItem} menuItem\n * @param {!Document} document\n * @return {!DocumentFragment}\n */\nconst documentFragmentForMenuItem = (menuItem, document) => {\n  const item = document.createElement('div')\n  item.className = 'pagelib_footer_menu_item'\n\n  const containerAnchor = document.createElement('a')\n  containerAnchor.addEventListener('click', () => {\n    menuItem.clickHandler(menuItem.payload)\n  })\n\n  item.appendChild(containerAnchor)\n\n  if (menuItem.title) {\n    const title = document.createElement('div')\n    title.className = 'pagelib_footer_menu_item_title'\n    title.innerText = menuItem.title\n    containerAnchor.title = menuItem.title\n    containerAnchor.appendChild(title)\n  }\n\n  if (menuItem.subtitle) {\n    const subtitle = document.createElement('div')\n    subtitle.className = 'pagelib_footer_menu_item_subtitle'\n    subtitle.innerText = menuItem.subtitle\n    containerAnchor.appendChild(subtitle)\n  }\n\n  const iconClass = menuItem.iconClass()\n  if (iconClass) {\n    item.classList.add(iconClass)\n  }\n\n  return document.createDocumentFragment().appendChild(item)\n}\n\n/**\n * Adds a MenuItem to a container.\n * @param {!MenuItem} menuItem\n * @param {!string} containerID\n * @param {!Document} document\n * @return {void}\n */\nconst addItem = (menuItem, containerID, document) => {\n  document.getElementById(containerID).appendChild(\n    documentFragmentForMenuItem(menuItem, document)\n  )\n}\n\n/**\n * Conditionally adds a MenuItem to a container.\n * @param {!string} title\n * @param {!string} subtitle\n * @param {!MenuItemType} itemType\n * @param {!string} containerID\n * @param {FooterMenuItemClickCallback} clickHandler\n * @param {!Document} document\n * @return {void}\n */\nconst maybeAddItem = (title, subtitle, itemType, containerID, clickHandler, document) => {\n  const item = new MenuItem(title, subtitle, itemType, clickHandler)\n\n  // Items are not added if they have a payload extractor which fails to extract anything.\n  const extractor = item.payloadExtractor()\n  if (extractor) {\n    item.payload = extractor(document, document.querySelector('div#content_block_0'))\n    if (item.payload.length === 0) {\n      return\n    }\n  }\n\n  addItem(item, containerID, document)\n}\n\n/**\n * Sets heading element string.\n * @param {!string} headingString\n * @param {!string} headingID\n * @param {!Document} document\n * @return {void}\n */\nconst setHeading = (headingString, headingID, document) => {\n  const headingElement = document.getElementById(headingID)\n  headingElement.innerText = headingString\n  headingElement.title = headingString\n}\n\nexport default {\n  MenuItemType, // todo: rename to just ItemType?\n  setHeading,\n  maybeAddItem\n}","import FooterContainer from './FooterContainer'\nimport FooterLegal from './FooterLegal'\nimport FooterReadMore from './FooterReadMore'\nimport Throttle from './Throttle'\n\nconst RESIZE_EVENT_TYPE = 'resize'\nconst RESIZE_LISTENER_THROTTLE_PERIOD_MILLISECONDS = 100\n\nconst ID_CONTAINER = 'pagelib_footer_container'\nconst ID_LEGAL_CONTAINER = 'pagelib_footer_container_legal'\n\nconst ID_READ_MORE_CONTAINER = 'pagelib_footer_container_readmore_pages'\nconst ID_READ_MORE_HEADER = 'pagelib_footer_container_readmore_heading'\n\n/** */\nexport default class {\n  /** */\n  constructor() {\n    this._resizeListener = undefined\n  }\n\n  /**\n   * @param {!Window} window\n   * @param {!Element} container\n   * @param {!string} baseURL\n   * @param {!string} title\n   * @param {!string} readMoreHeader\n   * @param {!number} readMoreLimit\n   * @param {!string} license\n   * @param {!string} licenseSubstitutionString\n   * @param {!FooterLegalClickCallback} licenseLinkClickHandler\n   * @param {!string} viewInBrowserString\n   * @param {!FooterBrowserClickCallback} browserLinkClickHandler\n   * @param {!TitlesShownHandler} titlesShownHandler\n   * @param {!SaveButtonClickHandler} saveButtonClickHandler\n   * @return {void}\n   */\n  add(window, container, baseURL, title, readMoreHeader, readMoreLimit, license,\n    licenseSubstitutionString, licenseLinkClickHandler, viewInBrowserString,\n    browserLinkClickHandler, titlesShownHandler,\n    saveButtonClickHandler) {\n    this.remove(window)\n    container.appendChild(FooterContainer.containerFragment(window.document))\n\n    FooterLegal.add(window.document, license, licenseSubstitutionString, ID_LEGAL_CONTAINER,\n      licenseLinkClickHandler, viewInBrowserString, browserLinkClickHandler)\n\n    FooterReadMore.setHeading(readMoreHeader, ID_READ_MORE_HEADER, window.document)\n    FooterReadMore.add(title, readMoreLimit, ID_READ_MORE_CONTAINER, baseURL,\n      saveButtonClickHandler, titles => {\n        FooterContainer.updateBottomPaddingToAllowReadMoreToScrollToTop(window)\n        titlesShownHandler(titles)\n      }, window.document)\n\n    this._resizeListener = Throttle.wrap(window, RESIZE_LISTENER_THROTTLE_PERIOD_MILLISECONDS,\n      () => FooterContainer.updateBottomPaddingToAllowReadMoreToScrollToTop(window))\n    window.addEventListener(RESIZE_EVENT_TYPE, this._resizeListener)\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {void}\n   */\n  remove(window) {\n    if (this._resizeListener) {\n      window.removeEventListener(RESIZE_EVENT_TYPE, this._resizeListener)\n      this._resizeListener.cancel()\n      this._resizeListener = undefined\n    }\n\n    const footer = window.document.getElementById(ID_CONTAINER)\n    if (footer) {\n      // todo: support recycling.\n      footer.parentNode.removeChild(footer)\n    }\n  }\n}","import CollapseTable from './CollapseTable'\nimport ElementUtilities from './ElementUtilities'\nimport LazyLoadTransform from './LazyLoadTransform'\nimport Throttle from './Throttle'\n\nconst EVENT_TYPES = ['scroll', 'resize', CollapseTable.SECTION_TOGGLED_EVENT_TYPE]\nconst THROTTLE_PERIOD_MILLISECONDS = 100\n\n/**\n * This class subscribes to key page events, applying lazy load transforms or inversions as\n * applicable. It has external dependencies on the section-toggled custom event and the following\n * standard browser events: resize, scroll.\n */\nexport default class {\n  /**\n   * @param {!Window} window\n   * @param {!number} loadDistanceMultiplier Images within this multiple of the screen height are\n   *                                         loaded in either direction.\n   */\n  constructor(window, loadDistanceMultiplier) {\n    this._window = window\n    this._loadDistanceMultiplier = loadDistanceMultiplier\n\n    this._placeholders = []\n    this._registered = false\n    this._throttledLoadPlaceholders = Throttle.wrap(window, THROTTLE_PERIOD_MILLISECONDS,\n      () => this._loadPlaceholders())\n  }\n\n  /**\n   * Convert images with placeholders. Calling this function may register this instance to listen to\n   * page events.\n   * @param {!Element} element\n   * @return {void}\n   */\n  convertImagesToPlaceholders(element) {\n    const images = LazyLoadTransform.queryLazyLoadableImages(element)\n    const placeholders = LazyLoadTransform.convertImagesToPlaceholders(this._window.document,\n      images)\n    this._placeholders = this._placeholders.concat(placeholders)\n    this._register()\n  }\n\n  /**\n   * Searches for existing placeholders in the DOM Document.\n   * This is an alternative to #convertImagesToPlaceholders if that was already done server-side.\n   * @param {!Element} element root element to start searching for placeholders\n   * @return {void}\n   */\n  collectExistingPlaceholders(element) {\n    const placeholders\n      = Array.from(element.querySelectorAll(`.${LazyLoadTransform.PLACEHOLDER_CLASS}`))\n    this._placeholders = this._placeholders.concat(placeholders)\n    this._register()\n  }\n\n  /**\n   * Manually trigger a load images check. Calling this function may deregister this instance from\n   * listening to page events.\n   * @return {void}\n   */\n  loadPlaceholders() { this._throttledLoadPlaceholders() }\n\n  /**\n   * This method may be safely called even when already unregistered. This function clears the\n   * record of placeholders.\n   * @return {void}\n   */\n  deregister() {\n    if (!this._registered) { return }\n\n    EVENT_TYPES.forEach(eventType =>\n      this._window.removeEventListener(eventType, this._throttledLoadPlaceholders))\n    this._throttledLoadPlaceholders.reset()\n\n    this._placeholders = []\n    this._registered = false\n  }\n\n  /**\n   * This method may be safely called even when already registered.\n   * @return {void}\n   */\n  _register() {\n    if (this._registered || !this._placeholders.length) { return }\n    this._registered = true\n\n    EVENT_TYPES.forEach(eventType =>\n      this._window.addEventListener(eventType, this._throttledLoadPlaceholders))\n  }\n\n  /** @return {void} */\n  _loadPlaceholders() {\n    this._placeholders = this._placeholders.filter(placeholder => {\n      let pending = true\n      if (this._isPlaceholderEligibleToLoad(placeholder)) {\n        LazyLoadTransform.loadPlaceholder(this._window.document, placeholder)\n        pending = false\n      }\n      return pending\n    })\n\n    if (this._placeholders.length === 0) {\n      this.deregister()\n    }\n  }\n\n  /**\n   * @param {!HTMLSpanElement} placeholder\n   * @return {!boolean}\n   */\n  _isPlaceholderEligibleToLoad(placeholder) {\n    return ElementUtilities.isVisible(placeholder)\n      && this._isPlaceholderWithinLoadDistance(placeholder)\n  }\n\n  /**\n   * @param {!HTMLSpanElement} placeholder\n   * @return {!boolean}\n   */\n  _isPlaceholderWithinLoadDistance(placeholder) {\n    const bounds = placeholder.getBoundingClientRect()\n    const range = this._window.innerHeight * this._loadDistanceMultiplier\n    return !(bounds.top > range || bounds.bottom < -range)\n  }\n}","const CLASS = { ANDROID: 'pagelib_platform_android', IOS:  'pagelib_platform_ios' }\n\n// Regular expressions from https://phabricator.wikimedia.org/diffusion/EMFR/browse/master/resources/mobile.startup/browser.js;c89f371ea9e789d7e1a827ddfec7c8028a549c12.\n/**\n * @param {!Window} window\n * @return {!boolean} true if the user agent is Android, false otherwise.\n */\nconst isAndroid = window => /android/i.test(window.navigator.userAgent)\n\n/**\n * @param {!Window} window\n * @return {!boolean} true if the user agent is iOS, false otherwise.\n */\nconst isIOs = window => /ipad|iphone|ipod/i.test(window.navigator.userAgent)\n\n/**\n * @param {!Window} window\n * @return {void}\n */\nconst classify = window => {\n  const html = window.document.querySelector('html')\n  if (isAndroid(window)) { html.classList.add(CLASS.ANDROID) }\n  if (isIOs(window)) { html.classList.add(CLASS.IOS) }\n}\n\nexport default {\n  CLASS,\n  classify\n}","import Polyfill from './Polyfill'\n\n/**\n * Configures span to be suitable replacement for red link anchor.\n * @param {!HTMLSpanElement} span The span element to configure as anchor replacement.\n * @param {!HTMLAnchorElement} anchor The anchor element being replaced.\n * @return {void}\n */\nconst configureRedLinkTemplate = (span, anchor) => {\n  span.innerHTML = anchor.innerHTML\n  span.setAttribute('class', anchor.getAttribute('class'))\n}\n\n/**\n * Finds red links in a document.\n * @param {!Document} content Document in which to seek red links.\n * @return {!Array.<HTMLAnchorElement>} Array of zero or more red link anchors.\n */\nconst redLinkAnchorsInDocument = content => Polyfill.querySelectorAll(content, 'a.new')\n\n/**\n * Makes span to be used as cloning template for red link anchor replacements.\n * @param  {!Document} document Document to use to create span element.\n * @return {!HTMLSpanElement} Span element suitable for use as template for red link anchor\n * replacements.\n */\nconst newRedLinkTemplate = document => document.createElement('span')\n\n/**\n * Replaces anchor with span.\n * @param  {!HTMLAnchorElement} anchor Anchor element.\n * @param  {!HTMLSpanElement} span Span element.\n * @return {void}\n */\nconst replaceAnchorWithSpan = (anchor, span) => anchor.parentNode.replaceChild(span, anchor)\n\n/**\n * Hides red link anchors in a document so they are unclickable and unfocusable.\n * @param {!Document} document Document in which to hide red links.\n * @return {void}\n */\nconst hideRedLinks = document => {\n  const spanTemplate = newRedLinkTemplate(document)\n  redLinkAnchorsInDocument(document)\n    .forEach(redLink => {\n      const span = spanTemplate.cloneNode(false)\n      configureRedLinkTemplate(span, redLink)\n      replaceAnchorWithSpan(redLink, span)\n    })\n}\n\nexport default {\n  hideRedLinks,\n  test: {\n    configureRedLinkTemplate,\n    redLinkAnchorsInDocument,\n    newRedLinkTemplate,\n    replaceAnchorWithSpan\n  }\n}","import ElementUtilities from './ElementUtilities'\nimport NodeUtilities from './NodeUtilities'\nimport Polyfill from './Polyfill'\n\nconst REFERENCE_SELECTOR = '.reference, .mw-ref'\nconst CITE_HASH_PREFIX = '#cite_note'\n\n/**\n * Is Citation.\n * @param {!string} href\n * @return {!boolean}\n */\nconst isCitation = href => href.indexOf(CITE_HASH_PREFIX) > -1\n\n/**\n * Determines if node is a text node containing only whitespace.\n * @param {!Node} node\n * @return {!boolean}\n */\nconst isWhitespaceTextNode = node =>\n  Boolean(node) && node.nodeType === Node.TEXT_NODE && Boolean(node.textContent.match(/^\\s+$/))\n\n/**\n * Checks if element has a child anchor with a citation link.\n * @param {!Element} element\n * @return {!boolean}\n */\nconst hasCitationLink = element => {\n  const anchor = element.querySelector('a')\n  return anchor && isCitation(anchor.hash)\n}\n\n/**\n * Get the reference text container.\n * @param {!Document} document\n * @param {!Element} source\n * @return {?HTMLElement}\n */\nconst getRefTextContainer = (document, source) => {\n  const refTextContainerID = source.querySelector('A').getAttribute('href').slice(1)\n  const refTextContainer = document.getElementById(refTextContainerID)\n    || document.getElementById(decodeURIComponent(refTextContainerID))\n\n  return refTextContainer\n}\n\n/**\n * Extract reference text free of backlinks.\n * @param {!Document} document\n * @param {!Element} source\n * @return {!string}\n */\nconst collectRefText = (document, source) => {\n  const refTextContainer = getRefTextContainer(document, source)\n  if (!refTextContainer) {\n    return ''\n  }\n\n  // Clone what we're interested in into a frag so we can easily\n  // remove things without consequence to the 'live' document.\n  const frag = document.createDocumentFragment()\n  const fragDiv = document.createElement('div')\n  frag.appendChild(fragDiv)\n  // eslint-disable-next-line require-jsdoc\n  const cloneNodeIntoFragmentDiv = node => fragDiv.appendChild(node.cloneNode(true))\n  Array.prototype.slice.call(refTextContainer.childNodes)\n    .filter(NodeUtilities.isNodeTypeElementOrText)\n    .forEach(cloneNodeIntoFragmentDiv)\n\n  const removalSelector = 'link, style, sup[id^=cite_ref], .mw-cite-backlink'\n  Polyfill.querySelectorAll(fragDiv, removalSelector)\n    .forEach(node => node.remove())\n\n  return fragDiv.innerHTML.trim()\n}\n\n/**\n * Get closest element to node which has class `reference`. If node itself has class `reference`\n * returns the node.\n * @param {!Node} sourceNode\n * @return {?HTMLElement}\n */\nconst closestReferenceClassElement = sourceNode => {\n  if (Polyfill.matchesSelector(sourceNode, REFERENCE_SELECTOR)) {\n    return sourceNode\n  }\n  return ElementUtilities.findClosestAncestor(sourceNode, REFERENCE_SELECTOR)\n}\n\n/**\n * Reference item model.\n */\nclass ReferenceItem {\n  /**\n   * ReferenceItem construtor.\n   * @param {!string} id\n   * @param {!DOMRect} rect\n   * @param {?string} text\n   * @param {?string} html\n   */\n  constructor(id, rect, text, html) {\n    this.id = id\n    this.rect = rect\n    this.text = text\n    this.html = html\n  }\n}\n\n/**\n * Converts node to ReferenceItem.\n * @param {!Document} document\n * @param {!Node} node\n * @return {!ReferenceItem}\n */\nconst referenceItemForNode = (document, node) => new ReferenceItem(\n  closestReferenceClassElement(node).id,\n  node.getBoundingClientRect(),\n  node.textContent,\n  collectRefText(document, node)\n)\n\n/**\n * Container for nearby references including the index of the selected reference.\n */\nclass NearbyReferences {\n/**\n * @param {!number} selectedIndex\n * @param {!Array.<ReferenceItem>} referencesGroup\n * @return {!NearbyReferences}\n */\n  constructor(selectedIndex, referencesGroup) {\n    this.selectedIndex = selectedIndex\n    this.referencesGroup = referencesGroup\n  }\n}\n\n/**\n * Closure around a node for getting previous or next sibling.\n *\n * @typedef SiblingGetter\n * @param {!Node} node\n * @return {?Node}\n */\n\n/**\n  * Closure around `collectedNodes` for collecting reference nodes.\n  *\n  * @typedef Collector\n  * @param {!Node} node\n  * @return {void}\n  */\n\n/**\n * Get adjacent non-whitespace node.\n * @param {!Node} node\n * @param {!SiblingGetter} siblingGetter\n * @return {?Node}\n */\nconst adjacentNonWhitespaceNode = (node, siblingGetter) => {\n  let currentNode = node\n  do {\n    currentNode = siblingGetter(currentNode)\n  } while (isWhitespaceTextNode(currentNode))\n  return currentNode\n}\n\n/**\n * Collect adjacent reference nodes. The starting node is not collected.\n * @param {!Node} node\n * @param {!SiblingGetter} siblingGetter\n * @param {!Collector} nodeCollector\n * @return {void}\n */\nconst collectAdjacentReferenceNodes = (node, siblingGetter, nodeCollector) => {\n  let currentNode = node\n  while (true) {\n    currentNode = adjacentNonWhitespaceNode(currentNode, siblingGetter)\n    if (!currentNode || currentNode.nodeType !== Node.ELEMENT_NODE\n        || !hasCitationLink(currentNode)) {\n      break\n    }\n    nodeCollector(currentNode)\n  }\n}\n\n/* eslint-disable valid-jsdoc */\n/** @type {SiblingGetter} */\nconst prevSiblingGetter = node => node.previousSibling\n\n/** @type {SiblingGetter} */\nconst nextSiblingGetter = node => node.nextSibling\n/* eslint-enable valid-jsdoc */\n\n/**\n * Collect nearby reference nodes.\n * @param {!Node} sourceNode\n * @return {!Array.<Node>}\n */\nconst collectNearbyReferenceNodes = sourceNode => {\n  const collectedNodes = [sourceNode]\n\n  /* eslint-disable require-jsdoc */\n  // These are `Collector`s.\n  const collectedNodesUnshifter = node => collectedNodes.unshift(node)\n  const collectedNodesPusher = node => collectedNodes.push(node)\n  /* eslint-enable require-jsdoc */\n\n  collectAdjacentReferenceNodes(sourceNode, prevSiblingGetter, collectedNodesUnshifter)\n  collectAdjacentReferenceNodes(sourceNode, nextSiblingGetter, collectedNodesPusher)\n\n  return collectedNodes\n}\n\n/**\n * Collect nearby references.\n * @param {!Document} document\n * @param {!Node} sourceNode\n * @return {!NearbyReferences}\n */\nconst collectNearbyReferences = (document, sourceNode) => {\n  const sourceNodeParent = sourceNode.parentElement\n  const referenceNodes = collectNearbyReferenceNodes(sourceNodeParent)\n  const selectedIndex = referenceNodes.indexOf(sourceNodeParent)\n  const referencesGroup = referenceNodes.map(node => referenceItemForNode(document, node))\n  return new NearbyReferences(selectedIndex, referencesGroup)\n}\n\nexport default {\n  collectNearbyReferences,\n  isCitation,\n  test: {\n    adjacentNonWhitespaceNode,\n    closestReferenceClassElement,\n    collectAdjacentReferenceNodes,\n    collectNearbyReferenceNodes,\n    collectRefText,\n    getRefTextContainer,\n    hasCitationLink,\n    isWhitespaceTextNode,\n    nextSiblingGetter,\n    prevSiblingGetter\n  }\n}","import './WidenImage.css'\nimport elementUtilities from './ElementUtilities'\n\n/**\n * Gets array of ancestors of element which need widening.\n * @param  {!HTMLElement} element\n * @return {!Array.<HTMLElement>} Zero length array is returned if no elements should be widened.\n */\nconst ancestorsToWiden = element => {\n  const widenThese = []\n  let el = element\n  while (el.parentElement) {\n    el = el.parentElement\n    // No need to walk above 'content_block'.\n    if (el.classList.contains('content_block')) {\n      break\n    }\n    widenThese.push(el)\n  }\n  return widenThese\n}\n\n/**\n * Sets style value.\n * @param {!CSSStyleDeclaration} style\n * @param {!string} key\n * @param {*} value\n * @return {void}\n */\nconst updateStyleValue = (style, key, value) => {\n  style[key] = value\n}\n\n/**\n * Sets style value only if value for given key already exists.\n * @param {CSSStyleDeclaration} style\n * @param {!string} key\n * @param {*} value\n * @return {void}\n */\nconst updateExistingStyleValue = (style, key, value) => {\n  const valueExists = Boolean(style[key])\n  if (valueExists) {\n    updateStyleValue(style, key, value)\n  }\n}\n\n/**\n * Image widening CSS key/value pairs.\n * @type {Object}\n */\nconst styleWideningKeysAndValues = {\n  width: '100%',\n  height: 'auto',\n  maxWidth: '100%',\n  float: 'none'\n}\n\n/**\n * Perform widening on an element. Certain style properties are updated, but only if existing values\n * for these properties already exist.\n * @param  {!HTMLElement} element\n * @return {void}\n */\nconst widenElementByUpdatingExistingStyles = element => {\n  Object.keys(styleWideningKeysAndValues)\n    .forEach(key => updateExistingStyleValue(element.style, key, styleWideningKeysAndValues[key]))\n}\n\n/**\n * Perform widening on an element.\n * @param  {!HTMLElement} element\n * @return {void}\n */\nconst widenElementByUpdatingStyles = element => {\n  Object.keys(styleWideningKeysAndValues)\n    .forEach(key => updateStyleValue(element.style, key, styleWideningKeysAndValues[key]))\n}\n\n/**\n * To widen an image element a css class called 'pagelib_widen_image_override' is applied to the\n * image element, however, ancestors of the image element can prevent the widening from taking\n * effect. This method makes minimal adjustments to ancestors of the image element being widened so\n * the image widening can take effect.\n * @param  {!HTMLElement} element Element whose ancestors will be widened\n * @return {void}\n */\nconst widenAncestors = element => {\n  ancestorsToWiden(element).forEach(widenElementByUpdatingExistingStyles)\n\n  // Without forcing widening on the parent anchor, lazy image loading placeholders\n  // aren't correctly widened on iOS for some reason.\n  const parentAnchor = elementUtilities.findClosestAncestor(element, 'a.image')\n  if (parentAnchor) {\n    widenElementByUpdatingStyles(parentAnchor)\n  }\n}\n\n/**\n * Some images should not be widened. This method makes that determination.\n * @param  {!HTMLElement} image   The image in question\n * @return {boolean}              Whether 'image' should be widened\n */\nconst shouldWidenImage = image => {\n  // Images within a \"<div class='noresize'>...</div>\" should not be widened.\n  // Example exhibiting links overlaying such an image:\n  //   'enwiki > Counties of England > Scope and structure > Local government'\n  if (elementUtilities.findClosestAncestor(image, \"[class*='noresize']\")) {\n    return false\n  }\n\n  // Side-by-side images should not be widened. Often their captions mention 'left' and 'right', so\n  // we don't want to widen these as doing so would stack them vertically.\n  // Examples exhibiting side-by-side images:\n  //    'enwiki > Cold Comfort (Inside No. 9) > Casting'\n  //    'enwiki > Vincent van Gogh > Letters'\n  if (elementUtilities.findClosestAncestor(image, \"div[class*='tsingle']\")) {\n    return false\n  }\n\n  // Imagemaps, which expect images to be specific sizes, should not be widened.\n  // Examples can be found on 'enwiki > Kingdom (biology)':\n  //    - first non lead image is an image map\n  //    - 'Three domains of life > Phylogenetic Tree of Life' image is an image map\n  if (image.hasAttribute('usemap')) {\n    return false\n  }\n\n  // Images in tables should not be widened - doing so can horribly mess up table layout.\n  if (elementUtilities.isNestedInTable(image)) {\n    return false\n  }\n\n  // Widening absolutely positioned images can cause overlapping with adjacent text.\n  // Example can be found on `ja > 今治城 > 71804195`, which has a Mapplot template which outputs\n  // an image nested in an absolutely positioned div.\n  if (elementUtilities.closestInlineStyle(image, 'position', 'absolute')) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Widens the image.\n * @param  {!HTMLElement} image   The image in question\n * @return {void}\n */\nconst widenImage = image => {\n  widenAncestors(image)\n  image.classList.add('pagelib_widen_image_override')\n}\n\n/**\n * Widens an image if the image is found to be fit for widening.\n * @param  {!HTMLElement} image   The image in question\n * @return {boolean}              Whether or not 'image' was widened\n */\nconst maybeWidenImage = image => {\n  if (shouldWidenImage(image)) {\n    widenImage(image)\n    return true\n  }\n  return false\n}\n\nexport default {\n  maybeWidenImage,\n  test: {\n    ancestorsToWiden,\n    shouldWidenImage,\n    updateExistingStyleValue,\n    widenAncestors,\n    widenElementByUpdatingExistingStyles,\n    widenElementByUpdatingStyles\n  }\n}"],"sourceRoot":""}