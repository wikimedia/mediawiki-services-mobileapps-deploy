{"version":3,"sources":["webpack://pagelib/webpack/universalModuleDefinition","webpack://pagelib/webpack/bootstrap","webpack://pagelib/./src/transform/Polyfill.js","webpack://pagelib/./src/transform/ElementUtilities.js","webpack://pagelib/./src/transform/Throttle.js","webpack://pagelib/./src/transform/LazyLoadTransform.ts","webpack://pagelib/./src/transform/FooterReadMore.js","webpack://pagelib/./src/transform/FooterLegal.js","webpack://pagelib/./src/transform/FooterContainer.js","webpack://pagelib/./src/transform/ElementGeometry.js","webpack://pagelib/./src/transform/CollectionUtilities.js","webpack://pagelib/./src/transform/NodeUtilities.js","webpack://pagelib/./src/transform/CollapseTable.js","webpack://pagelib/./src/transform/WidenImage.js","webpack://pagelib/./src/transform/ReferenceCollection.js","webpack://pagelib/./src/transform/RedLinks.js","webpack://pagelib/./src/transform/PlatformTransform.js","webpack://pagelib/./src/transform/LazyLoadTransformer.js","webpack://pagelib/./src/transform/FooterTransformer.js","webpack://pagelib/./src/transform/FooterMenu.js","webpack://pagelib/./src/transform/LeadIntroductionTransform.js","webpack://pagelib/./src/transform/EditTransform.js","webpack://pagelib/./src/transform/DimImagesTransform.js","webpack://pagelib/./src/transform/CompatibilityTransform.js","webpack://pagelib/./src/transform/ThemeTransform.js","webpack://pagelib/./src/transform/index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CustomEvent","window","type","parameters","arguments","length","undefined","bubbles","cancelable","detail","event","document","createEvent","initCustomEvent","matchesSelector","el","selector","matches","webkitMatchesSelector","querySelectorAll","element","Array","slice","_Polyfill","findClosestAncestor","parentElement","Polyfill","isNestedInTable","Boolean","closestInlineStyle","style","isVisible","offsetWidth","offsetHeight","getClientRects","copyAttributesToDataAttributes","source","destination","attributes","filter","attribute","hasAttribute","forEach","setAttribute","getAttribute","copyDataAttributesToAttributes","Throttle","period","funktion","_classCallCheck","_window","_period","_function","_context","_arguments","_result","_timeout","_timestamp","throttle","throttled","queue","result","pending","delay","cancel","reset","context","args","_this","setTimeout","Date","now","apply","Math","max","clearTimeout","ElementGeometry","default","ElementUtilities","COPY_ATTRIBUTES","UNIT_TO_MINIMUM_LAZY_LOAD_SIZE","px","ex","em","PLACEHOLDER_CLASS","queryLazyLoadableImages","image","geometry","from","width","height","minWidth","widthUnit","Infinity","minHeight","heightUnit","widthValue","heightValue","isLazyLoadable","convertImagesToPlaceholders","images","map","placeholder","createElement","classList","add","setProperty","spacing","ratio","appendChild","parentNode","replaceChild","convertImageToPlaceholder","loadPlaceholder","remove","retryListener","stopPropagation","preventDefault","addEventListener","removeEventListener","once","safelyRemoveEnclosures","string","opener","closer","enclosureRegex","RegExp","counter","stringToClean","previousString","replace","cleanExtract","ReadMorePage","title","displayTitle","thumbnail","description","extract","showReadMorePages","pages","containerID","saveButtonClickHandler","titlesShownHandler","shownTitles","container","getElementById","page","index","push","pageFragment","readMorePage","outerAnchorContainer","id","className","backgroundImage","innerDivContainer","href","encodeURI","titleToShow","innerHTML","descriptionEl","saveButton","createDocumentFragment","documentFragmentForReadMorePage","pageprops","displaytitle","readMoreQueryURL","count","baseURL","action","format","formatversion","prop","generator","gsrlimit","gsrprop","gsrsearch","gsrwhat","exchars","exintro","exlimit","explaintext","pilicense","pilimit","piprop","pithumbsize","queryParameters","keys","encodeURIComponent","join","fetchErrorHandler","statusText","console","log","showReadMorePagesHandler","xhr","XMLHttpRequest","open","onload","readyState","DONE","status","JSON","parse","responseText","query","onerror","send","error","toString","fetchReadMore","setHeading","headingString","headingID","headingElement","innerText","updateSaveButtonForTitle","text","isSaved","button","unfilledClass","filledClass","updateSaveButtonBookmarkIcon","test","content","licenseString","licenseSubstitutionString","licenseLinkClickHandler","viewInBrowserString","browserLinkClickHandler","querySelector","licenseStringHalves","split","containerFragment","containerDiv","isContainerAttached","updateBottomPaddingToAllowReadMoreToScrollToTop","div","currentPadding","parseInt","paddingBottom","clientHeight","newPadding","innerHeight","updateLeftAndRightMargin","margin","marginLeft","marginRight","rightOrLeft","dir","backgroundPosition","paddingLeft","paddingRight","DimensionUnit","unit","_value","Number","_unit","getPropertyValue","fromStyle","match","isNaN","_width","_height","fromElement","NaN","collectPageIssues","tables","fragment","table","cloneNode","collectDisambiguationTitles","collectDisambiguationHTML","collectPageIssuesHTML","collectPageIssuesText","textContent","trim","isNodeTypeElementOrText","node","nodeType","Node","ELEMENT_NODE","TEXT_NODE","isHeaderEligible","header","childNodes","isHeaderTextEligible","headerText","firstWordFromString","isNodeTextContentSimilarToPageTitle","pageTitle","firstPageTitleWord","firstNodeTextContentWord","toLowerCase","stringWithNormalizedWhitespace","isNodeBreakElement","tagName","replaceNodeWithBreakingSpaceTextNode","createTextNode","extractEligibleHeaderText","fragmentHeader","childNodesArray","NodeUtilities","elementScopeComparator","a","b","aHasScope","bHasScope","getTableHeaderTextArray","headerTextArray","headers","sort","indexOf","toggleCollapsedForContainer","trigger","footerDivClickCallback","children","footer","caption","collapsed","display","visibility","toggleCollapseClickCallback","shouldTableBeCollapsed","blacklistIntersects","some","clazz","contains","isInfobox","newCollapsedHeaderDiv","newCollapsedFooterDiv","newCaptionFragment","strong","span","adjustTables","isMainPage","isInitiallyCollapsed","infoboxTitle","otherTitle","footerTitle","_loop","captionFragment","insertBefore","removeChild","marginTop","marginBottom","collapsedHeaderDiv","collapsedFooterDiv","dispatchSectionToggledEvent","dispatchEvent","onclick","SECTION_TOGGLED_EVENT_TYPE","collapseTables","expandCollapsedTableIfItContainsElement","collapsedDiv","firstElementChild","click","_ElementUtilities","ancestorsToWiden","widenThese","updateStyleValue","updateExistingStyleValue","styleWideningKeysAndValues","maxWidth","float","widenElementByUpdatingExistingStyles","widenElementByUpdatingStyles","widenAncestors","parentAnchor","elementUtilities","shouldWidenImage","maybeWidenImage","widenImage","isCitation","isWhitespaceTextNode","hasCitationLink","anchor","hash","getRefTextContainer","refTextContainerID","decodeURIComponent","collectRefText","refTextContainer","frag","fragDiv","closestReferenceClassElement","sourceNode","referenceItemForNode","ReferenceItem","rect","html","getBoundingClientRect","adjacentNonWhitespaceNode","siblingGetter","currentNode","collectAdjacentReferenceNodes","nodeCollector","prevSiblingGetter","previousSibling","nextSiblingGetter","nextSibling","collectNearbyReferenceNodes","collectedNodes","unshift","collectNearbyReferences","sourceNodeParent","referenceNodes","NearbyReferences","selectedIndex","referencesGroup","configureRedLinkTemplate","redLinkAnchorsInDocument","newRedLinkTemplate","replaceAnchorWithSpan","hideRedLinks","spanTemplate","redLink","CLASS","ANDROID","IOS","classify","navigator","userAgent","isAndroid","isIOs","EVENT_TYPES","CollapseTable","THROTTLE_PERIOD_MILLISECONDS","_class","loadDistanceMultiplier","_loadDistanceMultiplier","_placeholders","_registered","_throttledLoadPlaceholders","wrap","_loadPlaceholders","LazyLoadTransform","placeholders","concat","_register","_this2","eventType","_this3","_this4","_isPlaceholderEligibleToLoad","deregister","_isPlaceholderWithinLoadDistance","bounds","range","top","bottom","_resizeListener","readMoreHeader","readMoreLimit","license","FooterContainer","FooterLegal","FooterReadMore","titles","_CollectionUtilities","MenuItemType","languages","lastEdited","pageIssues","disambiguation","coordinate","talkPage","MenuItem","subtitle","itemType","clickHandler","payload","CollectionUtilities","_","maybeAddItem","item","extractor","payloadExtractor","menuItem","containerAnchor","iconClass","documentFragmentForMenuItem","addItem","isParagraphEligible","paragraphElement","coordElement","coordTextLength","extractLeadIntroductionNodes","eligibleParagraph","introNodes","getEligibleParagraph","find","moveLeadIntroductionUp","afterElement","insertBeforeThisElement","firstChild","SECTION_HEADER","TITLE","LINK_CONTAINER","LINK","PROTECTION","UNPROTECTED","PROTECTED","FORBIDDEN","DATA_ATTRIBUTE","newEditSectionButton","link","newEditSectionLink","newEditSectionHeader","level","titleHTML","showEditPencil","isDim","dim","enable","COMPATIBILITY","FILTER","enableSupport","properties","cssText","isStyleSupported","isFilterSupported","CONSTRAINT","IMAGE_PRESUMES_WHITE_BACKGROUND","DIV_DO_NOT_APPLY_BASELINE","THEME","DEFAULT","DARK","SEPIA","BLACK","footballTemplateImageFilenameRegex","imagePresumesWhiteBackground","src","setTheme","theme","classifyElements","CompatibilityTransform","DimImagesTransform","EditTransform","LeadIntroductionTransform","FooterMenu","FooterTransformer","LazyLoadTransformer","PlatformTransform","RedLinks","ReferenceCollection","ThemeTransform","WidenImage"],"mappings":"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","file":"wikimedia-page-library-transform.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pagelib\"] = factory();\n\telse\n\t\troot[\"pagelib\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 46);\n","/**\n * Polyfill function that tells whether a given element matches a selector.\n * @param {!Element} el Element\n * @param {!string} selector Selector to look for\n * @return {!boolean} Whether the element matches the selector\n */\nconst matchesSelector = (el, selector) => {\n  if (el.matches) {\n    return el.matches(selector)\n  }\n  if (el.matchesSelector) {\n    return el.matchesSelector(selector)\n  }\n  if (el.webkitMatchesSelector) {\n    return el.webkitMatchesSelector(selector)\n  }\n  return false\n}\n\n/**\n * @param {!Element} element\n * @param {!string} selector\n * @return {!Array.<Element>}\n */\nconst querySelectorAll = (element, selector) =>\n  Array.prototype.slice.call(element.querySelectorAll(selector))\n\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill\n// Required by Android API 16 AOSP Nexus S emulator.\n// eslint-disable-next-line no-undef\nconst CustomEvent = typeof window !== 'undefined' && window.CustomEvent\n  || function(type, parameters = { bubbles: false, cancelable: false, detail: undefined }) {\n    // eslint-disable-next-line no-undef\n    const event = document.createEvent('CustomEvent')\n    event.initCustomEvent(type, parameters.bubbles, parameters.cancelable, parameters.detail)\n    return event\n  }\n\nexport default {\n  matchesSelector,\n  querySelectorAll,\n  CustomEvent\n}","import Polyfill from './Polyfill'\n\n// todo: drop ancestor consideration and move to Polyfill.closest().\n/**\n * Returns closest ancestor of element which matches selector.\n * Similar to 'closest' methods as seen here:\n *  https://api.jquery.com/closest/\n *  https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n * @param  {!Element} el        Element\n * @param  {!string} selector   Selector to look for in ancestors of 'el'\n * @return {?HTMLElement}       Closest ancestor of 'el' matching 'selector'\n */\nconst findClosestAncestor = (el, selector) => {\n  let parentElement\n  for (parentElement = el.parentElement;\n    parentElement && !Polyfill.matchesSelector(parentElement, selector);\n    parentElement = parentElement.parentElement) {\n    // Intentionally empty.\n  }\n  return parentElement\n}\n\n/**\n * @param {?Element} element\n * @param {!string} property\n * @return {?Element} The inclusive first element with an inline style or undefined.\n */\nconst closestInlineStyle = (element, property) => {\n  for (let el = element; el; el = el.parentElement) {\n    if (el.style[property]) { return el }\n  }\n  return undefined\n}\n\n/**\n * Determines if element has a table ancestor.\n * @param  {!Element}  el   Element\n * @return {!boolean}       Whether table ancestor of 'el' is found\n */\nconst isNestedInTable = el => Boolean(findClosestAncestor(el, 'table'))\n\n/**\n * @param {!HTMLElement} element\n * @return {!boolean} true if element affects layout, false otherwise.\n */\nconst isVisible = element =>\n  // https://github.com/jquery/jquery/blob/305f193/src/css/hiddenVisibleSelectors.js#L12\n  Boolean(element.offsetWidth || element.offsetHeight || element.getClientRects().length)\n\n/**\n * Copy existing attributes from source to destination as data-* attributes.\n * @param {!HTMLElement} source\n * @param {!HTMLElement} destination\n * @param {!Array.<string>} attributes\n * @return {void}\n */\nconst copyAttributesToDataAttributes = (source, destination, attributes) => {\n  attributes.filter(attribute => source.hasAttribute(attribute))\n    .forEach(attribute =>\n      destination.setAttribute(`data-${attribute}`, source.getAttribute(attribute)))\n}\n\n/**\n * Copy existing data-* attributes from source to destination as attributes.\n * @param {!HTMLElement} source\n * @param {!HTMLElement} destination\n * @param {!Array.<string>} attributes\n * @return {void}\n */\nconst copyDataAttributesToAttributes = (source, destination, attributes) => {\n  attributes.filter(attribute => source.hasAttribute(`data-${attribute}`))\n    .forEach(attribute =>\n      destination.setAttribute(attribute, source.getAttribute(`data-${attribute}`)))\n}\n\nexport default {\n  findClosestAncestor,\n  isNestedInTable,\n  closestInlineStyle,\n  isVisible,\n  copyAttributesToDataAttributes,\n  copyDataAttributesToAttributes\n}","/** Function rate limiter. */\nexport default class Throttle {\n  /**\n   * The function to invoke when not throttled.\n   *\n   * @callback NotThrottledFunction\n   */\n\n  /**\n   * A function wrapped in a Throttle.\n   *\n   * @callback WrappedFunction\n   */\n\n  /**\n   * Wraps a function in a Throttle.\n   * @param {!Window} window\n   * @param {!number} period The nonnegative minimum number of milliseconds between function\n   *                         invocations.\n   * @param {!NotThrottledFunction} funktion\n   * @return {!WrappedFunction}\n   */\n  static wrap(window, period, funktion) {\n    const throttle = new Throttle(window, period, funktion)\n    const throttled = function Throttled() { return throttle.queue(this, arguments) }\n    throttled.result = () => throttle.result\n    throttled.pending = () => throttle.pending()\n    throttled.delay = () => throttle.delay()\n    throttled.cancel = () => throttle.cancel()\n    throttled.reset = () => throttle.reset()\n    return throttled\n  }\n\n  /**\n   * @param {!Window} window\n   * @param {!number} period The nonnegative minimum number of milliseconds between function\n   *                         invocations.\n   * @param {!NotThrottledFunction} funktion\n   */\n  constructor(window, period, funktion) {\n    this._window = window\n    this._period = period\n    this._function = funktion\n\n    // The upcoming invocation's context and arguments.\n    this._context = undefined\n    this._arguments = undefined\n\n    // The previous invocation's result, timeout identifier, and last run timestamp.\n    this._result = undefined\n    this._timeout = 0\n    this._timestamp = 0\n  }\n\n  /**\n   * The return value of the initial run is always undefined. The return value of subsequent runs is\n   * always a previous result. The context and args used by a future invocation are always the most\n   * recently supplied. Invocations, even if immediately eligible, are dispatched.\n   * @param {?any} context\n   * @param {?any} args The arguments passed to the underlying function.\n   * @return {?any} The cached return value of the underlying function.\n   */\n  queue(context, args) {\n    // Always update the this and arguments to the latest supplied.\n    this._context = context\n    this._arguments = args\n\n    if (!this.pending()) {\n      // Queue a new invocation.\n      this._timeout = this._window.setTimeout(() => {\n        this._timeout = 0\n        this._timestamp = Date.now()\n        this._result = this._function.apply(this._context, this._arguments)\n      }, this.delay())\n    }\n\n    // Always return the previous result.\n    return this.result\n  }\n\n  /** @return {?any} The cached return value of the underlying function. */\n  get result() { return this._result }\n\n  /** @return {!boolean} true if an invocation is queued. */\n  pending() { return Boolean(this._timeout) }\n\n  /**\n   * @return {!number} The nonnegative number of milliseconds until an invocation is eligible to\n   *                   run.\n   */\n  delay() {\n    if (!this._timestamp) { return 0 }\n    return Math.max(0, this._period - (Date.now() - this._timestamp))\n  }\n\n  /**\n   * Clears any pending invocation but doesn't clear time last invoked or prior result.\n   * @return {void}\n   */\n  cancel() {\n    if (this._timeout) { this._window.clearTimeout(this._timeout) }\n    this._timeout = 0\n  }\n\n  /**\n   * Clears any pending invocation, time last invoked, and prior result.\n   * @return {void}\n   */\n  reset() {\n    this.cancel()\n    this._result = undefined\n    this._timestamp = 0\n  }\n}","import './LazyLoadTransform.css'\n// todo: use imports when other modules are TypeScript.\nconst ElementGeometry = require('./ElementGeometry').default\nconst ElementUtilities = require('./ElementUtilities').default\nconst Polyfill = require('./Polyfill').default\n\n// CSS classes used to identify and present lazily loaded images. Placeholders are members of\n// PLACEHOLDER_CLASS and one state class: pending, loading, or error. Images are members of either\n// loading or loaded state classes. Class names should match those in LazyLoadTransform.css.\nconst PLACEHOLDER_CLASS = 'pagelib_lazy_load_placeholder'\nconst PLACEHOLDER_PENDING_CLASS = 'pagelib_lazy_load_placeholder_pending' // Download pending.\nconst PLACEHOLDER_LOADING_CLASS = 'pagelib_lazy_load_placeholder_loading' // Download started.\nconst PLACEHOLDER_ERROR_CLASS = 'pagelib_lazy_load_placeholder_error' // Download failure.\nconst IMAGE_LOADING_CLASS = 'pagelib_lazy_load_image_loading' // Download started.\nconst IMAGE_LOADED_CLASS = 'pagelib_lazy_load_image_loaded' // Download completed.\n\n// Attributes copied from images to placeholders via data-* attributes for later restoration. The\n// image's classes and dimensions are also set on the placeholder.\n// The 3 data-* items are used by iOS.\nconst COPY_ATTRIBUTES = ['class', 'style', 'src', 'srcset', 'width', 'height', 'alt',\n  'usemap', 'data-file-width', 'data-file-height', 'data-image-gallery'\n]\n\n// Small images, especially icons, are quickly downloaded and may appear in many places. Lazily\n// loading these images degrades the experience with little gain. Always eagerly load these images.\n// Example: flags in the medal count for the \"1896 Summer Olympics medal table.\"\n// https://en.m.wikipedia.org/wiki/1896_Summer_Olympics_medal_table?oldid=773498394#Medal_count\nconst UNIT_TO_MINIMUM_LAZY_LOAD_SIZE: {[unit in string]?: number} = {\n  px: 50, // https://phabricator.wikimedia.org/diffusion/EMFR/browse/master/includes/MobileFormatter.php;c89f371ea9e789d7e1a827ddfec7c8028a549c12$22\n  ex: 10, // ''\n  em: 5 // 1ex ≈ .5em; https://developer.mozilla.org/en-US/docs/Web/CSS/length#Units\n}\n\n/**\n * Replace an image with a placeholder.\n * @param {!Document} document\n * @param {!HTMLImageElement} image The image to be replaced.\n * @return {!HTMLSpanElement} The placeholder replacing image.\n */\nconst convertImageToPlaceholder = (document: Document, image: HTMLImageElement): HTMLSpanElement => {\n  // There are a number of possible implementations for placeholders including:\n  //\n  // - [MobileFrontend] Replace the original image with a span and replace the span with a new\n  //   downloaded image.\n  //   This option has a good fade-in but has some CSS concerns for the placeholder, particularly\n  //   `max-width`, and causes significant reflows when used with image widening.\n  //\n  // - [Previous] Replace the original image with a span and append a new downloaded image to the\n  //   span.\n  //   This option has the best cross-fading and extensibility but makes duplicating all the CSS\n  //   rules for the appended image impractical.\n  //\n  // - [Previous] Replace the original image's source with a transparent image and update the source\n  //   from a new downloaded image.\n  //   This option has a good fade-in and minimal CSS concerns for the placeholder and image but\n  //   causes significant reflows when used with image widening.\n  //\n  // - [Current] Replace the original image with a couple spans and replace the spans with a new\n  //   downloaded image.\n  //   This option is about the same as MobileFrontend but supports image widening without reflows.\n\n  // Create the root placeholder.\n  const placeholder = document.createElement('span')\n\n  // Copy the image's classes and append the placeholder and current state (pending) classes.\n  if (image.hasAttribute('class')) {\n    placeholder.setAttribute('class', image.getAttribute('class') || '')\n  }\n  placeholder.classList.add(PLACEHOLDER_CLASS)\n  placeholder.classList.add(PLACEHOLDER_PENDING_CLASS)\n\n  // Match the image's width, if specified. If image widening is used, this width will be overridden\n  // by !important priority.\n  const geometry = ElementGeometry.from(image)\n  if (geometry.width) { placeholder.style.setProperty('width', `${geometry.width}`) }\n\n  // Save the image's attributes to data-* attributes for later restoration.\n  ElementUtilities.copyAttributesToDataAttributes(image, placeholder, COPY_ATTRIBUTES)\n\n  // Create a spacer and match the aspect ratio of the original image, if determinable. If image\n  // widening is used, this spacer will scale with the width proportionally.\n  const spacing = document.createElement('span')\n  if (geometry.width && geometry.height) {\n    // Assume units are identical.\n    const ratio = geometry.heightValue / geometry.widthValue\n    spacing.style.setProperty('padding-top', `${ratio * 100}%`)\n  }\n\n  // Append the spacer to the placeholder and replace the image with the placeholder.\n  placeholder.appendChild(spacing)\n  if (image.parentNode) image.parentNode.replaceChild(placeholder, image)\n\n  return placeholder\n}\n\n/**\n * @param {!HTMLImageElement} image The image to be considered.\n * @return {!boolean} true if image download can be deferred, false if image should be eagerly\n *                    loaded.\n */\nconst isLazyLoadable = (image: HTMLImageElement): boolean => {\n  const geometry = ElementGeometry.from(image)\n  if (!geometry.width || !geometry.height) { return true }\n  const minWidth = UNIT_TO_MINIMUM_LAZY_LOAD_SIZE[geometry.widthUnit] || Infinity\n  const minHeight = UNIT_TO_MINIMUM_LAZY_LOAD_SIZE[geometry.heightUnit] || Infinity\n  return geometry.widthValue >= minWidth && geometry.heightValue >= minHeight\n}\n\n/**\n * @param {!Element} element\n * @return {!Array.<HTMLImageElement>} Convertible images descendent from but not including element.\n */\nconst queryLazyLoadableImages = (element: Element): HTMLImageElement[] =>\n  Polyfill.querySelectorAll(element, 'img').filter((image: HTMLImageElement) => isLazyLoadable(image))\n\n/**\n * Convert images with placeholders. The transformation is inverted by calling loadImage().\n * @param {!Document} document\n * @param {!Array.<HTMLImageElement>} images The images to lazily load.\n * @return {!Array.<HTMLSpanElement>} The placeholders replacing images.\n */\nconst convertImagesToPlaceholders = (document: Document, images: HTMLImageElement[]): HTMLSpanElement[] =>\n  images.map(image => convertImageToPlaceholder(document, image))\n\n/**\n * Start downloading image resources associated with a given placeholder and replace the placeholder\n * with a new image element when the download is complete.\n * @param {!Document} document\n * @param {!HTMLSpanElement} placeholder\n * @return {!HTMLImageElement} A new image element.\n */\nconst loadPlaceholder = (document: Document, placeholder: HTMLSpanElement): HTMLImageElement => {\n  placeholder.classList.add(PLACEHOLDER_LOADING_CLASS)\n  placeholder.classList.remove(PLACEHOLDER_PENDING_CLASS)\n\n  const image = document.createElement('img')\n\n  const retryListener = (event: MouseEvent) => { // eslint-disable-line require-jsdoc\n    image.setAttribute('src', image.getAttribute('src') || '')\n    event.stopPropagation()\n    event.preventDefault()\n  }\n\n  // Add the download listener prior to setting the src attribute to avoid missing the load event.\n  image.addEventListener('load', () => {\n    placeholder.removeEventListener('click', retryListener)\n    if (placeholder.parentNode) placeholder.parentNode.replaceChild(image, placeholder)\n    image.classList.add(IMAGE_LOADED_CLASS)\n    image.classList.remove(IMAGE_LOADING_CLASS)\n  }, { once: true })\n\n  image.addEventListener('error', () => {\n    placeholder.classList.add(PLACEHOLDER_ERROR_CLASS)\n    placeholder.classList.remove(PLACEHOLDER_LOADING_CLASS)\n    placeholder.addEventListener('click', retryListener)\n  }, { once: true })\n\n  // Set src and other attributes, triggering a download.\n  ElementUtilities.copyDataAttributesToAttributes(placeholder, image, COPY_ATTRIBUTES)\n\n  // Append to the class list after copying over any preexisting classes.\n  image.classList.add(IMAGE_LOADING_CLASS)\n\n  return image\n}\n\nexport default {\n  PLACEHOLDER_CLASS,\n  queryLazyLoadableImages,\n  convertImagesToPlaceholders,\n  loadPlaceholder\n}","import './FooterReadMore.css'\n\n/**\n * @typedef {function} SaveButtonClickHandler\n * @param {!string} title\n * @return {void}\n */\n\n/**\n * @typedef {function} TitlesShownHandler\n * @param {!Array.<string>} titles\n * @return {void}\n */\n\n/**\n * Display fetched read more pages.\n * @typedef {function} ShowReadMorePagesHandler\n * @param {!Array.<object>} pages\n * @param {!string} containerID\n * @param {!SaveButtonClickHandler} saveButtonClickHandler\n * @param {!TitlesShownHandler} titlesShownHandler\n * @param {!Document} document\n * @return {void}\n */\n\nconst SAVE_BUTTON_ID_PREFIX = 'pagelib_footer_read_more_save_'\n\n/**\n * Removes parenthetical enclosures from string.\n * @param {!string} string\n * @param {!string} opener\n * @param {!string} closer\n * @return {!string}\n */\nconst safelyRemoveEnclosures = (string, opener, closer) => {\n  const enclosureRegex = new RegExp(`\\\\s?[${opener}][^${opener}${closer}]+[${closer}]`, 'g')\n  let counter = 0\n  const safeMaxTries = 30\n  let stringToClean = string\n  let previousString = ''\n  do {\n    previousString = stringToClean\n    stringToClean = stringToClean.replace(enclosureRegex, '')\n    counter++\n  } while (previousString !== stringToClean && counter < safeMaxTries)\n  return stringToClean\n}\n\n/**\n * Removes '(...)' and '/.../' parenthetical enclosures from string.\n * @param {!string} string\n * @return {!string}\n */\nconst cleanExtract = string => {\n  let stringToClean = string\n  stringToClean = safelyRemoveEnclosures(stringToClean, '(', ')')\n  stringToClean = safelyRemoveEnclosures(stringToClean, '/', '/')\n  return stringToClean\n}\n\n/**\n * Read more page model.\n */\nclass ReadMorePage {\n  /**\n   * ReadMorePage constructor.\n   * @param {!string} title\n   * @param {!string} displayTitle\n   * @param {?string} thumbnail\n   * @param {?string} description\n   * @param {?string} extract\n   */\n  constructor(title, displayTitle, thumbnail, description, extract) {\n    this.title = title\n    this.displayTitle = displayTitle\n    this.thumbnail = thumbnail\n    this.description = description\n    this.extract = extract\n  }\n}\n\n/**\n * Makes document fragment for a read more page.\n * @param {!ReadMorePage} readMorePage\n * @param {!number} index\n * @param {!SaveButtonClickHandler} saveButtonClickHandler\n * @param {!Document} document\n * @return {!DocumentFragment}\n */\nconst documentFragmentForReadMorePage = (readMorePage, index, saveButtonClickHandler, document) => {\n  const outerAnchorContainer = document.createElement('a')\n  outerAnchorContainer.id = index\n  outerAnchorContainer.className = 'pagelib_footer_readmore_page'\n\n  const hasImage = readMorePage.thumbnail && readMorePage.thumbnail.source\n  if (hasImage) {\n    const image = document.createElement('div')\n    image.style.backgroundImage = `url(${readMorePage.thumbnail.source})`\n    image.classList.add('pagelib_footer_readmore_page_image')\n    outerAnchorContainer.appendChild(image)\n  }\n\n  const innerDivContainer = document.createElement('div')\n  innerDivContainer.classList.add('pagelib_footer_readmore_page_container')\n  outerAnchorContainer.appendChild(innerDivContainer)\n  outerAnchorContainer.href = `/wiki/${encodeURI(readMorePage.title)}?event_logging_label=read_more`\n\n  let titleToShow\n  if (readMorePage.displayTitle) {\n    titleToShow = readMorePage.displayTitle\n  } else if (readMorePage.title) {\n    titleToShow = readMorePage.title\n  }\n\n  if (titleToShow) {\n    const title = document.createElement('div')\n    title.id = index\n    title.className = 'pagelib_footer_readmore_page_title'\n    title.innerHTML = titleToShow.replace(/_/g, ' ')\n    outerAnchorContainer.title = readMorePage.title.replace(/_/g, ' ')\n    innerDivContainer.appendChild(title)\n  }\n\n  let description\n  if (readMorePage.description) {\n    description = readMorePage.description\n  }\n  if ((!description || description.length < 10) && readMorePage.extract) {\n    description = cleanExtract(readMorePage.extract)\n  }\n  if (description) {\n    const descriptionEl = document.createElement('div')\n    descriptionEl.id = index\n    descriptionEl.className = 'pagelib_footer_readmore_page_description'\n    descriptionEl.innerHTML = description\n    innerDivContainer.appendChild(descriptionEl)\n  }\n\n  const saveButton = document.createElement('div')\n  saveButton.id = `${SAVE_BUTTON_ID_PREFIX}${encodeURI(readMorePage.title)}`\n  saveButton.className = 'pagelib_footer_readmore_page_save'\n  saveButton.addEventListener('click', event => {\n    event.stopPropagation()\n    event.preventDefault()\n    saveButtonClickHandler(readMorePage.title)\n  })\n  innerDivContainer.appendChild(saveButton)\n\n  return document.createDocumentFragment().appendChild(outerAnchorContainer)\n}\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @type {ShowReadMorePagesHandler}\n */\nconst showReadMorePages = (pages, containerID, saveButtonClickHandler, titlesShownHandler,\n  document) => {\n  const shownTitles = []\n  const container = document.getElementById(containerID)\n  pages.forEach((page, index) => {\n    const title = page.title.replace(/ /g, '_')\n    shownTitles.push(title)\n    const pageModel = new ReadMorePage(title, page.pageprops.displaytitle, page.thumbnail,\n      page.description, page.extract)\n    const pageFragment =\n      documentFragmentForReadMorePage(pageModel, index, saveButtonClickHandler, document)\n    container.appendChild(pageFragment)\n  })\n  titlesShownHandler(shownTitles)\n}\n\n/**\n * Makes 'Read more' query parameters object for a title.\n * @param {!string} title\n * @param {!number} count\n * @return {!Object.<string, string|number>}\n */\nconst queryParameters = (title, count) => ({\n  action: 'query',\n  format: 'json',\n  formatversion: 2,\n  prop: 'extracts|pageimages|description|pageprops',\n\n  // https://www.mediawiki.org/wiki/API:Search\n  // https://www.mediawiki.org/wiki/Help:CirrusSearch\n  generator: 'search',\n  gsrlimit: count, // Limit search results by count.\n  gsrprop: 'redirecttitle', // Include a a parsed snippet of the redirect title property.\n  gsrsearch: `morelike:${title}`, // Weight search with the title.\n  gsrwhat: 'text', // Search the text then titles of pages.\n\n  // https://www.mediawiki.org/wiki/Extension:TextExtracts\n  exchars: 256, // Limit number of characters returned.\n  exintro: '', // Only content before the first section.\n  exlimit: count, // Limit extract results by count.\n  explaintext: '', // Strip HTML.\n\n  // https://www.mediawiki.org/wiki/Extension:PageImages\n  pilicense: 'any', // Include non-free images.\n  pilimit: count, // Limit thumbnail results by count.\n  piprop: 'thumbnail', // Include URL and dimensions of thumbnail.\n  pithumbsize: 120 // Limit thumbnail dimensions.\n})\n\n/**\n * Converts query parameter object to string.\n * @param {!Object.<string, string|number>} parameters\n * @return {!string}\n */\nconst stringFromQueryParameters = parameters => Object.keys(parameters)\n  .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(parameters[key])}`)\n  .join('&')\n\n/**\n * URL for retrieving 'Read more' pages for a given title.\n * Leave 'baseURL' null if you don't need to deal with proxying.\n * @param {!string} title\n * @param {!number} count Number of `Read more` items to fetch for this title\n * @param {?string} baseURL\n * @return {!string}\n */\nconst readMoreQueryURL = (title, count, baseURL) =>\n  `${baseURL || ''}/w/api.php?${stringFromQueryParameters(queryParameters(title, count))}`\n\n/**\n * Fetch error handler.\n * @param {!string} statusText\n * @return {void}\n */\nconst fetchErrorHandler = statusText => {\n  // TODO: figure out if we want to hide the 'Read more' header in cases when fetch fails.\n  console.log(`statusText = ${statusText}`) // eslint-disable-line no-console\n}\n\n/**\n * Fetches 'Read more' pages.\n * @param {!string} title\n * @param {!number} count\n * @param {!string} containerID\n * @param {?string} baseURL\n * @param {!ShowReadMorePagesHandler} showReadMorePagesHandler\n * @param {!SaveButtonClickHandler} saveButtonClickHandler\n * @param {!TitlesShownHandler} titlesShownHandler\n * @param {!Document} document\n * @return {void}\n */\nconst fetchReadMore = (title, count, containerID, baseURL, showReadMorePagesHandler,\n  saveButtonClickHandler, titlesShownHandler, document) => {\n  const xhr = new XMLHttpRequest() // eslint-disable-line no-undef\n  xhr.open('GET', readMoreQueryURL(title, count, baseURL), true)\n  xhr.onload = () => {\n    if (xhr.readyState === XMLHttpRequest.DONE) { // eslint-disable-line no-undef\n      if (xhr.status === 200) {\n        showReadMorePagesHandler(\n          JSON.parse(xhr.responseText).query.pages,\n          containerID,\n          saveButtonClickHandler,\n          titlesShownHandler,\n          document\n        )\n      } else {\n        fetchErrorHandler(xhr.statusText)\n      }\n    }\n  }\n  xhr.onerror = () => fetchErrorHandler(xhr.statusText)\n  try {\n    xhr.send()\n  } catch (error) {\n    fetchErrorHandler(error.toString())\n  }\n}\n\n/**\n * Updates save button bookmark icon for saved state.\n * @param {!HTMLDivElement} button\n * @param {!boolean} isSaved\n * @return {void}\n */\nconst updateSaveButtonBookmarkIcon = (button, isSaved) => {\n  const unfilledClass = 'pagelib_footer_readmore_bookmark_unfilled'\n  const filledClass = 'pagelib_footer_readmore_bookmark_filled'\n  button.classList.remove(filledClass, unfilledClass)\n  button.classList.add(isSaved ? filledClass : unfilledClass)\n}\n\n/**\n * Updates save button text and bookmark icon for saved state.\n * Safe to call even for titles for which there is not currently a 'Read more' item.\n * @param {!string} title\n * @param {!string} text\n * @param {!boolean} isSaved\n * @param {!Document} document\n * @return {void}\n*/\nconst updateSaveButtonForTitle = (title, text, isSaved, document) => {\n  const saveButton = document.getElementById(`${SAVE_BUTTON_ID_PREFIX}${encodeURI(title)}`)\n  if (!saveButton) {\n    return\n  }\n  saveButton.innerText = text\n  saveButton.title = text\n  updateSaveButtonBookmarkIcon(saveButton, isSaved)\n}\n\n/**\n * Adds 'Read more' for 'title' to 'containerID' element.\n * Leave 'baseURL' null if you don't need to deal with proxying.\n * @param {!string} title\n * @param {!number} count\n * @param {!string} containerID\n * @param {?string} baseURL\n * @param {!SaveButtonClickHandler} saveButtonClickHandler\n * @param {!TitlesShownHandler} titlesShownHandler\n * @param {!Document} document\n * @return {void}\n */\nconst add = (title, count, containerID, baseURL, saveButtonClickHandler, titlesShownHandler,\n  document) => {\n  fetchReadMore(\n    title,\n    count,\n    containerID,\n    baseURL,\n    showReadMorePages,\n    saveButtonClickHandler,\n    titlesShownHandler,\n    document\n  )\n}\n\n/**\n * Sets heading element string.\n * @param {!string} headingString\n * @param {!string} headingID\n * @param {!Document} document\n * @return {void}\n */\nconst setHeading = (headingString, headingID, document) => {\n  const headingElement = document.getElementById(headingID)\n  headingElement.innerText = headingString\n  headingElement.title = headingString\n}\n\nexport default {\n  add,\n  setHeading,\n  updateSaveButtonForTitle,\n  test: {\n    cleanExtract,\n    safelyRemoveEnclosures\n  }\n}","import './FooterLegal.css'\n\n/**\n * @typedef {function} FooterLegalClickCallback\n * @return {void}\n */\n\n/**\n  * @typedef {function} FooterBrowserClickCallback\n  * @return {void}\n  */\n\n/**\n * Adds legal footer html to 'containerID' element.\n * @param {!Element} content\n * @param {?string} licenseString\n * @param {?string} licenseSubstitutionString\n * @param {!string} containerID\n * @param {!FooterLegalClickCallback} licenseLinkClickHandler\n * @param {!string} viewInBrowserString\n * @param {!FooterBrowserClickCallback} browserLinkClickHandler\n * @return {void}\n */\nconst add = (content, licenseString, licenseSubstitutionString, containerID,\n  licenseLinkClickHandler, viewInBrowserString, browserLinkClickHandler) => {\n  // todo: don't manipulate the selector. The client can make this an ID if they want it to be.\n  const container = content.querySelector(`#${containerID}`)\n  const licenseStringHalves = licenseString.split('$1')\n\n  container.innerHTML =\n  `<div class='pagelib_footer_legal_contents'>\n    <hr class='pagelib_footer_legal_divider'>\n    <span class='pagelib_footer_legal_license'>\n      ${licenseStringHalves[0]}\n      <a class='pagelib_footer_legal_license_link'>\n        ${licenseSubstitutionString}\n      </a>\n      ${licenseStringHalves[1]}\n      <br>\n      <div class=\"pagelib_footer_browser\">\n        <a class='pagelib_footer_browser_link'>\n          ${viewInBrowserString}\n        </a>\n      </div>\n    </span>\n  </div>`\n\n  container.querySelector('.pagelib_footer_legal_license_link')\n    .addEventListener('click', () => {\n      licenseLinkClickHandler()\n    })\n\n  container.querySelector('.pagelib_footer_browser_link')\n    .addEventListener('click', () => {\n      browserLinkClickHandler()\n    })\n}\n\nexport default {\n  add\n}","import './FooterContainer.css'\nimport Polyfill from './Polyfill'\n\n/**\n * Ensures the 'Read more' section header can always be scrolled to the top of the screen.\n * @param {!Window} window\n * @return {void}\n */\nconst updateBottomPaddingToAllowReadMoreToScrollToTop = window => {\n  const div = window.document.getElementById('pagelib_footer_container_ensure_can_scroll_to_top')\n  const currentPadding = parseInt(div.style.paddingBottom, 10) || 0\n  const height = div.clientHeight - currentPadding\n  const newPadding = Math.max(0, window.innerHeight - height)\n  div.style.paddingBottom = `${newPadding}px`\n}\n\n/**\n * Allows native code to adjust footer container margins without having to worry about\n * implementation details.\n * @param {!number} margin\n * @param {!Document} document\n * @return {void}\n */\nconst updateLeftAndRightMargin = (margin, document) => {\n  const selectors = [\n    '#pagelib_footer_container_menu_heading',\n    '#pagelib_footer_container_readmore',\n    '#pagelib_footer_container_legal'\n  ]\n  const elements = Polyfill.querySelectorAll(document, selectors.join())\n  elements.forEach(element => {\n    element.style.marginLeft = `${margin}px`\n    element.style.marginRight = `${margin}px`\n  })\n  const rightOrLeft = document.querySelector('html').dir === 'rtl' ? 'right' : 'left'\n  Polyfill.querySelectorAll(document, '.pagelib_footer_menu_item')\n    .forEach(element => {\n      element.style.backgroundPosition = `${rightOrLeft} ${margin}px center`\n      element.style.paddingLeft = `${margin}px`\n      element.style.paddingRight = `${margin}px`\n    })\n}\n\n/**\n * Returns a fragment containing structural footer html which may be inserted where needed.\n * @param {!Document} document\n * @return {!DocumentFragment}\n */\nconst containerFragment = document => {\n  const containerDiv = document.createElement('div')\n  const containerFragment = document.createDocumentFragment()\n  containerFragment.appendChild(containerDiv)\n  containerDiv.innerHTML =\n  `<div id='pagelib_footer_container' class='pagelib_footer_container'>\n    <div id='pagelib_footer_container_section_0'>\n      <div id='pagelib_footer_container_menu'>\n        <div id='pagelib_footer_container_menu_heading' class='pagelib_footer_container_heading'>\n        </div>\n        <div id='pagelib_footer_container_menu_items'>\n        </div>\n      </div>\n    </div>\n    <div id='pagelib_footer_container_ensure_can_scroll_to_top'>\n      <div id='pagelib_footer_container_section_1'>\n        <div id='pagelib_footer_container_readmore'>\n          <div\n            id='pagelib_footer_container_readmore_heading' class='pagelib_footer_container_heading'>\n          </div>\n          <div id='pagelib_footer_container_readmore_pages'>\n          </div>\n        </div>\n      </div>\n      <div id='pagelib_footer_container_legal'></div>\n    </div>\n  </div>`\n  return containerFragment\n}\n\n/**\n * Indicates whether container is has already been added.\n * @param {!Document} document\n * @return {boolean}\n */\nconst isContainerAttached = document => Boolean(document.querySelector('#pagelib_footer_container'))\n\nexport default {\n  containerFragment,\n  isContainerAttached, // todo: rename isAttached()?\n  updateBottomPaddingToAllowReadMoreToScrollToTop,\n  updateLeftAndRightMargin\n}","/** CSS length value and unit of measure. */\nclass DimensionUnit {\n  /**\n   * Returns the dimension and units of an Element, usually width or height, as specified by inline\n   * style or attribute. This is a pragmatic not bulletproof implementation.\n   * @param {!Element} element\n   * @param {!string} property\n   * @return {?DimensionUnit}\n   */\n  static fromElement(element, property) {\n    return element.style.getPropertyValue(property)\n      && DimensionUnit.fromStyle(element.style.getPropertyValue(property))\n      || element.hasAttribute(property) && new DimensionUnit(element.getAttribute(property))\n      || undefined\n  }\n\n  /**\n   * This is a pragmatic not bulletproof implementation.\n   * @param {!string} property\n   * @return {!DimensionUnit}\n   */\n  static fromStyle(property) {\n    const matches = property.match(/(-?\\d*\\.?\\d*)(\\D+)?/) || []\n    return new DimensionUnit(matches[1], matches[2])\n  }\n\n  /**\n   * @param {!string} value\n   * @param {?string} unit Defaults to pixels.\n   */\n  constructor(value, unit) {\n    this._value = Number(value)\n    this._unit = unit || 'px'\n  }\n\n  /** @return {!number} NaN if unknown. */\n  get value() { return this._value }\n\n  /** @return {!string} */\n  get unit() { return this._unit }\n\n  /** @return {!string} */\n  toString() {\n    return isNaN(this.value) ? '' : `${this.value}${this.unit}`\n  }\n}\n\n/** Element width and height dimensions and units. */\nexport default class ElementGeometry {\n  /**\n   * @param {!Element} element\n   * @return {!ElementGeometry}\n   */\n  static from(element) {\n    return new ElementGeometry(DimensionUnit.fromElement(element, 'width'),\n      DimensionUnit.fromElement(element, 'height'))\n  }\n\n  /**\n   * @param {?DimensionUnit} width\n   * @param {?DimensionUnit} height\n   */\n  constructor(width, height) {\n    this._width = width\n    this._height = height\n  }\n\n  /**\n   * @return {?DimensionUnit}\n   */\n  get width() { return this._width }\n\n  /** @return {!number} NaN if unknown. */\n  get widthValue() { return this._width && !isNaN(this._width.value) ? this._width.value : NaN }\n\n  /** @return {!string} */\n  get widthUnit() { return this._width && this._width.unit || 'px' }\n\n  /**\n   * @return {?DimensionUnit}\n   */\n  get height() { return this._height }\n\n  /** @return {!number} NaN if unknown. */\n  get heightValue() { return this._height && !isNaN(this._height.value) ? this._height.value : NaN }\n\n  /** @return {!string} */\n  get heightUnit() { return this._height && this._height.unit || 'px' }\n}","import Polyfill from './Polyfill'\n\n/**\n * Extracts array of page issues from element\n * @param {!Document} document\n * @param {?Element} element\n * @return {!Array.<string>} Return empty array if nothing is extracted\n */\nconst collectPageIssues = (document, element) => {\n  if (!element) {\n    return []\n  }\n  const tables =\n    Polyfill.querySelectorAll(element, 'table.ambox:not(.ambox-multiple_issues):not(.ambox-notice)')\n  // Get the tables into a fragment so we can remove some elements without triggering a layout\n  const fragment = document.createDocumentFragment()\n  const cloneTableIntoFragment =\n    table => fragment.appendChild(table.cloneNode(true)) // eslint-disable-line require-jsdoc\n  tables.forEach(cloneTableIntoFragment)\n  // Remove some elements we don't want when \"textContent\" or \"innerHTML\" are used\n  Polyfill.querySelectorAll(fragment, '.hide-when-compact, .collapsed').forEach(el => el.remove())\n  return Polyfill.querySelectorAll(fragment, 'td[class*=mbox-text] > *[class*=mbox-text]')\n}\n\n/**\n * Extracts array of page issues HTML from element\n * @param {!Document} document\n * @param {?Element} element\n * @return {!Array.<string>} Return empty array if nothing is extracted\n */\nconst collectPageIssuesHTML = (document, element) =>\n  collectPageIssues(document, element).map(el => el.innerHTML)\n\n/**\n * Extracts array of page issues text from element\n * @param {!Document} document\n * @param {?Element} element\n * @return {!Array.<string>} Return empty array if nothing is extracted\n */\nconst collectPageIssuesText = (document, element) =>\n  collectPageIssues(document, element).map(el => el.textContent.trim())\n\n/**\n * Extracts array of disambiguation titles from an element\n * @param {?Element} element\n * @return {!Array.<string>} Return empty array if nothing is extracted\n */\nconst collectDisambiguationTitles = element => {\n  if (!element) {\n    return []\n  }\n  return Polyfill.querySelectorAll(element, 'div.hatnote a[href]:not([href=\"\"]):not([redlink=\"1\"])')\n    .map(el => el.href)\n}\n\n/**\n * Extracts array of disambiguation items html from an element\n * @param {?Element} element\n * @return {!Array.<string>} Return empty array if nothing is extracted\n */\nconst collectDisambiguationHTML = element => {\n  if (!element) {\n    return []\n  }\n  return Polyfill.querySelectorAll(element, 'div.hatnote').map(el => el.innerHTML)\n}\n\nexport default {\n  collectDisambiguationTitles,\n  collectDisambiguationHTML,\n  collectPageIssuesHTML,\n  collectPageIssuesText,\n  test: {\n    collectPageIssues\n  }\n}","/**\n * Determines if node is either an element or text node.\n * @param  {!Node}  node\n * @return {!boolean}\n */\nconst isNodeTypeElementOrText = node =>\n  node.nodeType === Node.ELEMENT_NODE || node.nodeType === Node.TEXT_NODE\n\nexport default {\n  isNodeTypeElementOrText\n}","import './CollapseTable.css'\nimport ElementUtilities from './ElementUtilities'\nimport NodeUtilities from './NodeUtilities'\nimport Polyfill from './Polyfill'\n\nconst SECTION_TOGGLED_EVENT_TYPE = 'section-toggled'\nconst BREAKING_SPACE = ' '\n\n/**\n * Determine if we want to extract text from this header.\n * @param {!Element} header\n * @return {!boolean}\n */\nconst isHeaderEligible =\n  header => header.childNodes && Polyfill.querySelectorAll(header, 'a').length < 3\n\n/**\n * Determine eligibility of extracted text.\n * @param {?string} headerText\n * @return {!boolean}\n */\nconst isHeaderTextEligible = headerText =>\n  headerText && headerText.replace(/[\\s0-9]/g, '').length > 0\n\n/**\n * Extracts first word from string. Returns null if for any reason it is unable to do so.\n * @param  {!string} string\n * @return {?string}\n */\nconst firstWordFromString = string => {\n  // 'If the global flag (g) is not set, Element zero of the array contains the entire match,\n  // while elements 1 through n contain any submatches.'\n  const matches = string.match(/\\w+/) // Only need first match so not using 'g' option.\n  if (!matches) {\n    return undefined\n  }\n  return matches[0]\n}\n\n/**\n * Is node's textContent too similar to pageTitle. Checks if the first word of the node's\n * textContent is found at the beginning of pageTitle.\n * @param  {!Node} node\n * @param  {!string} pageTitle\n * @return {!boolean}\n */\nconst isNodeTextContentSimilarToPageTitle = (node, pageTitle) => {\n  const firstPageTitleWord = firstWordFromString(pageTitle)\n  const firstNodeTextContentWord = firstWordFromString(node.textContent)\n  // Don't claim similarity if 1st words were not extracted.\n  if (!firstPageTitleWord || !firstNodeTextContentWord) {\n    return false\n  }\n  return firstPageTitleWord.toLowerCase() === firstNodeTextContentWord.toLowerCase()\n}\n\n/**\n * Removes leading and trailing whitespace and normalizes other whitespace - i.e. ensures\n * non-breaking spaces, tabs, etc are replaced with regular breaking spaces.\n * @param  {!string} string\n * @return {!string}\n */\nconst stringWithNormalizedWhitespace = string => string.trim().replace(/\\s/g, BREAKING_SPACE)\n\n/**\n * Determines if node is a BR.\n * @param  {!Node}  node\n * @return {!boolean}\n */\nconst isNodeBreakElement = node => node.nodeType === Node.ELEMENT_NODE && node.tagName === 'BR'\n\n/**\n * Replace node with a text node bearing a single breaking space.\n * @param {!Document} document\n * @param  {!Node} node\n * @return {void}\n */\nconst replaceNodeWithBreakingSpaceTextNode = (document, node) => {\n  node.parentNode.replaceChild(document.createTextNode(BREAKING_SPACE), node)\n}\n\n/**\n * Extracts any header text determined to be eligible.\n * @param {!Document} document\n * @param {!Element} header\n * @param {?string} pageTitle\n * @return {?string}\n */\nconst extractEligibleHeaderText = (document, header, pageTitle) => {\n  if (!isHeaderEligible(header)) {\n    return null\n  }\n  // Clone header into fragment. This is done so we can remove some elements we don't want\n  // represented when \"textContent\" is used. Because we've cloned the header into a fragment, we are\n  // free to strip out anything we want without worrying about affecting the visible document.\n  const fragment = document.createDocumentFragment()\n  fragment.appendChild(header.cloneNode(true))\n  const fragmentHeader = fragment.querySelector('th')\n\n  Polyfill.querySelectorAll(fragmentHeader, '.geo, .coordinates, sup.reference, ol, ul')\n    .forEach(el => el.remove())\n\n  const childNodesArray = Array.prototype.slice.call(fragmentHeader.childNodes)\n  if (pageTitle) {\n    childNodesArray\n      .filter(NodeUtilities.isNodeTypeElementOrText)\n      .filter(node => isNodeTextContentSimilarToPageTitle(node, pageTitle))\n      .forEach(node => node.remove())\n  }\n\n  childNodesArray\n    .filter(isNodeBreakElement)\n    .forEach(node => replaceNodeWithBreakingSpaceTextNode(document, node))\n\n  const headerText = fragmentHeader.textContent\n  if (isHeaderTextEligible(headerText)) {\n    return stringWithNormalizedWhitespace(headerText)\n  }\n  return null\n}\n\n/**\n * Used to sort array of Elements so those containing 'scope' attribute are moved to front of\n * array. Relative order between 'scope' elements is preserved. Relative order between non 'scope'\n * elements is preserved.\n * @param  {!Element} a\n * @param  {!Element} b\n * @return {!number}\n */\nconst elementScopeComparator = (a, b) => {\n  const aHasScope = a.hasAttribute('scope')\n  const bHasScope = b.hasAttribute('scope')\n  if (aHasScope && bHasScope) {\n    return 0\n  }\n  if (aHasScope) {\n    return -1\n  }\n  if (bHasScope) {\n    return 1\n  }\n  return 0\n}\n\n/**\n * Find an array of table header (TH) contents. If there are no TH elements in\n * the table or the header's link matches pageTitle, an empty array is returned.\n * @param {!Document} document\n * @param {!Element} element\n * @param {?string} pageTitle Unencoded page title; if this title matches the\n *                            contents of the header exactly, it will be omitted.\n * @return {!Array<string>}\n */\nconst getTableHeaderTextArray = (document, element, pageTitle) => {\n  const headerTextArray = []\n  const headers = Polyfill.querySelectorAll(element, 'th')\n  headers.sort(elementScopeComparator)\n  for (let i = 0; i < headers.length; ++i) {\n    const headerText = extractEligibleHeaderText(document, headers[i], pageTitle)\n    if (headerText && headerTextArray.indexOf(headerText) === -1) {\n      headerTextArray.push(headerText)\n      // 'newCaptionFragment' only ever uses the first 2 items.\n      if (headerTextArray.length === 2) {\n        break\n      }\n    }\n  }\n  return headerTextArray\n}\n\n/**\n * @typedef {function} FooterDivClickCallback\n * @param {!HTMLElement}\n * @return {void}\n */\n\n/**\n * @param {!Element} container div\n * @param {?Element} trigger element that was clicked or tapped\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {boolean} true if collapsed, false if expanded.\n */\nconst toggleCollapsedForContainer = function(container, trigger, footerDivClickCallback) {\n  const header = container.children[0]\n  const table = container.children[1]\n  const footer = container.children[2]\n  const caption = header.querySelector('.app_table_collapsed_caption')\n  const collapsed = table.style.display !== 'none'\n  if (collapsed) {\n    table.style.display = 'none'\n    header.classList.remove('pagelib_collapse_table_collapsed')\n    header.classList.remove('pagelib_collapse_table_icon')\n    header.classList.add('pagelib_collapse_table_expanded')\n    if (caption) {\n      caption.style.visibility = 'visible'\n    }\n    footer.style.display = 'none'\n    // if they clicked the bottom div, then scroll back up to the top of the table.\n    if (trigger === footer && footerDivClickCallback) {\n      footerDivClickCallback(container)\n    }\n  } else {\n    table.style.display = 'block'\n    header.classList.remove('pagelib_collapse_table_expanded')\n    header.classList.add('pagelib_collapse_table_collapsed')\n    header.classList.add('pagelib_collapse_table_icon')\n    if (caption) {\n      caption.style.visibility = 'hidden'\n    }\n    footer.style.display = 'block'\n  }\n  return collapsed\n}\n\n/**\n * Ex: toggleCollapseClickCallback.bind(el, (container) => {\n *       window.scrollTo(0, container.offsetTop - transformer.getDecorOffset())\n *     })\n * @this HTMLElement\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {boolean} true if collapsed, false if expanded.\n */\nconst toggleCollapseClickCallback = function(footerDivClickCallback) {\n  const container = this.parentNode\n  return toggleCollapsedForContainer(container, this, footerDivClickCallback)\n}\n\n/**\n * @param {!HTMLElement} table\n * @return {!boolean} true if table should be collapsed, false otherwise.\n */\nconst shouldTableBeCollapsed = table => {\n  const classBlacklist = ['navbox', 'vertical-navbox', 'navbox-inner', 'metadata', 'mbox-small']\n  const blacklistIntersects = classBlacklist.some(clazz => table.classList.contains(clazz))\n  return table.style.display !== 'none' && !blacklistIntersects\n}\n\n/**\n * @param {!Element} element\n * @return {!boolean} true if element is an infobox, false otherwise.\n */\nconst isInfobox = element =>\n  element.classList.contains('infobox')\n  || element.classList.contains('infobox_v3')\n\n/**\n * @param {!Document} document\n * @param {!DocumentFragment} content\n * @return {!HTMLDivElement}\n */\nconst newCollapsedHeaderDiv = (document, content) => {\n  const div = document.createElement('div')\n  div.classList.add('pagelib_collapse_table_collapsed_container')\n  div.classList.add('pagelib_collapse_table_expanded')\n  div.appendChild(content)\n  return div\n}\n\n/**\n * @param {!Document} document\n * @param {?string} content HTML string.\n * @return {!HTMLDivElement}\n */\nconst newCollapsedFooterDiv = (document, content) => {\n  const div = document.createElement('div')\n  div.classList.add('pagelib_collapse_table_collapsed_bottom')\n  div.classList.add('pagelib_collapse_table_icon')\n  div.innerHTML = content || ''\n  return div\n}\n\n/**\n * @param {!Document} document\n * @param {!string} title\n * @param {!Array.<string>} headerText\n * @return {!DocumentFragment}\n */\nconst newCaptionFragment = (document, title, headerText) => {\n  const fragment = document.createDocumentFragment()\n\n  const strong = document.createElement('strong')\n  strong.innerHTML = title\n  fragment.appendChild(strong)\n\n  const span = document.createElement('span')\n  span.classList.add('pagelib_collapse_table_collapse_text')\n  if (headerText.length > 0) {\n    span.appendChild(document.createTextNode(`: ${headerText[0]}`))\n  }\n  if (headerText.length > 1) {\n    span.appendChild(document.createTextNode(`, ${headerText[1]}`))\n  }\n  if (headerText.length > 0) {\n    span.appendChild(document.createTextNode(' …'))\n  }\n  fragment.appendChild(span)\n\n  return fragment\n}\n\n/**\n * @param {!Window} window\n * @param {!Document} document\n * @param {?string} pageTitle use title for this not `display title` (which can contain tags)\n * @param {?boolean} isMainPage\n * @param {?boolean} isInitiallyCollapsed\n * @param {?string} infoboxTitle\n * @param {?string} otherTitle\n * @param {?string} footerTitle\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {void}\n */\nconst adjustTables = (window, document, pageTitle, isMainPage, isInitiallyCollapsed,\n  infoboxTitle, otherTitle, footerTitle, footerDivClickCallback) => {\n  if (isMainPage) { return }\n\n  const tables = document.querySelectorAll('table, .infobox_v3')\n  for (let i = 0; i < tables.length; ++i) {\n    const table = tables[i]\n\n    if (ElementUtilities.findClosestAncestor(table, '.pagelib_collapse_table_container')\n      || !shouldTableBeCollapsed(table)) {\n      continue\n    }\n\n    const headerTextArray = getTableHeaderTextArray(document, table, pageTitle)\n    if (!headerTextArray.length && !isInfobox(table)) {\n      continue\n    }\n    const captionFragment =\n      newCaptionFragment(document, isInfobox(table) ? infoboxTitle : otherTitle, headerTextArray)\n\n    // create the container div that will contain both the original table\n    // and the collapsed version.\n    const containerDiv = document.createElement('div')\n    containerDiv.className = 'pagelib_collapse_table_container'\n    table.parentNode.insertBefore(containerDiv, table)\n    table.parentNode.removeChild(table)\n\n    // remove top and bottom margin from the table, so that it's flush with\n    // our expand/collapse buttons\n    table.style.marginTop = '0px'\n    table.style.marginBottom = '0px'\n\n    const collapsedHeaderDiv = newCollapsedHeaderDiv(document, captionFragment)\n    collapsedHeaderDiv.style.display = 'block'\n\n    const collapsedFooterDiv = newCollapsedFooterDiv(document, footerTitle)\n    collapsedFooterDiv.style.display = 'none'\n\n    // add our stuff to the container\n    containerDiv.appendChild(collapsedHeaderDiv)\n    containerDiv.appendChild(table)\n    containerDiv.appendChild(collapsedFooterDiv)\n\n    // set initial visibility\n    table.style.display = 'none'\n\n    // eslint-disable-next-line require-jsdoc, no-loop-func\n    const dispatchSectionToggledEvent = collapsed =>\n      // eslint-disable-next-line no-undef\n      window.dispatchEvent(new Polyfill.CustomEvent(SECTION_TOGGLED_EVENT_TYPE, { collapsed }))\n\n    // assign click handler to the collapsed divs\n    collapsedHeaderDiv.onclick = () => {\n      const collapsed = toggleCollapseClickCallback.bind(collapsedHeaderDiv)()\n      dispatchSectionToggledEvent(collapsed)\n    }\n    collapsedFooterDiv.onclick = () => {\n      const collapsed = toggleCollapseClickCallback.bind(collapsedFooterDiv,\n        footerDivClickCallback)()\n      dispatchSectionToggledEvent(collapsed)\n    }\n\n    if (!isInitiallyCollapsed) {\n      toggleCollapsedForContainer(containerDiv)\n    }\n  }\n}\n\n/**\n * @param {!Window} window\n * @param {!Document} document\n * @param {?string} pageTitle use title for this not `display title` (which can contain tags)\n * @param {?boolean} isMainPage\n * @param {?string} infoboxTitle\n * @param {?string} otherTitle\n * @param {?string} footerTitle\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {void}\n */\nconst collapseTables = (window, document, pageTitle, isMainPage, infoboxTitle, otherTitle,\n  footerTitle, footerDivClickCallback) => {\n  adjustTables(window, document, pageTitle, isMainPage, true, infoboxTitle, otherTitle,\n    footerTitle, footerDivClickCallback)\n}\n\n/**\n * If you tap a reference targeting an anchor within a collapsed table, this\n * method will expand the references section. The client can then scroll to the\n * references section.\n *\n * The first reference (an \"[A]\") in the \"enwiki > Airplane\" article from ~June\n * 2016 exhibits this issue. (You can copy wikitext from this revision into a\n * test wiki page for testing.)\n * @param  {?Element} element\n * @return {void}\n*/\nconst expandCollapsedTableIfItContainsElement = element => {\n  if (element) {\n    const containerSelector = '[class*=\"pagelib_collapse_table_container\"]'\n    const container = ElementUtilities.findClosestAncestor(element, containerSelector)\n    if (container) {\n      const collapsedDiv = container.firstElementChild\n      if (collapsedDiv && collapsedDiv.classList.contains('pagelib_collapse_table_expanded')) {\n        collapsedDiv.click()\n      }\n    }\n  }\n}\n\nexport default {\n  SECTION_TOGGLED_EVENT_TYPE,\n  toggleCollapseClickCallback,\n  collapseTables,\n  adjustTables,\n  expandCollapsedTableIfItContainsElement,\n  test: {\n    elementScopeComparator,\n    extractEligibleHeaderText,\n    firstWordFromString,\n    getTableHeaderTextArray,\n    shouldTableBeCollapsed,\n    isHeaderEligible,\n    isHeaderTextEligible,\n    isInfobox,\n    newCollapsedHeaderDiv,\n    newCollapsedFooterDiv,\n    newCaptionFragment,\n    isNodeTextContentSimilarToPageTitle,\n    stringWithNormalizedWhitespace,\n    replaceNodeWithBreakingSpaceTextNode\n  }\n}","import './WidenImage.css'\nimport elementUtilities from './ElementUtilities'\n\n/**\n * Gets array of ancestors of element which need widening.\n * @param  {!HTMLElement} element\n * @return {!Array.<HTMLElement>} Zero length array is returned if no elements should be widened.\n */\nconst ancestorsToWiden = element => {\n  const widenThese = []\n  let el = element\n  while (el.parentElement) {\n    el = el.parentElement\n    // No need to walk above 'content_block'.\n    if (el.classList.contains('content_block')) {\n      break\n    }\n    widenThese.push(el)\n  }\n  return widenThese\n}\n\n/**\n * Sets style value.\n * @param {!CSSStyleDeclaration} style\n * @param {!string} key\n * @param {*} value\n * @return {void}\n */\nconst updateStyleValue = (style, key, value) => {\n  style[key] = value\n}\n\n/**\n * Sets style value only if value for given key already exists.\n * @param {CSSStyleDeclaration} style\n * @param {!string} key\n * @param {*} value\n * @return {void}\n */\nconst updateExistingStyleValue = (style, key, value) => {\n  const valueExists = Boolean(style[key])\n  if (valueExists) {\n    updateStyleValue(style, key, value)\n  }\n}\n\n/**\n * Image widening CSS key/value pairs.\n * @type {Object}\n */\nconst styleWideningKeysAndValues = {\n  width: '100%',\n  height: 'auto',\n  maxWidth: '100%',\n  float: 'none'\n}\n\n/**\n * Perform widening on an element. Certain style properties are updated, but only if existing values\n * for these properties already exist.\n * @param  {!HTMLElement} element\n * @return {void}\n */\nconst widenElementByUpdatingExistingStyles = element => {\n  Object.keys(styleWideningKeysAndValues)\n    .forEach(key => updateExistingStyleValue(element.style, key, styleWideningKeysAndValues[key]))\n}\n\n/**\n * Perform widening on an element.\n * @param  {!HTMLElement} element\n * @return {void}\n */\nconst widenElementByUpdatingStyles = element => {\n  Object.keys(styleWideningKeysAndValues)\n    .forEach(key => updateStyleValue(element.style, key, styleWideningKeysAndValues[key]))\n}\n\n/**\n * To widen an image element a css class called 'pagelib_widen_image_override' is applied to the\n * image element, however, ancestors of the image element can prevent the widening from taking\n * effect. This method makes minimal adjustments to ancestors of the image element being widened so\n * the image widening can take effect.\n * @param  {!HTMLElement} element Element whose ancestors will be widened\n * @return {void}\n */\nconst widenAncestors = element => {\n  ancestorsToWiden(element).forEach(widenElementByUpdatingExistingStyles)\n\n  // Without forcing widening on the parent anchor, lazy image loading placeholders\n  // aren't correctly widened on iOS for some reason.\n  const parentAnchor = elementUtilities.findClosestAncestor(element, 'a.image')\n  if (parentAnchor) {\n    widenElementByUpdatingStyles(parentAnchor)\n  }\n}\n\n/**\n * Some images should not be widened. This method makes that determination.\n * @param  {!HTMLElement} image   The image in question\n * @return {boolean}              Whether 'image' should be widened\n */\nconst shouldWidenImage = image => {\n  // Images within a \"<div class='noresize'>...</div>\" should not be widened.\n  // Example exhibiting links overlaying such an image:\n  //   'enwiki > Counties of England > Scope and structure > Local government'\n  if (elementUtilities.findClosestAncestor(image, \"[class*='noresize']\")) {\n    return false\n  }\n\n  // Side-by-side images should not be widened. Often their captions mention 'left' and 'right', so\n  // we don't want to widen these as doing so would stack them vertically.\n  // Examples exhibiting side-by-side images:\n  //    'enwiki > Cold Comfort (Inside No. 9) > Casting'\n  //    'enwiki > Vincent van Gogh > Letters'\n  if (elementUtilities.findClosestAncestor(image, \"div[class*='tsingle']\")) {\n    return false\n  }\n\n  // Imagemaps, which expect images to be specific sizes, should not be widened.\n  // Examples can be found on 'enwiki > Kingdom (biology)':\n  //    - first non lead image is an image map\n  //    - 'Three domains of life > Phylogenetic Tree of Life' image is an image map\n  if (image.hasAttribute('usemap')) {\n    return false\n  }\n\n  // Images in tables should not be widened - doing so can horribly mess up table layout.\n  if (elementUtilities.isNestedInTable(image)) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Widens the image.\n * @param  {!HTMLElement} image   The image in question\n * @return {void}\n */\nconst widenImage = image => {\n  widenAncestors(image)\n  image.classList.add('pagelib_widen_image_override')\n}\n\n/**\n * Widens an image if the image is found to be fit for widening.\n * @param  {!HTMLElement} image   The image in question\n * @return {boolean}              Whether or not 'image' was widened\n */\nconst maybeWidenImage = image => {\n  if (shouldWidenImage(image)) {\n    widenImage(image)\n    return true\n  }\n  return false\n}\n\nexport default {\n  maybeWidenImage,\n  test: {\n    ancestorsToWiden,\n    shouldWidenImage,\n    updateExistingStyleValue,\n    widenAncestors,\n    widenElementByUpdatingExistingStyles,\n    widenElementByUpdatingStyles\n  }\n}","import ElementUtilities from './ElementUtilities'\nimport NodeUtilities from './NodeUtilities'\nimport Polyfill from './Polyfill'\n\nconst REFERENCE_SELECTOR = '.reference, .mw-ref'\nconst CITE_HASH_PREFIX = '#cite_note'\n\n/**\n * Is Citation.\n * @param {!string} href\n * @return {!boolean}\n */\nconst isCitation = href => href.indexOf(CITE_HASH_PREFIX) > -1\n\n/**\n * Determines if node is a text node containing only whitespace.\n * @param {!Node} node\n * @return {!boolean}\n */\nconst isWhitespaceTextNode = node =>\n  Boolean(node) && node.nodeType === Node.TEXT_NODE && Boolean(node.textContent.match(/^\\s+$/))\n\n/**\n * Checks if element has a child anchor with a citation link.\n * @param {!Element} element\n * @return {!boolean}\n */\nconst hasCitationLink = element => {\n  const anchor = element.querySelector('a')\n  return anchor && isCitation(anchor.hash)\n}\n\n/**\n * Get the reference text container.\n * @param {!Document} document\n * @param {!Element} source\n * @return {?HTMLElement}\n */\nconst getRefTextContainer = (document, source) => {\n  const refTextContainerID = source.querySelector('A').getAttribute('href').slice(1)\n  const refTextContainer = document.getElementById(refTextContainerID)\n    || document.getElementById(decodeURIComponent(refTextContainerID))\n\n  return refTextContainer\n}\n\n/**\n * Extract reference text free of backlinks.\n * @param {!Document} document\n * @param {!Element} source\n * @return {!string}\n */\nconst collectRefText = (document, source) => {\n  const refTextContainer = getRefTextContainer(document, source)\n  if (!refTextContainer) {\n    return ''\n  }\n\n  // Clone what we're interested in into a frag so we can easily\n  // remove things without consequence to the 'live' document.\n  const frag = document.createDocumentFragment()\n  const fragDiv = document.createElement('div')\n  frag.appendChild(fragDiv)\n  // eslint-disable-next-line require-jsdoc\n  const cloneNodeIntoFragmentDiv = node => fragDiv.appendChild(node.cloneNode(true))\n  Array.prototype.slice.call(refTextContainer.childNodes)\n    .filter(NodeUtilities.isNodeTypeElementOrText)\n    .forEach(cloneNodeIntoFragmentDiv)\n\n  const removalSelector = 'link, style, sup[id^=cite_ref], .mw-cite-backlink'\n  Polyfill.querySelectorAll(fragDiv, removalSelector)\n    .forEach(node => node.remove())\n\n  return fragDiv.innerHTML.trim()\n}\n\n/**\n * Get closest element to node which has class `reference`. If node itself has class `reference`\n * returns the node.\n * @param {!Node} sourceNode\n * @return {?HTMLElement}\n */\nconst closestReferenceClassElement = sourceNode => {\n  if (Polyfill.matchesSelector(sourceNode, REFERENCE_SELECTOR)) {\n    return sourceNode\n  }\n  return ElementUtilities.findClosestAncestor(sourceNode, REFERENCE_SELECTOR)\n}\n\n/**\n * Reference item model.\n */\nclass ReferenceItem {\n  /**\n   * ReferenceItem construtor.\n   * @param {!string} id\n   * @param {!DOMRect} rect\n   * @param {?string} text\n   * @param {?string} html\n   */\n  constructor(id, rect, text, html) {\n    this.id = id\n    this.rect = rect\n    this.text = text\n    this.html = html\n  }\n}\n\n/**\n * Converts node to ReferenceItem.\n * @param {!Document} document\n * @param {!Node} node\n * @return {!ReferenceItem}\n */\nconst referenceItemForNode = (document, node) => new ReferenceItem(\n  closestReferenceClassElement(node).id,\n  node.getBoundingClientRect(),\n  node.textContent,\n  collectRefText(document, node)\n)\n\n/**\n * Container for nearby references including the index of the selected reference.\n */\nclass NearbyReferences {\n/**\n * @param {!number} selectedIndex\n * @param {!Array.<ReferenceItem>} referencesGroup\n * @return {!NearbyReferences}\n */\n  constructor(selectedIndex, referencesGroup) {\n    this.selectedIndex = selectedIndex\n    this.referencesGroup = referencesGroup\n  }\n}\n\n/**\n * Closure around a node for getting previous or next sibling.\n *\n * @typedef SiblingGetter\n * @param {!Node} node\n * @return {?Node}\n */\n\n/**\n  * Closure around `collectedNodes` for collecting reference nodes.\n  *\n  * @typedef Collector\n  * @param {!Node} node\n  * @return {void}\n  */\n\n/**\n * Get adjacent non-whitespace node.\n * @param {!Node} node\n * @param {!SiblingGetter} siblingGetter\n * @return {?Node}\n */\nconst adjacentNonWhitespaceNode = (node, siblingGetter) => {\n  let currentNode = node\n  do {\n    currentNode = siblingGetter(currentNode)\n  } while (isWhitespaceTextNode(currentNode))\n  return currentNode\n}\n\n/**\n * Collect adjacent reference nodes. The starting node is not collected.\n * @param {!Node} node\n * @param {!SiblingGetter} siblingGetter\n * @param {!Collector} nodeCollector\n * @return {void}\n */\nconst collectAdjacentReferenceNodes = (node, siblingGetter, nodeCollector) => {\n  let currentNode = node\n  while (true) {\n    currentNode = adjacentNonWhitespaceNode(currentNode, siblingGetter)\n    if (!currentNode || currentNode.nodeType !== Node.ELEMENT_NODE\n        || !hasCitationLink(currentNode)) {\n      break\n    }\n    nodeCollector(currentNode)\n  }\n}\n\n/* eslint-disable valid-jsdoc */\n/** @type {SiblingGetter} */\nconst prevSiblingGetter = node => node.previousSibling\n\n/** @type {SiblingGetter} */\nconst nextSiblingGetter = node => node.nextSibling\n/* eslint-enable valid-jsdoc */\n\n/**\n * Collect nearby reference nodes.\n * @param {!Node} sourceNode\n * @return {!Array.<Node>}\n */\nconst collectNearbyReferenceNodes = sourceNode => {\n  const collectedNodes = [sourceNode]\n\n  /* eslint-disable require-jsdoc */\n  // These are `Collector`s.\n  const collectedNodesUnshifter = node => collectedNodes.unshift(node)\n  const collectedNodesPusher = node => collectedNodes.push(node)\n  /* eslint-enable require-jsdoc */\n\n  collectAdjacentReferenceNodes(sourceNode, prevSiblingGetter, collectedNodesUnshifter)\n  collectAdjacentReferenceNodes(sourceNode, nextSiblingGetter, collectedNodesPusher)\n\n  return collectedNodes\n}\n\n/**\n * Collect nearby references.\n * @param {!Document} document\n * @param {!Node} sourceNode\n * @return {!NearbyReferences}\n */\nconst collectNearbyReferences = (document, sourceNode) => {\n  const sourceNodeParent = sourceNode.parentElement\n  const referenceNodes = collectNearbyReferenceNodes(sourceNodeParent)\n  const selectedIndex = referenceNodes.indexOf(sourceNodeParent)\n  const referencesGroup = referenceNodes.map(node => referenceItemForNode(document, node))\n  return new NearbyReferences(selectedIndex, referencesGroup)\n}\n\nexport default {\n  collectNearbyReferences,\n  isCitation,\n  test: {\n    adjacentNonWhitespaceNode,\n    closestReferenceClassElement,\n    collectAdjacentReferenceNodes,\n    collectNearbyReferenceNodes,\n    collectRefText,\n    getRefTextContainer,\n    hasCitationLink,\n    isWhitespaceTextNode,\n    nextSiblingGetter,\n    prevSiblingGetter\n  }\n}","import Polyfill from './Polyfill'\n\n/**\n * Configures span to be suitable replacement for red link anchor.\n * @param {!HTMLSpanElement} span The span element to configure as anchor replacement.\n * @param {!HTMLAnchorElement} anchor The anchor element being replaced.\n * @return {void}\n */\nconst configureRedLinkTemplate = (span, anchor) => {\n  span.innerHTML = anchor.innerHTML\n  span.setAttribute('class', anchor.getAttribute('class'))\n}\n\n/**\n * Finds red links in a document.\n * @param {!Document} content Document in which to seek red links.\n * @return {!Array.<HTMLAnchorElement>} Array of zero or more red link anchors.\n */\nconst redLinkAnchorsInDocument = content => Polyfill.querySelectorAll(content, 'a.new')\n\n/**\n * Makes span to be used as cloning template for red link anchor replacements.\n * @param  {!Document} document Document to use to create span element.\n * @return {!HTMLSpanElement} Span element suitable for use as template for red link anchor\n * replacements.\n */\nconst newRedLinkTemplate = document => document.createElement('span')\n\n/**\n * Replaces anchor with span.\n * @param  {!HTMLAnchorElement} anchor Anchor element.\n * @param  {!HTMLSpanElement} span Span element.\n * @return {void}\n */\nconst replaceAnchorWithSpan = (anchor, span) => anchor.parentNode.replaceChild(span, anchor)\n\n/**\n * Hides red link anchors in a document so they are unclickable and unfocusable.\n * @param {!Document} document Document in which to hide red links.\n * @return {void}\n */\nconst hideRedLinks = document => {\n  const spanTemplate = newRedLinkTemplate(document)\n  redLinkAnchorsInDocument(document)\n    .forEach(redLink => {\n      const span = spanTemplate.cloneNode(false)\n      configureRedLinkTemplate(span, redLink)\n      replaceAnchorWithSpan(redLink, span)\n    })\n}\n\nexport default {\n  hideRedLinks,\n  test: {\n    configureRedLinkTemplate,\n    redLinkAnchorsInDocument,\n    newRedLinkTemplate,\n    replaceAnchorWithSpan\n  }\n}","const CLASS = { ANDROID: 'pagelib_platform_android', IOS:  'pagelib_platform_ios' }\n\n// Regular expressions from https://phabricator.wikimedia.org/diffusion/EMFR/browse/master/resources/mobile.startup/browser.js;c89f371ea9e789d7e1a827ddfec7c8028a549c12.\n/**\n * @param {!Window} window\n * @return {!boolean} true if the user agent is Android, false otherwise.\n */\nconst isAndroid = window => /android/i.test(window.navigator.userAgent)\n\n/**\n * @param {!Window} window\n * @return {!boolean} true if the user agent is iOS, false otherwise.\n */\nconst isIOs = window => /ipad|iphone|ipod/i.test(window.navigator.userAgent)\n\n/**\n * @param {!Window} window\n * @return {void}\n */\nconst classify = window => {\n  const html = window.document.querySelector('html')\n  if (isAndroid(window)) { html.classList.add(CLASS.ANDROID) }\n  if (isIOs(window)) { html.classList.add(CLASS.IOS) }\n}\n\nexport default {\n  CLASS,\n  classify\n}","import CollapseTable from './CollapseTable'\nimport ElementUtilities from './ElementUtilities'\nimport LazyLoadTransform from './LazyLoadTransform'\nimport Throttle from './Throttle'\n\nconst EVENT_TYPES = ['scroll', 'resize', CollapseTable.SECTION_TOGGLED_EVENT_TYPE]\nconst THROTTLE_PERIOD_MILLISECONDS = 100\n\n/**\n * This class subscribes to key page events, applying lazy load transforms or inversions as\n * applicable. It has external dependencies on the section-toggled custom event and the following\n * standard browser events: resize, scroll.\n */\nexport default class {\n  /**\n   * @param {!Window} window\n   * @param {!number} loadDistanceMultiplier Images within this multiple of the screen height are\n   *                                         loaded in either direction.\n   */\n  constructor(window, loadDistanceMultiplier) {\n    this._window = window\n    this._loadDistanceMultiplier = loadDistanceMultiplier\n\n    this._placeholders = []\n    this._registered = false\n    this._throttledLoadPlaceholders = Throttle.wrap(window, THROTTLE_PERIOD_MILLISECONDS,\n      () => this._loadPlaceholders())\n  }\n\n  /**\n   * Convert images with placeholders. Calling this function may register this instance to listen to\n   * page events.\n   * @param {!Element} element\n   * @return {void}\n   */\n  convertImagesToPlaceholders(element) {\n    const images = LazyLoadTransform.queryLazyLoadableImages(element)\n    const placeholders = LazyLoadTransform.convertImagesToPlaceholders(this._window.document,\n      images)\n    this._placeholders = this._placeholders.concat(placeholders)\n    this._register()\n  }\n\n  /**\n   * Searches for existing placeholders in the DOM Document.\n   * This is an alternative to #convertImagesToPlaceholders if that was already done server-side.\n   * @param {!Element} element root element to start searching for placeholders\n   * @return {void}\n   */\n  collectExistingPlaceholders(element) {\n    const placeholders\n      = Array.from(element.querySelectorAll(`.${LazyLoadTransform.PLACEHOLDER_CLASS}`))\n    this._placeholders = this._placeholders.concat(placeholders)\n    this._register()\n  }\n\n  /**\n   * Manually trigger a load images check. Calling this function may deregister this instance from\n   * listening to page events.\n   * @return {void}\n   */\n  loadPlaceholders() { this._throttledLoadPlaceholders() }\n\n  /**\n   * This method may be safely called even when already unregistered. This function clears the\n   * record of placeholders.\n   * @return {void}\n   */\n  deregister() {\n    if (!this._registered) { return }\n\n    EVENT_TYPES.forEach(eventType =>\n      this._window.removeEventListener(eventType, this._throttledLoadPlaceholders))\n    this._throttledLoadPlaceholders.reset()\n\n    this._placeholders = []\n    this._registered = false\n  }\n\n  /**\n   * This method may be safely called even when already registered.\n   * @return {void}\n   */\n  _register() {\n    if (this._registered || !this._placeholders.length) { return }\n    this._registered = true\n\n    EVENT_TYPES.forEach(eventType =>\n      this._window.addEventListener(eventType, this._throttledLoadPlaceholders))\n  }\n\n  /** @return {void} */\n  _loadPlaceholders() {\n    this._placeholders = this._placeholders.filter(placeholder => {\n      let pending = true\n      if (this._isPlaceholderEligibleToLoad(placeholder)) {\n        LazyLoadTransform.loadPlaceholder(this._window.document, placeholder)\n        pending = false\n      }\n      return pending\n    })\n\n    if (this._placeholders.length === 0) {\n      this.deregister()\n    }\n  }\n\n  /**\n   * @param {!HTMLSpanElement} placeholder\n   * @return {!boolean}\n   */\n  _isPlaceholderEligibleToLoad(placeholder) {\n    return ElementUtilities.isVisible(placeholder)\n      && this._isPlaceholderWithinLoadDistance(placeholder)\n  }\n\n  /**\n   * @param {!HTMLSpanElement} placeholder\n   * @return {!boolean}\n   */\n  _isPlaceholderWithinLoadDistance(placeholder) {\n    const bounds = placeholder.getBoundingClientRect()\n    const range = this._window.innerHeight * this._loadDistanceMultiplier\n    return !(bounds.top > range || bounds.bottom < -range)\n  }\n}","import FooterContainer from './FooterContainer'\nimport FooterLegal from './FooterLegal'\nimport FooterReadMore from './FooterReadMore'\nimport Throttle from './Throttle'\n\nconst RESIZE_EVENT_TYPE = 'resize'\nconst RESIZE_LISTENER_THROTTLE_PERIOD_MILLISECONDS = 100\n\nconst ID_CONTAINER = 'pagelib_footer_container'\nconst ID_LEGAL_CONTAINER = 'pagelib_footer_container_legal'\n\nconst ID_READ_MORE_CONTAINER = 'pagelib_footer_container_readmore_pages'\nconst ID_READ_MORE_HEADER = 'pagelib_footer_container_readmore_heading'\n\n/** */\nexport default class {\n  /** */\n  constructor() {\n    this._resizeListener = undefined\n  }\n\n  /**\n   * @param {!Window} window\n   * @param {!Element} container\n   * @param {!string} baseURL\n   * @param {!string} title\n   * @param {!string} readMoreHeader\n   * @param {!number} readMoreLimit\n   * @param {!string} license\n   * @param {!string} licenseSubstitutionString\n   * @param {!FooterLegalClickCallback} licenseLinkClickHandler\n   * @param {!string} viewInBrowserString\n   * @param {!FooterBrowserClickCallback} browserLinkClickHandler\n   * @param {!TitlesShownHandler} titlesShownHandler\n   * @param {!SaveButtonClickHandler} saveButtonClickHandler\n   * @return {void}\n   */\n  add(window, container, baseURL, title, readMoreHeader, readMoreLimit, license,\n    licenseSubstitutionString, licenseLinkClickHandler, viewInBrowserString,\n    browserLinkClickHandler, titlesShownHandler,\n    saveButtonClickHandler) {\n    this.remove(window)\n    container.appendChild(FooterContainer.containerFragment(window.document))\n\n    FooterLegal.add(window.document, license, licenseSubstitutionString, ID_LEGAL_CONTAINER,\n      licenseLinkClickHandler, viewInBrowserString, browserLinkClickHandler)\n\n    FooterReadMore.setHeading(readMoreHeader, ID_READ_MORE_HEADER, window.document)\n    FooterReadMore.add(title, readMoreLimit, ID_READ_MORE_CONTAINER, baseURL,\n      saveButtonClickHandler, titles => {\n        FooterContainer.updateBottomPaddingToAllowReadMoreToScrollToTop(window)\n        titlesShownHandler(titles)\n      }, window.document)\n\n    this._resizeListener = Throttle.wrap(window, RESIZE_LISTENER_THROTTLE_PERIOD_MILLISECONDS,\n      () => FooterContainer.updateBottomPaddingToAllowReadMoreToScrollToTop(window))\n    window.addEventListener(RESIZE_EVENT_TYPE, this._resizeListener)\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {void}\n   */\n  remove(window) {\n    if (this._resizeListener) {\n      window.removeEventListener(RESIZE_EVENT_TYPE, this._resizeListener)\n      this._resizeListener.cancel()\n      this._resizeListener = undefined\n    }\n\n    const footer = window.document.getElementById(ID_CONTAINER)\n    if (footer) {\n      // todo: support recycling.\n      footer.parentNode.removeChild(footer)\n    }\n  }\n}","import './FooterMenu.css'\nimport CollectionUtilities from './CollectionUtilities'\n\n/**\n * @typedef {function} FooterMenuItemClickCallback\n * @param {!Array.<string>} payload Important - should return empty array if no payload strings.\n * @return {void}\n */\n\n/**\n * @typedef {number} MenuItemType\n */\n\n/**\n * Type representing kinds of menu items.\n * @enum {MenuItemType}\n */\nconst MenuItemType = {\n  languages: 1,\n  lastEdited: 2,\n  pageIssues: 3,\n  disambiguation: 4,\n  coordinate: 5,\n  talkPage: 6\n}\n\n/**\n * Menu item model.\n */\nclass MenuItem {\n  /**\n   * MenuItem constructor.\n   * @param {!string} title\n   * @param {?string} subtitle\n   * @param {!MenuItemType} itemType\n   * @param {FooterMenuItemClickCallback} clickHandler\n   */\n  constructor(title, subtitle, itemType, clickHandler) {\n    this.title = title\n    this.subtitle = subtitle\n    this.itemType = itemType\n    this.clickHandler = clickHandler\n    this.payload = []\n  }\n\n  /**\n   * Returns icon CSS class for this menu item based on its type.\n   * @return {!string}\n   */\n  iconClass() {\n    switch (this.itemType) {\n    case MenuItemType.languages:\n      return 'pagelib_footer_menu_icon_languages'\n    case MenuItemType.lastEdited:\n      return 'pagelib_footer_menu_icon_last_edited'\n    case MenuItemType.talkPage:\n      return 'pagelib_footer_menu_icon_talk_page'\n    case MenuItemType.pageIssues:\n      return 'pagelib_footer_menu_icon_page_issues'\n    case MenuItemType.disambiguation:\n      return 'pagelib_footer_menu_icon_disambiguation'\n    case MenuItemType.coordinate:\n      return 'pagelib_footer_menu_icon_coordinate'\n    default:\n      return ''\n    }\n  }\n\n  /**\n   * Extracts array of page issues, disambiguation titles, etc from element.\n   * @typedef {function} PayloadExtractor\n   * @param {!Document} document\n   * @param {?Element} element\n   * @return {!Array.<string>} Return empty array if nothing is extracted\n   */\n\n  /**\n   * Returns reference to function for extracting payload when this menu item is tapped.\n   * @return {?PayloadExtractor}\n   */\n  payloadExtractor() {\n    switch (this.itemType) {\n    case MenuItemType.pageIssues:\n      return CollectionUtilities.collectPageIssuesText\n    case MenuItemType.disambiguation:\n      // Adapt 'collectDisambiguationTitles' method signature to conform to PayloadExtractor type.\n      return (_, element) => CollectionUtilities.collectDisambiguationTitles(element)\n    default:\n      return undefined\n    }\n  }\n}\n\n/**\n * Makes document fragment for a menu item.\n * @param {!MenuItem} menuItem\n * @param {!Document} document\n * @return {!DocumentFragment}\n */\nconst documentFragmentForMenuItem = (menuItem, document) => {\n  const item = document.createElement('div')\n  item.className = 'pagelib_footer_menu_item'\n\n  const containerAnchor = document.createElement('a')\n  containerAnchor.addEventListener('click', () => {\n    menuItem.clickHandler(menuItem.payload)\n  })\n\n  item.appendChild(containerAnchor)\n\n  if (menuItem.title) {\n    const title = document.createElement('div')\n    title.className = 'pagelib_footer_menu_item_title'\n    title.innerText = menuItem.title\n    containerAnchor.title = menuItem.title\n    containerAnchor.appendChild(title)\n  }\n\n  if (menuItem.subtitle) {\n    const subtitle = document.createElement('div')\n    subtitle.className = 'pagelib_footer_menu_item_subtitle'\n    subtitle.innerText = menuItem.subtitle\n    containerAnchor.appendChild(subtitle)\n  }\n\n  const iconClass = menuItem.iconClass()\n  if (iconClass) {\n    item.classList.add(iconClass)\n  }\n\n  return document.createDocumentFragment().appendChild(item)\n}\n\n/**\n * Adds a MenuItem to a container.\n * @param {!MenuItem} menuItem\n * @param {!string} containerID\n * @param {!Document} document\n * @return {void}\n */\nconst addItem = (menuItem, containerID, document) => {\n  document.getElementById(containerID).appendChild(\n    documentFragmentForMenuItem(menuItem, document)\n  )\n}\n\n/**\n * Conditionally adds a MenuItem to a container.\n * @param {!string} title\n * @param {!string} subtitle\n * @param {!MenuItemType} itemType\n * @param {!string} containerID\n * @param {FooterMenuItemClickCallback} clickHandler\n * @param {!Document} document\n * @return {void}\n */\nconst maybeAddItem = (title, subtitle, itemType, containerID, clickHandler, document) => {\n  const item = new MenuItem(title, subtitle, itemType, clickHandler)\n\n  // Items are not added if they have a payload extractor which fails to extract anything.\n  const extractor = item.payloadExtractor()\n  if (extractor) {\n    item.payload = extractor(document, document.querySelector('div#content_block_0'))\n    if (item.payload.length === 0) {\n      return\n    }\n  }\n\n  addItem(item, containerID, document)\n}\n\n/**\n * Sets heading element string.\n * @param {!string} headingString\n * @param {!string} headingID\n * @param {!Document} document\n * @return {void}\n */\nconst setHeading = (headingString, headingID, document) => {\n  const headingElement = document.getElementById(headingID)\n  headingElement.innerText = headingString\n  headingElement.title = headingString\n}\n\nexport default {\n  MenuItemType, // todo: rename to just ItemType?\n  setHeading,\n  maybeAddItem\n}","import Polyfill from './Polyfill'\n\nconst ELEMENT_NODE = 1\n\n/**\n * Determine if paragraph is the one we are interested in.\n * @param  {!HTMLParagraphElement}  paragraphElement\n * @return {!boolean}\n */\nconst isParagraphEligible = paragraphElement => {\n  // Ignore 'coordinates' which are presently hidden. See enwiki 'Bolton Field' and 'Sharya Forest\n  // Museum Railway'. Not counting coordinates towards the eligible P min textContent length\n  // heuristic has dual effect of P's containing only coordinates being rejected, and P's containing\n  // coordinates but also other elements meeting the eligible P min textContent length being\n  // accepted.\n  const coordElement = paragraphElement.querySelector('[id=\"coordinates\"]')\n  const coordTextLength = !coordElement ? 0 : coordElement.textContent.length\n\n  // Ensures the paragraph has at least a little text. Otherwise silly things like a empty P or P\n  // which only contains a BR tag will get pulled up. See enwiki 'Hawaii', 'United States',\n  // 'Academy (educational institution)', 'Lovászpatona'\n  const minEligibleTextLength = 50\n  const hasEnoughEligibleText =\n    paragraphElement.textContent.length - coordTextLength >= minEligibleTextLength\n  return hasEnoughEligibleText\n}\n\n/**\n * Nodes we want to move up. This includes the `eligibleParagraph` and everything up to (but not\n * including) the next paragraph.\n * @param  {!HTMLParagraphElement} eligibleParagraph\n * @return {!Array.<Node>} Array of text nodes, elements, etc...\n */\nconst extractLeadIntroductionNodes = eligibleParagraph => {\n  const introNodes = []\n  let node = eligibleParagraph\n  do {\n    introNodes.push(node)\n    node = node.nextSibling\n  } while (node && !(node.nodeType === ELEMENT_NODE && node.tagName === 'P'))\n  return introNodes\n}\n\n/**\n * Locate first eligible paragraph. We don't want paragraphs from somewhere in the middle of a\n * table, so only paragraphs which are direct children of `containerID` element are considered.\n * @param  {!Document} document\n * @param  {!string} containerID ID of the section under examination.\n * @return {?HTMLParagraphElement}\n */\nconst getEligibleParagraph = (document, containerID) =>\n  Polyfill.querySelectorAll(document, `#${containerID} > p`).find(isParagraphEligible)\n\n/**\n * Instead of moving the infobox down beneath the first P tag, move the first eligible P tag\n * (and related elements) up. This ensures some text will appear above infoboxes, tables, images\n * etc. This method does not do a 'mainpage' check - do so before calling it.\n * @param  {!Document} document\n * @param  {!string} containerID ID of the section under examination.\n * @param  {?Element} afterElement Element after which paragraph will be moved. If not specified\n * paragraph will be move to top of `containerID` element.\n * @return {void}\n */\nconst moveLeadIntroductionUp = (document, containerID, afterElement) => {\n  const eligibleParagraph = getEligibleParagraph(document, containerID)\n  if (!eligibleParagraph) {\n    return\n  }\n\n  // A light-weight fragment to hold everything we want to move up.\n  const fragment = document.createDocumentFragment()\n  // DocumentFragment's `appendChild` attaches the element to the fragment AND removes it from DOM.\n  extractLeadIntroductionNodes(eligibleParagraph).forEach(element => fragment.appendChild(element))\n\n  const container = document.getElementById(containerID)\n  const insertBeforeThisElement = !afterElement ? container.firstChild : afterElement.nextSibling\n\n  // Attach the fragment just before `insertBeforeThisElement`. Conveniently, `insertBefore` on a\n  // DocumentFragment inserts 'the children of the fragment, not the fragment itself.', so no\n  // unnecessary container element is introduced.\n  // https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\n  container.insertBefore(fragment, insertBeforeThisElement)\n}\n\nexport default {\n  moveLeadIntroductionUp,\n  test: {\n    isParagraphEligible,\n    extractLeadIntroductionNodes,\n    getEligibleParagraph\n  }\n}","import './EditTransform.css'\n\nconst CLASS = {\n  SECTION_HEADER: 'pagelib_edit_section_header',\n  TITLE: 'pagelib_edit_section_title',\n  LINK_CONTAINER: 'pagelib_edit_section_link_container',\n  LINK: 'pagelib_edit_section_link',\n  PROTECTION: { UNPROTECTED: '', PROTECTED: 'page-protected', FORBIDDEN: 'no-editing' }\n}\n\nconst DATA_ATTRIBUTE = { SECTION_INDEX: 'data-id', ACTION: 'data-action' }\nconst ACTION_EDIT_SECTION = 'edit_section'\n\n/**\n * @param {!Document} document\n * @param {!number} index The zero-based index of the section.\n * @return {!HTMLAnchorElement}\n */\nconst newEditSectionLink = (document, index) => {\n  const link = document.createElement('a')\n  link.href = ''\n  link.setAttribute(DATA_ATTRIBUTE.SECTION_INDEX, index)\n  link.setAttribute(DATA_ATTRIBUTE.ACTION, ACTION_EDIT_SECTION)\n  link.classList.add(CLASS.LINK)\n  return link\n}\n\n/**\n * @param {!Document} document\n * @param {!number} index The zero-based index of the section.\n * @return {!HTMLSpanElement}\n */\nconst newEditSectionButton = (document, index) => {\n  const container = document.createElement('span')\n  container.classList.add(CLASS.LINK_CONTAINER)\n\n  const link = newEditSectionLink(document, index)\n  container.appendChild(link)\n\n  return container\n}\n\n/**\n * As a client, you may wish to set the ID attribute.\n * @param {!Document} document\n * @param {!number} index The zero-based index of the section.\n * @param {!number} level The *one-based* header or table of contents level.\n * @param {?string} titleHTML Title of this section header.\n * @param {?boolean} showEditPencil Whether to show the \"edit\" pencil (default is true).\n * @return {!HTMLElement}\n */\nconst newEditSectionHeader = (document, index, level, titleHTML, showEditPencil = true) => {\n  const element = document.createElement('div')\n  element.className = CLASS.SECTION_HEADER\n\n  const title = document.createElement(`h${level}`)\n  title.innerHTML = titleHTML || ''\n  title.className = CLASS.TITLE\n  title.setAttribute(DATA_ATTRIBUTE.SECTION_INDEX, index)\n  element.appendChild(title)\n\n  if (showEditPencil) {\n    const button = newEditSectionButton(document, index)\n    element.appendChild(button)\n  }\n\n  return element\n}\n\nexport default {\n  CLASS,\n  newEditSectionButton,\n  newEditSectionHeader\n}","import './DimImagesTransform.css'\nconst CLASS = 'pagelib_dim_images'\n\n// todo: only require a Document\n/**\n * @param {!Window} window\n * @param {!boolean} enable\n * @return {void}\n */\nconst dim = (window, enable) => {\n  window.document.querySelector('html')\n    .classList[enable ? 'add' : 'remove'](CLASS)\n}\n\n// todo: only require a Document\n/**\n * @param {!Window} window\n * @return {boolean}\n */\nconst isDim = window => window.document.querySelector('html')\n  .classList.contains(CLASS)\n\nexport default {\n  CLASS,\n  isDim,\n  dim\n}","const COMPATIBILITY = {\n  FILTER: 'pagelib_compatibility_filter'\n}\n\n/**\n * @param {!Document} document\n * @param {!Array.<string>} properties\n * @param {!string} value\n * @return {void}\n */\nconst isStyleSupported = (document, properties, value) => {\n  const element = document.createElement('span')\n  return properties.some(property => {\n    element.style[property] = value\n    return element.style.cssText\n  })\n}\n\n/**\n * @param {!Document} document\n * @return {void}\n */\nconst isFilterSupported = document =>\n  isStyleSupported(document, ['webkitFilter', 'filter'], 'blur(0)')\n\n/**\n * @param {!Document} document\n * @return {void}\n */\nconst enableSupport = document => {\n  const html = document.querySelector('html')\n  if (!isFilterSupported(document)) { html.classList.add(COMPATIBILITY.FILTER) }\n}\n\nexport default {\n  COMPATIBILITY,\n  enableSupport\n}","import './ThemeTransform.css'\nimport ElementUtilities from './ElementUtilities'\nimport Polyfill from './Polyfill'\n\n// Elements marked with these classes indicate certain ancestry constraints that are\n// difficult to describe as CSS selectors.\nconst CONSTRAINT = {\n  IMAGE_PRESUMES_WHITE_BACKGROUND: 'pagelib_theme_image_presumes_white_background',\n  DIV_DO_NOT_APPLY_BASELINE: 'pagelib_theme_div_do_not_apply_baseline'\n}\n\n// Theme to CSS classes.\nconst THEME = {\n  DEFAULT: 'pagelib_theme_default',\n  DARK: 'pagelib_theme_dark',\n  SEPIA: 'pagelib_theme_sepia',\n  BLACK: 'pagelib_theme_black'\n}\n\n/**\n * @param {!Document} document\n * @param {!string} theme\n * @return {void}\n */\nconst setTheme = (document, theme) => {\n  const html = document.querySelector('html')\n\n  // Set the new theme.\n  html.classList.add(theme)\n\n  // Clear any previous theme.\n  for (const key in THEME) {\n    if (Object.prototype.hasOwnProperty.call(THEME, key) && THEME[key] !== theme) {\n      html.classList.remove(THEME[key])\n    }\n  }\n}\n\n/**\n * Football template image filename regex.\n * https://en.wikipedia.org/wiki/Template:Football_kit/pattern_list\n * @type {RegExp}\n */\nconst footballTemplateImageFilenameRegex =\n  new RegExp('Kit_(body|socks|shorts|right_arm|left_arm)(.*).png$')\n\n/* en > Away colours > 793128975 */\n/* en > Manchester United F.C. > 793244653 */\n/**\n * Determines whether white background should be added to image.\n * @param  {!HTMLImageElement} image\n * @return {!boolean}\n */\nconst imagePresumesWhiteBackground = image => {\n  if (footballTemplateImageFilenameRegex.test(image.src)) {\n    return false\n  }\n  if (image.classList.contains('mwe-math-fallback-image-inline')) {\n    return false\n  }\n  return !ElementUtilities.closestInlineStyle(image, 'background')\n}\n\n/**\n * Annotate elements with CSS classes that can be used by CSS rules. The classes themselves are not\n * theme-dependent so classification only need only occur once after the content is loaded, not\n * every time the theme changes.\n * @param {!Element} element\n * @return {void}\n */\nconst classifyElements = element => {\n  Polyfill.querySelectorAll(element, 'img')\n    .filter(imagePresumesWhiteBackground)\n    .forEach(image => {\n      image.classList.add(CONSTRAINT.IMAGE_PRESUMES_WHITE_BACKGROUND)\n    })\n  /* en > Away colours > 793128975 */\n  /* en > Manchester United F.C. > 793244653 */\n  /* en > Pantone > 792312384 */\n  /* en > Wikipedia:Graphs_and_charts > 801754530 */\n  /* en > PepsiCo > 807406166 */\n  /* en > Lua_(programming_language) > 809310207 */\n  const selector = [\n    'div.color_swatch div',\n    'div[style*=\"position: absolute\"]',\n    'div.barbox table div[style*=\"background:\"]',\n    'div.chart div[style*=\"background-color\"]',\n    'div.chart ul li span[style*=\"background-color\"]',\n    'span.legend-color',\n    'div.mw-highlight span',\n    'code.mw-highlight span',\n    '.BrickChartTemplate div',\n    '.PieChartTemplate div',\n    '.BarChartTemplate div',\n    '.StackedBarTemplate td',\n    '.chess-board div'\n  ].join()\n  Polyfill.querySelectorAll(element, selector).forEach(element =>\n    element.classList.add(CONSTRAINT.DIV_DO_NOT_APPLY_BASELINE))\n}\n\nexport default {\n  CONSTRAINT,\n  THEME,\n  setTheme,\n  classifyElements\n}","/* eslint-disable sort-imports */\n\n// We want the theme transform to be first. This is because the theme transform CSS has to use\n// some '!important' CSS modifiers to reliably set themes on elements which may contain inline\n// styles. Moving it to the top of the file is necessary so other transforms can override\n// these '!important' themes transform CSS bits if needed. Note - if other transforms have trouble\n// overriding things changed by theme transform remember to match or exceed the selector specificity\n// used by the theme transform for whatever it is you are trying to override.\nimport ThemeTransform from './ThemeTransform'\n\nimport CollapseTable from './CollapseTable'\nimport CollectionUtilities from './CollectionUtilities'\nimport CompatibilityTransform from './CompatibilityTransform'\nimport DimImagesTransform from './DimImagesTransform'\nimport EditTransform from './EditTransform'\nimport ElementGeometry from './ElementGeometry'\nimport ElementUtilities from './ElementUtilities'\nimport LeadIntroductionTransform from './LeadIntroductionTransform'\nimport FooterContainer from './FooterContainer'\nimport FooterLegal from './FooterLegal'\nimport FooterMenu from './FooterMenu'\nimport FooterReadMore from './FooterReadMore'\nimport FooterTransformer from './FooterTransformer'\nimport LazyLoadTransform from './LazyLoadTransform'\nimport LazyLoadTransformer from './LazyLoadTransformer'\nimport PlatformTransform from './PlatformTransform'\nimport Polyfill from './Polyfill'\nimport RedLinks from './RedLinks'\nimport ReferenceCollection from './ReferenceCollection'\nimport Throttle from './Throttle'\nimport WidenImage from './WidenImage'\n\nexport default {\n  // todo: rename CollapseTableTransform.\n  CollapseTable,\n  CollectionUtilities,\n  CompatibilityTransform,\n  DimImagesTransform,\n  EditTransform,\n  // todo: rename Footer.ContainerTransform, Footer.LegalTransform, Footer.MenuTransform,\n  //       Footer.ReadMoreTransform.\n  LeadIntroductionTransform,\n  FooterContainer,\n  FooterLegal,\n  FooterMenu,\n  FooterReadMore,\n  FooterTransformer,\n  LazyLoadTransform,\n  LazyLoadTransformer,\n  PlatformTransform,\n  // todo: rename RedLinkTransform.\n  RedLinks,\n  ReferenceCollection,\n  ThemeTransform,\n  // todo: rename WidenImageTransform.\n  WidenImage,\n  test: {\n    ElementGeometry,\n    ElementUtilities,\n    Polyfill,\n    Throttle\n  }\n}"],"sourceRoot":""}